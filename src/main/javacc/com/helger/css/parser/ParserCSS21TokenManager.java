/* ParserCSS21TokenManager.java */
/* Generated By:JJTree&JavaCC: Do not edit this line. ParserCSS21TokenManager.java */
package com.helger.css.parser;

/** Token Manager. */
@SuppressWarnings("unused")public class ParserCSS21TokenManager implements ParserCSS21Constants {
  private static final org.slf4j.Logger s_aLogger = org.slf4j.LoggerFactory.getLogger (ParserCSS21TokenManager.class);

  void backup(final int nChars) {
    input_stream.backup(nChars);
  }

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_0(int pos, long active0, long active1){
   switch (pos)
   {
      case 0:
         if ((active0 & 0x100800000000L) != 0L)
            return 548;
         if ((active0 & 0x20000000L) != 0L)
            return 549;
         if ((active0 & 0x400000002L) != 0L)
            return 228;
         if ((active0 & 0x10000000000000L) != 0L || (active1 & 0x200L) != 0L)
         {
            jjmatchedKind = 53;
            jjmatchedPos = 0;
            return 550;
         }
         if ((active0 & 0x3e00000000000L) != 0L)
            return 22;
         if ((active0 & 0x200000000L) != 0L)
            return 551;
         return -1;
      case 1:
         if ((active0 & 0x3e00000000000L) != 0L)
         {
            jjmatchedKind = 50;
            jjmatchedPos = 1;
            return 552;
         }
         if ((active0 & 0x10000000000000L) != 0L || (active1 & 0x200L) != 0L)
         {
            jjmatchedKind = 53;
            jjmatchedPos = 1;
            return 550;
         }
         return -1;
      case 2:
         if ((active0 & 0x10000000000000L) != 0L || (active1 & 0x200L) != 0L)
         {
            jjmatchedKind = 53;
            jjmatchedPos = 2;
            return 550;
         }
         if ((active0 & 0x3e00000000000L) != 0L)
         {
            jjmatchedKind = 50;
            jjmatchedPos = 2;
            return 552;
         }
         return -1;
      case 3:
         if ((active0 & 0x3e00000000000L) != 0L)
         {
            jjmatchedKind = 50;
            jjmatchedPos = 3;
            return 552;
         }
         if ((active0 & 0x10000000000000L) != 0L || (active1 & 0x200L) != 0L)
         {
            jjmatchedKind = 53;
            jjmatchedPos = 3;
            return 550;
         }
         return -1;
      case 4:
         if ((active0 & 0x2e00000000000L) != 0L)
         {
            jjmatchedKind = 50;
            jjmatchedPos = 4;
            return 552;
         }
         if ((active0 & 0x1000000000000L) != 0L)
            return 552;
         if ((active0 & 0x10000000000000L) != 0L || (active1 & 0x200L) != 0L)
         {
            jjmatchedKind = 53;
            jjmatchedPos = 4;
            return 550;
         }
         return -1;
      case 5:
         if ((active0 & 0x10000000000000L) != 0L || (active1 & 0x200L) != 0L)
         {
            jjmatchedKind = 53;
            jjmatchedPos = 5;
            return 550;
         }
         if ((active0 & 0x2000000000000L) != 0L)
            return 552;
         if ((active0 & 0xe00000000000L) != 0L)
         {
            jjmatchedKind = 50;
            jjmatchedPos = 5;
            return 552;
         }
         return -1;
      case 6:
         if ((active0 & 0x400000000000L) != 0L)
            return 552;
         if ((active0 & 0x10000000000000L) != 0L)
            return 550;
         if ((active0 & 0xa00000000000L) != 0L)
         {
            jjmatchedKind = 50;
            jjmatchedPos = 6;
            return 552;
         }
         if ((active1 & 0x200L) != 0L)
         {
            jjmatchedKind = 53;
            jjmatchedPos = 6;
            return 550;
         }
         return -1;
      case 7:
         if ((active0 & 0x800000000000L) != 0L)
         {
            jjmatchedKind = 50;
            jjmatchedPos = 7;
            return 552;
         }
         if ((active0 & 0x200000000000L) != 0L)
            return 552;
         if ((active1 & 0x200L) != 0L)
         {
            jjmatchedKind = 53;
            jjmatchedPos = 7;
            return 550;
         }
         return -1;
      case 8:
         if ((active1 & 0x200L) != 0L)
         {
            jjmatchedKind = 53;
            jjmatchedPos = 8;
            return 550;
         }
         if ((active0 & 0x800000000000L) != 0L)
         {
            jjmatchedKind = 50;
            jjmatchedPos = 8;
            return 552;
         }
         return -1;
      case 9:
         if ((active0 & 0x800000000000L) != 0L)
            return 552;
         if ((active1 & 0x200L) != 0L)
         {
            jjmatchedKind = 53;
            jjmatchedPos = 9;
            return 550;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0, long active1){
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0, active1), pos + 1);
}
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_0(){
   switch(curChar)
   {
      case 40:
         return jjStopAtPos(0, 27);
      case 41:
         return jjStopAtPos(0, 28);
      case 42:
         return jjStartNfaWithStates_0(0, 33, 551);
      case 43:
         return jjStopAtPos(0, 38);
      case 45:
         {
         jjmatchedKind = 35;
         jjmatchedPos = 0;
         }
         return jjMoveStringLiteralDfa1_0(0x100000000000L, 0x0L);
      case 46:
         return jjStartNfaWithStates_0(0, 29, 549);
      case 47:
         {
         jjmatchedKind = 34;
         jjmatchedPos = 0;
         }
         return jjMoveStringLiteralDfa1_0(0x2L, 0x0L);
      case 58:
         return jjStopAtPos(0, 32);
      case 59:
         return jjStopAtPos(0, 31);
      case 60:
         return jjMoveStringLiteralDfa1_0(0x80000000000L, 0x0L);
      case 61:
         return jjStopAtPos(0, 36);
      case 62:
         return jjStopAtPos(0, 39);
      case 64:
         return jjMoveStringLiteralDfa1_0(0x3e00000000000L, 0x0L);
      case 91:
         return jjStopAtPos(0, 25);
      case 93:
         return jjStopAtPos(0, 26);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x200L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa1_0(0x10000000000000L, 0x0L);
      case 124:
         {
         jjmatchedKind = 37;
         jjmatchedPos = 0;
         }
         return jjMoveStringLiteralDfa1_0(0x40000000000L, 0x0L);
      case 125:
         return jjStopAtPos(0, 24);
      case 126:
         return jjMoveStringLiteralDfa1_0(0x20000000000L, 0x0L);
      default :
         return jjMoveNfa_0(2, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active0, long active1){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0, active1);
      return 1;
   }
   switch(curChar)
   {
      case 33:
         return jjMoveStringLiteralDfa2_0(active0, 0x80000000000L, active1, 0L);
      case 42:
         if ((active0 & 0x2L) != 0L)
            return jjStopAtPos(1, 1);
         break;
      case 45:
         return jjMoveStringLiteralDfa2_0(active0, 0x100000000000L, active1, 0L);
      case 61:
         if ((active0 & 0x20000000000L) != 0L)
            return jjStopAtPos(1, 41);
         else if ((active0 & 0x40000000000L) != 0L)
            return jjStopAtPos(1, 42);
         break;
      case 67:
      case 99:
         return jjMoveStringLiteralDfa2_0(active0, 0x200000000000L, active1, 0L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa2_0(active0, 0x400000000000L, active1, 0L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa2_0(active0, 0x2000000000000L, active1, 0L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa2_0(active0, 0x10800000000000L, active1, 0L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa2_0(active0, 0x1000000000000L, active1, 0L);
      case 88:
      case 120:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x200L);
      default :
         break;
   }
   return jjStartNfa_0(0, active0, active1);
}
private int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(0, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0, active1);
      return 2;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa3_0(active0, 0x80000000000L, active1, 0L);
      case 62:
         if ((active0 & 0x100000000000L) != 0L)
            return jjStopAtPos(2, 44);
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa3_0(active0, 0x1800000000000L, active1, 0L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa3_0(active0, 0x2000000000000L, active1, 0L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa3_0(active0, 0x10200000000000L, active1, 0L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa3_0(active0, 0x400000000000L, active1, 0L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x200L);
      default :
         break;
   }
   return jjStartNfa_0(1, active0, active1);
}
private int jjMoveStringLiteralDfa3_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(1, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0, active1);
      return 3;
   }
   switch(curChar)
   {
      case 45:
         if ((active0 & 0x80000000000L) != 0L)
            return jjStopAtPos(3, 43);
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa4_0(active0, 0x200000000000L, active1, 0L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa4_0(active0, 0x2000000000000L, active1, 0L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa4_0(active0, 0x10000000000000L, active1, 0L);
      case 71:
      case 103:
         return jjMoveStringLiteralDfa4_0(active0, 0x1000000000000L, active1, 0L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa4_0(active0, 0x800000000000L, active1, 0L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa4_0(active0, 0x400000000000L, active1, 0L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x200L);
      default :
         break;
   }
   return jjStartNfa_0(2, active0, active1);
}
private int jjMoveStringLiteralDfa4_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(2, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, active0, active1);
      return 4;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         if ((active0 & 0x1000000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 48, 552);
         return jjMoveStringLiteralDfa5_0(active0, 0x800000000000L, active1, 0x200L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa5_0(active0, 0x2000000000000L, active1, 0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa5_0(active0, 0x400000000000L, active1, 0L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa5_0(active0, 0x10200000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(3, active0, active1);
}
private int jjMoveStringLiteralDfa5_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(3, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(4, active0, active1);
      return 5;
   }
   switch(curChar)
   {
      case 65:
      case 97:
         if ((active0 & 0x2000000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 49, 552);
         break;
      case 73:
      case 105:
         return jjMoveStringLiteralDfa6_0(active0, 0x10000000000000L, active1, 0L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa6_0(active0, 0x400000000000L, active1, 0L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa6_0(active0, 0xa00000000000L, active1, 0x200L);
      default :
         break;
   }
   return jjStartNfa_0(4, active0, active1);
}
private int jjMoveStringLiteralDfa6_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(4, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(5, active0, active1);
      return 6;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         return jjMoveStringLiteralDfa7_0(active0, 0x200000000000L, active1, 0L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa7_0(active0, 0x800000000000L, active1, 0L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0x200L);
      case 84:
      case 116:
         if ((active0 & 0x400000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 46, 552);
         else if ((active0 & 0x10000000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 52, 550);
         break;
      default :
         break;
   }
   return jjStartNfa_0(5, active0, active1);
}
private int jjMoveStringLiteralDfa7_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(5, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(6, active0, active1);
      return 7;
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa8_0(active0, 0x800000000000L, active1, 0L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa8_0(active0, 0L, active1, 0x200L);
      case 84:
      case 116:
         if ((active0 & 0x200000000000L) != 0L)
            return jjStartNfaWithStates_0(7, 45, 552);
         break;
      default :
         break;
   }
   return jjStartNfa_0(6, active0, active1);
}
private int jjMoveStringLiteralDfa8_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(6, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(7, active0, active1);
      return 8;
   }
   switch(curChar)
   {
      case 67:
      case 99:
         return jjMoveStringLiteralDfa9_0(active0, 0x800000000000L, active1, 0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa9_0(active0, 0L, active1, 0x200L);
      default :
         break;
   }
   return jjStartNfa_0(7, active0, active1);
}
private int jjMoveStringLiteralDfa9_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(7, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(8, active0, active1);
      return 9;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         if ((active0 & 0x800000000000L) != 0L)
            return jjStartNfaWithStates_0(9, 47, 552);
         break;
      case 78:
      case 110:
         return jjMoveStringLiteralDfa10_0(active0, 0L, active1, 0x200L);
      default :
         break;
   }
   return jjStartNfa_0(8, active0, active1);
}
private int jjMoveStringLiteralDfa10_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(8, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(9, 0L, active1);
      return 10;
   }
   switch(curChar)
   {
      case 40:
         if ((active1 & 0x200L) != 0L)
            return jjStopAtPos(10, 73);
         break;
      default :
         break;
   }
   return jjStartNfa_0(9, 0L, active1);
}
private int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
static final long[] jjbitVec0 = {
   0xfffffffffffffffeL, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec2 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 548;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 551:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(0, 2); }
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(3, 5); }
                  break;
               case 2:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 22)
                        kind = 22;
                     { jjCheckNAddStates(6, 80); }
                  }
                  else if ((0x100003600L & l) != 0L)
                  {
                     if (kind > 4)
                        kind = 4;
                     { jjCheckNAddStates(81, 86); }
                  }
                  else if (curChar == 42)
                     { jjCheckNAddStates(87, 92); }
                  else if (curChar == 36)
                     { jjCheckNAddStates(93, 98); }
                  else if (curChar == 45)
                     { jjCheckNAddStates(99, 102); }
                  else if (curChar == 46)
                     { jjCheckNAddStates(103, 120); }
                  else if (curChar == 39)
                  {
                     if (kind > 18)
                        kind = 18;
                     { jjCheckNAddStates(121, 125); }
                  }
                  else if (curChar == 34)
                  {
                     if (kind > 17)
                        kind = 17;
                     { jjCheckNAddStates(126, 130); }
                  }
                  else if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 228;
                  else if (curChar == 33)
                     { jjCheckNAddTwoStates(61, 70); }
                  else if (curChar == 35)
                     { jjCheckNAddTwoStates(3, 4); }
                  else if (curChar == 44)
                  {
                     if (kind > 30)
                        kind = 30;
                  }
                  break;
               case 549:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(131, 136); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(440, 441); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(436, 439); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(433, 435); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(431, 432); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(428, 430); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(423, 427); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(419, 422); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(415, 418); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(412, 414); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(409, 411); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(406, 408); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(403, 405); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(400, 402); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(397, 399); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(394, 396); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(391, 393); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 22)
                        kind = 22;
                     { jjCheckNAdd(390); }
                  }
                  break;
               case 550:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(137, 139); }
                  else if (curChar == 40)
                  {
                     if (kind > 74)
                        kind = 74;
                  }
                  if ((0x3ff200000000000L & l) != 0L)
                  {
                     if (kind > 53)
                        kind = 53;
                     { jjCheckNAddTwoStates(244, 245); }
                  }
                  break;
               case 22:
                  if (curChar == 42)
                     { jjCheckNAddStates(140, 142); }
                  else if (curChar == 36)
                     { jjCheckNAddStates(143, 145); }
                  else if (curChar == 45)
                     { jjCheckNAddTwoStates(23, 42); }
                  break;
               case 552:
               case 24:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  { jjCheckNAddTwoStates(24, 25); }
                  break;
               case 1:
                  if (curChar == 44 && kind > 30)
                     kind = 30;
                  break;
               case 3:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddTwoStates(3, 4); }
                  break;
               case 5:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddTwoStates(3, 4); }
                  break;
               case 6:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddStates(146, 154); }
                  break;
               case 7:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddStates(155, 158); }
                  break;
               case 8:
                  if (curChar != 10)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddTwoStates(3, 4); }
                  break;
               case 9:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 10:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddTwoStates(3, 4); }
                  break;
               case 11:
               case 13:
               case 16:
               case 20:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(7); }
                  break;
               case 12:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 14:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 15:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 17:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 18:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 19:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 26:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  { jjCheckNAddTwoStates(24, 25); }
                  break;
               case 27:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  { jjCheckNAddStates(159, 167); }
                  break;
               case 28:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  { jjCheckNAddStates(168, 171); }
                  break;
               case 29:
                  if (curChar != 10)
                     break;
                  if (kind > 50)
                     kind = 50;
                  { jjCheckNAddTwoStates(24, 25); }
                  break;
               case 30:
               case 45:
                  if (curChar == 13)
                     { jjCheckNAdd(29); }
                  break;
               case 31:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  { jjCheckNAddTwoStates(24, 25); }
                  break;
               case 32:
               case 34:
               case 37:
               case 41:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(28); }
                  break;
               case 33:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 34;
                  break;
               case 35:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 36;
                  break;
               case 36:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 38:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 39:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 40;
                  break;
               case 40:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 43:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  { jjCheckNAddStates(172, 180); }
                  break;
               case 44:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  { jjCheckNAddStates(181, 184); }
                  break;
               case 46:
               case 48:
               case 51:
               case 55:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(44); }
                  break;
               case 47:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 48;
                  break;
               case 49:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 50;
                  break;
               case 50:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 52:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 53;
                  break;
               case 53:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 54;
                  break;
               case 54:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 55;
                  break;
               case 56:
                  if (curChar == 36)
                     { jjCheckNAddStates(143, 145); }
                  break;
               case 57:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(143, 145); }
                  break;
               case 58:
                  if (curChar == 42)
                     { jjCheckNAddStates(140, 142); }
                  break;
               case 59:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(140, 142); }
                  break;
               case 60:
                  if (curChar == 33)
                     { jjCheckNAddTwoStates(61, 70); }
                  break;
               case 61:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(61, 70); }
                  break;
               case 71:
                  if (curChar == 40)
                     { jjCheckNAddStates(185, 190); }
                  break;
               case 72:
                  if (curChar == 34)
                     { jjCheckNAddStates(191, 193); }
                  break;
               case 73:
                  if ((0xfffffffbffffcbffL & l) != 0L)
                     { jjCheckNAddStates(191, 193); }
                  break;
               case 74:
                  if (curChar == 34)
                     { jjCheckNAddTwoStates(75, 76); }
                  break;
               case 75:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(75, 76); }
                  break;
               case 76:
                  if (curChar == 41 && kind > 72)
                     kind = 72;
                  break;
               case 78:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(191, 193); }
                  break;
               case 79:
                  if (curChar == 10)
                     { jjCheckNAddStates(191, 193); }
                  break;
               case 80:
               case 84:
                  if (curChar == 13)
                     { jjCheckNAdd(79); }
                  break;
               case 81:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(191, 193); }
                  break;
               case 82:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(194, 203); }
                  break;
               case 83:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(204, 208); }
                  break;
               case 85:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(191, 193); }
                  break;
               case 86:
               case 88:
               case 91:
               case 95:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(83); }
                  break;
               case 87:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 88;
                  break;
               case 89:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 90;
                  break;
               case 90:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 91;
                  break;
               case 92:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 93;
                  break;
               case 93:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 94;
                  break;
               case 94:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 95;
                  break;
               case 96:
                  if (curChar == 39)
                     { jjCheckNAddStates(209, 211); }
                  break;
               case 97:
                  if ((0xffffff7fffffcbffL & l) != 0L)
                     { jjCheckNAddStates(209, 211); }
                  break;
               case 98:
                  if (curChar == 39)
                     { jjCheckNAddTwoStates(75, 76); }
                  break;
               case 100:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(209, 211); }
                  break;
               case 101:
                  if (curChar == 10)
                     { jjCheckNAddStates(209, 211); }
                  break;
               case 102:
               case 106:
                  if (curChar == 13)
                     { jjCheckNAdd(101); }
                  break;
               case 103:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(209, 211); }
                  break;
               case 104:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(212, 221); }
                  break;
               case 105:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(222, 226); }
                  break;
               case 107:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(209, 211); }
                  break;
               case 108:
               case 110:
               case 113:
               case 117:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(105); }
                  break;
               case 109:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 110;
                  break;
               case 111:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 112;
                  break;
               case 112:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 113;
                  break;
               case 114:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 115;
                  break;
               case 115:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 116;
                  break;
               case 116:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 117;
                  break;
               case 118:
                  if ((0xfffffc7a00000000L & l) != 0L)
                     { jjCheckNAddStates(227, 230); }
                  break;
               case 120:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(227, 230); }
                  break;
               case 121:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(231, 240); }
                  break;
               case 122:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(241, 245); }
                  break;
               case 123:
                  if (curChar == 10)
                     { jjCheckNAddStates(227, 230); }
                  break;
               case 124:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 123;
                  break;
               case 125:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(227, 230); }
                  break;
               case 126:
               case 128:
               case 131:
               case 135:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(122); }
                  break;
               case 127:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 128;
                  break;
               case 129:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 130;
                  break;
               case 130:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 131;
                  break;
               case 132:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 133;
                  break;
               case 133:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 134;
                  break;
               case 134:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 135;
                  break;
               case 136:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(246, 252); }
                  break;
               case 141:
                  if ((0x100003600L & l) != 0L)
                     { jjAddStates(253, 254); }
                  break;
               case 142:
                  if (curChar == 58)
                     { jjCheckNAddStates(255, 260); }
                  break;
               case 143:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(255, 260); }
                  break;
               case 144:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(145, 205); }
                  break;
               case 146:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(261, 265); }
                  break;
               case 147:
                  if (curChar == 46)
                     { jjCheckNAddStates(266, 270); }
                  break;
               case 148:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(149, 170); }
                  break;
               case 150:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(271, 275); }
                  break;
               case 151:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(151, 152); }
                  break;
               case 152:
                  if (curChar == 40 && kind > 74)
                     kind = 74;
                  break;
               case 154:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(271, 275); }
                  break;
               case 155:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(276, 286); }
                  break;
               case 156:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(287, 292); }
                  break;
               case 157:
                  if (curChar == 10)
                     { jjCheckNAddStates(271, 275); }
                  break;
               case 158:
               case 173:
                  if (curChar == 13)
                     { jjCheckNAdd(157); }
                  break;
               case 159:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(271, 275); }
                  break;
               case 160:
               case 162:
               case 165:
               case 169:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(156); }
                  break;
               case 161:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 162;
                  break;
               case 163:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 164;
                  break;
               case 164:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 165;
                  break;
               case 166:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 167;
                  break;
               case 167:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 168;
                  break;
               case 168:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 169;
                  break;
               case 171:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(293, 303); }
                  break;
               case 172:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(304, 309); }
                  break;
               case 174:
               case 176:
               case 179:
               case 183:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(172); }
                  break;
               case 175:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 176;
                  break;
               case 177:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 178;
                  break;
               case 178:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 179;
                  break;
               case 180:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 181;
                  break;
               case 181:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 182;
                  break;
               case 182:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 183;
                  break;
               case 184:
                  if (curChar == 36)
                     { jjCheckNAddStates(310, 312); }
                  break;
               case 185:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(310, 312); }
                  break;
               case 186:
                  if (curChar == 42)
                     { jjCheckNAddStates(313, 315); }
                  break;
               case 187:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(313, 315); }
                  break;
               case 189:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(261, 265); }
                  break;
               case 190:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(316, 326); }
                  break;
               case 191:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(327, 332); }
                  break;
               case 192:
                  if (curChar == 10)
                     { jjCheckNAddStates(261, 265); }
                  break;
               case 193:
               case 208:
                  if (curChar == 13)
                     { jjCheckNAdd(192); }
                  break;
               case 194:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(261, 265); }
                  break;
               case 195:
               case 197:
               case 200:
               case 204:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(191); }
                  break;
               case 196:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 197;
                  break;
               case 198:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 199;
                  break;
               case 199:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 200;
                  break;
               case 201:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 202;
                  break;
               case 202:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 203;
                  break;
               case 203:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 204;
                  break;
               case 206:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(333, 343); }
                  break;
               case 207:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(344, 349); }
                  break;
               case 209:
               case 211:
               case 214:
               case 218:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(207); }
                  break;
               case 210:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 211;
                  break;
               case 212:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 213;
                  break;
               case 213:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 214;
                  break;
               case 215:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 216;
                  break;
               case 216:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 217;
                  break;
               case 217:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 218;
                  break;
               case 219:
                  if (curChar == 36)
                     { jjCheckNAddStates(350, 352); }
                  break;
               case 220:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(350, 352); }
                  break;
               case 221:
                  if (curChar == 42)
                     { jjCheckNAddStates(353, 355); }
                  break;
               case 222:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(353, 355); }
                  break;
               case 228:
                  if (curChar != 47)
                     break;
                  if (kind > 75)
                     kind = 75;
                  { jjCheckNAddStates(356, 358); }
                  break;
               case 229:
                  if ((0xf7ffffffffffdbffL & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  { jjCheckNAddStates(356, 358); }
                  break;
               case 230:
                  if ((0x2400L & l) != 0L && kind > 75)
                     kind = 75;
                  break;
               case 231:
                  if (curChar == 10 && kind > 75)
                     kind = 75;
                  break;
               case 232:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 231;
                  break;
               case 233:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 228;
                  break;
               case 234:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 4)
                     kind = 4;
                  { jjCheckNAddStates(81, 86); }
                  break;
               case 235:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 4)
                     kind = 4;
                  { jjCheckNAdd(235); }
                  break;
               case 236:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 5)
                     kind = 5;
                  { jjCheckNAdd(236); }
                  break;
               case 237:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(237, 0); }
                  break;
               case 238:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(238, 1); }
                  break;
               case 240:
                  if ((0x3400L & l) != 0L && kind > 14)
                     kind = 14;
                  break;
               case 241:
                  if (curChar == 10 && kind > 14)
                     kind = 14;
                  break;
               case 242:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 241;
                  break;
               case 243:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  { jjCheckNAddTwoStates(244, 245); }
                  break;
               case 244:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  { jjCheckNAddTwoStates(244, 245); }
                  break;
               case 246:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  { jjCheckNAddStates(359, 367); }
                  break;
               case 247:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  { jjCheckNAddStates(368, 371); }
                  break;
               case 248:
                  if (curChar != 10)
                     break;
                  if (kind > 53)
                     kind = 53;
                  { jjCheckNAddTwoStates(244, 245); }
                  break;
               case 249:
               case 294:
                  if (curChar == 13)
                     { jjCheckNAdd(248); }
                  break;
               case 250:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  { jjCheckNAddTwoStates(244, 245); }
                  break;
               case 251:
               case 253:
               case 256:
               case 260:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(247); }
                  break;
               case 252:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 253;
                  break;
               case 254:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 255;
                  break;
               case 255:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 256;
                  break;
               case 257:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 258;
                  break;
               case 258:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 259;
                  break;
               case 259:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 260;
                  break;
               case 261:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(137, 139); }
                  break;
               case 262:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(137, 139); }
                  break;
               case 264:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(372, 381); }
                  break;
               case 265:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(382, 386); }
                  break;
               case 266:
                  if (curChar == 10)
                     { jjCheckNAddStates(137, 139); }
                  break;
               case 267:
               case 281:
                  if (curChar == 13)
                     { jjCheckNAdd(266); }
                  break;
               case 268:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(137, 139); }
                  break;
               case 269:
               case 271:
               case 274:
               case 278:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(265); }
                  break;
               case 270:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 271;
                  break;
               case 272:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 273;
                  break;
               case 273:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 274;
                  break;
               case 275:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 276;
                  break;
               case 276:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 277;
                  break;
               case 277:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 278;
                  break;
               case 279:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(387, 396); }
                  break;
               case 280:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(397, 401); }
                  break;
               case 282:
               case 284:
               case 287:
               case 291:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(280); }
                  break;
               case 283:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 284;
                  break;
               case 285:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 286;
                  break;
               case 286:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 287;
                  break;
               case 288:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 289;
                  break;
               case 289:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 290;
                  break;
               case 290:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 291;
                  break;
               case 292:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  { jjCheckNAddStates(402, 410); }
                  break;
               case 293:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  { jjCheckNAddStates(411, 414); }
                  break;
               case 295:
               case 297:
               case 300:
               case 304:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(293); }
                  break;
               case 296:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 297;
                  break;
               case 298:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 299;
                  break;
               case 299:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 300;
                  break;
               case 301:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 302;
                  break;
               case 302:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 303;
                  break;
               case 303:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 304;
                  break;
               case 305:
                  if (curChar != 34)
                     break;
                  if (kind > 17)
                     kind = 17;
                  { jjCheckNAddStates(126, 130); }
                  break;
               case 306:
                  if ((0xfffffffbffffcbffL & l) != 0L)
                     { jjCheckNAddStates(415, 417); }
                  break;
               case 307:
                  if (curChar == 34 && kind > 15)
                     kind = 15;
                  break;
               case 309:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(415, 417); }
                  break;
               case 310:
                  if (curChar == 10)
                     { jjCheckNAddStates(415, 417); }
                  break;
               case 311:
               case 315:
                  if (curChar == 13)
                     { jjCheckNAdd(310); }
                  break;
               case 312:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(415, 417); }
                  break;
               case 313:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(418, 427); }
                  break;
               case 314:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(428, 432); }
                  break;
               case 316:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(415, 417); }
                  break;
               case 317:
               case 319:
               case 322:
               case 326:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(314); }
                  break;
               case 318:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 319;
                  break;
               case 320:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 321;
                  break;
               case 321:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 322;
                  break;
               case 323:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 324;
                  break;
               case 324:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 325;
                  break;
               case 325:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 326;
                  break;
               case 327:
                  if ((0xfffffffbffffcbffL & l) == 0L)
                     break;
                  if (kind > 17)
                     kind = 17;
                  { jjCheckNAddTwoStates(327, 328); }
                  break;
               case 329:
                  if ((0x3400L & l) == 0L)
                     break;
                  if (kind > 17)
                     kind = 17;
                  { jjCheckNAddTwoStates(327, 328); }
                  break;
               case 330:
                  if (curChar != 10)
                     break;
                  if (kind > 17)
                     kind = 17;
                  { jjCheckNAddTwoStates(327, 328); }
                  break;
               case 331:
               case 335:
                  if (curChar == 13)
                     { jjCheckNAdd(330); }
                  break;
               case 332:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 17)
                     kind = 17;
                  { jjCheckNAddTwoStates(327, 328); }
                  break;
               case 333:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 17)
                     kind = 17;
                  { jjCheckNAddStates(433, 441); }
                  break;
               case 334:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 17)
                     kind = 17;
                  { jjCheckNAddStates(442, 445); }
                  break;
               case 336:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 17)
                     kind = 17;
                  { jjCheckNAddTwoStates(327, 328); }
                  break;
               case 337:
               case 339:
               case 342:
               case 346:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(334); }
                  break;
               case 338:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 339;
                  break;
               case 340:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 341;
                  break;
               case 341:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 342;
                  break;
               case 343:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 344;
                  break;
               case 344:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 345;
                  break;
               case 345:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 346;
                  break;
               case 347:
                  if (curChar != 39)
                     break;
                  if (kind > 18)
                     kind = 18;
                  { jjCheckNAddStates(121, 125); }
                  break;
               case 348:
                  if ((0xffffff7fffffcbffL & l) != 0L)
                     { jjCheckNAddStates(446, 448); }
                  break;
               case 349:
                  if (curChar == 39 && kind > 16)
                     kind = 16;
                  break;
               case 351:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(446, 448); }
                  break;
               case 352:
                  if (curChar == 10)
                     { jjCheckNAddStates(446, 448); }
                  break;
               case 353:
               case 357:
                  if (curChar == 13)
                     { jjCheckNAdd(352); }
                  break;
               case 354:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(446, 448); }
                  break;
               case 355:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(449, 458); }
                  break;
               case 356:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(459, 463); }
                  break;
               case 358:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(446, 448); }
                  break;
               case 359:
               case 361:
               case 364:
               case 368:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(356); }
                  break;
               case 360:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 361;
                  break;
               case 362:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 363;
                  break;
               case 363:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 364;
                  break;
               case 365:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 366;
                  break;
               case 366:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 367;
                  break;
               case 367:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 368;
                  break;
               case 369:
                  if ((0xffffff7fffffcbffL & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  { jjCheckNAddTwoStates(369, 370); }
                  break;
               case 371:
                  if ((0x3400L & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  { jjCheckNAddTwoStates(369, 370); }
                  break;
               case 372:
                  if (curChar != 10)
                     break;
                  if (kind > 18)
                     kind = 18;
                  { jjCheckNAddTwoStates(369, 370); }
                  break;
               case 373:
               case 377:
                  if (curChar == 13)
                     { jjCheckNAdd(372); }
                  break;
               case 374:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  { jjCheckNAddTwoStates(369, 370); }
                  break;
               case 375:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  { jjCheckNAddStates(464, 472); }
                  break;
               case 376:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  { jjCheckNAddStates(473, 476); }
                  break;
               case 378:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  { jjCheckNAddTwoStates(369, 370); }
                  break;
               case 379:
               case 381:
               case 384:
               case 388:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(376); }
                  break;
               case 380:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 381;
                  break;
               case 382:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 383;
                  break;
               case 383:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 384;
                  break;
               case 385:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 386;
                  break;
               case 386:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 387;
                  break;
               case 387:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 388;
                  break;
               case 389:
                  if (curChar == 46)
                     { jjCheckNAddStates(103, 120); }
                  break;
               case 390:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 22)
                     kind = 22;
                  { jjCheckNAdd(390); }
                  break;
               case 391:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(391, 393); }
                  break;
               case 394:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(394, 396); }
                  break;
               case 397:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(397, 399); }
                  break;
               case 400:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(400, 402); }
                  break;
               case 403:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(403, 405); }
                  break;
               case 406:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(406, 408); }
                  break;
               case 409:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(409, 411); }
                  break;
               case 412:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(412, 414); }
                  break;
               case 415:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(415, 418); }
                  break;
               case 419:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(419, 422); }
                  break;
               case 423:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(423, 427); }
                  break;
               case 428:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(428, 430); }
                  break;
               case 431:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(431, 432); }
                  break;
               case 433:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(433, 435); }
                  break;
               case 436:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(436, 439); }
                  break;
               case 440:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(440, 441); }
                  break;
               case 441:
                  if (curChar == 37 && kind > 69)
                     kind = 69;
                  break;
               case 442:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(131, 136); }
                  break;
               case 443:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(444, 463); }
                  break;
               case 445:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddTwoStates(445, 446); }
                  break;
               case 447:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddTwoStates(445, 446); }
                  break;
               case 448:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddStates(477, 485); }
                  break;
               case 449:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddStates(486, 489); }
                  break;
               case 450:
                  if (curChar != 10)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddTwoStates(445, 446); }
                  break;
               case 451:
               case 466:
                  if (curChar == 13)
                     { jjCheckNAdd(450); }
                  break;
               case 452:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddTwoStates(445, 446); }
                  break;
               case 453:
               case 455:
               case 458:
               case 462:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(449); }
                  break;
               case 454:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 455;
                  break;
               case 456:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 457;
                  break;
               case 457:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 458;
                  break;
               case 459:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 460;
                  break;
               case 460:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 461;
                  break;
               case 461:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 462;
                  break;
               case 464:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddStates(490, 498); }
                  break;
               case 465:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddStates(499, 502); }
                  break;
               case 467:
               case 469:
               case 472:
               case 476:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(465); }
                  break;
               case 468:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 469;
                  break;
               case 470:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 471;
                  break;
               case 471:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 472;
                  break;
               case 473:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 474;
                  break;
               case 474:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 475;
                  break;
               case 475:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 476;
                  break;
               case 477:
                  if (curChar == 36)
                     { jjCheckNAddStates(503, 505); }
                  break;
               case 478:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(503, 505); }
                  break;
               case 479:
                  if (curChar == 42)
                     { jjCheckNAddStates(506, 508); }
                  break;
               case 480:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(506, 508); }
                  break;
               case 481:
                  if (curChar == 45)
                     { jjCheckNAddStates(99, 102); }
                  break;
               case 486:
                  if (curChar == 36)
                     { jjCheckNAddStates(93, 98); }
                  break;
               case 487:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(509, 511); }
                  break;
               case 488:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(512, 514); }
                  break;
               case 489:
                  if (curChar == 42)
                     { jjCheckNAddStates(87, 92); }
                  break;
               case 490:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(3, 5); }
                  break;
               case 491:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(0, 2); }
                  break;
               case 493:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 22)
                     kind = 22;
                  { jjCheckNAddStates(6, 80); }
                  break;
               case 494:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 22)
                     kind = 22;
                  { jjCheckNAdd(494); }
                  break;
               case 495:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(495, 496); }
                  break;
               case 496:
                  if (curChar == 46)
                     { jjCheckNAdd(390); }
                  break;
               case 497:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(497, 393); }
                  break;
               case 498:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(498, 499); }
                  break;
               case 499:
                  if (curChar == 46)
                     { jjCheckNAdd(391); }
                  break;
               case 500:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(500, 396); }
                  break;
               case 501:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(501, 502); }
                  break;
               case 502:
                  if (curChar == 46)
                     { jjCheckNAdd(394); }
                  break;
               case 503:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(503, 399); }
                  break;
               case 504:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(504, 505); }
                  break;
               case 505:
                  if (curChar == 46)
                     { jjCheckNAdd(397); }
                  break;
               case 506:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(506, 402); }
                  break;
               case 507:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(507, 508); }
                  break;
               case 508:
                  if (curChar == 46)
                     { jjCheckNAdd(400); }
                  break;
               case 509:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(509, 405); }
                  break;
               case 510:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(510, 511); }
                  break;
               case 511:
                  if (curChar == 46)
                     { jjCheckNAdd(403); }
                  break;
               case 512:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(512, 408); }
                  break;
               case 513:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(513, 514); }
                  break;
               case 514:
                  if (curChar == 46)
                     { jjCheckNAdd(406); }
                  break;
               case 515:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(515, 411); }
                  break;
               case 516:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(516, 517); }
                  break;
               case 517:
                  if (curChar == 46)
                     { jjCheckNAdd(409); }
                  break;
               case 518:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(518, 414); }
                  break;
               case 519:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(519, 520); }
                  break;
               case 520:
                  if (curChar == 46)
                     { jjCheckNAdd(412); }
                  break;
               case 521:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(521, 418); }
                  break;
               case 522:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(522, 523); }
                  break;
               case 523:
                  if (curChar == 46)
                     { jjCheckNAdd(415); }
                  break;
               case 524:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(524, 422); }
                  break;
               case 525:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(525, 526); }
                  break;
               case 526:
                  if (curChar == 46)
                     { jjCheckNAdd(419); }
                  break;
               case 527:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(527, 427); }
                  break;
               case 528:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(528, 529); }
                  break;
               case 529:
                  if (curChar == 46)
                     { jjCheckNAdd(423); }
                  break;
               case 530:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(530, 430); }
                  break;
               case 531:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(531, 532); }
                  break;
               case 532:
                  if (curChar == 46)
                     { jjCheckNAdd(428); }
                  break;
               case 533:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(533, 432); }
                  break;
               case 534:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(534, 535); }
                  break;
               case 535:
                  if (curChar == 46)
                     { jjCheckNAdd(431); }
                  break;
               case 536:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(536, 435); }
                  break;
               case 537:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(537, 538); }
                  break;
               case 538:
                  if (curChar == 46)
                     { jjCheckNAdd(433); }
                  break;
               case 539:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(539, 439); }
                  break;
               case 540:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(540, 541); }
                  break;
               case 541:
                  if (curChar == 46)
                     { jjCheckNAdd(436); }
                  break;
               case 542:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(542, 441); }
                  break;
               case 543:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(543, 544); }
                  break;
               case 544:
                  if (curChar == 46)
                     { jjCheckNAdd(440); }
                  break;
               case 545:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(515, 520); }
                  break;
               case 546:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(546, 547); }
                  break;
               case 547:
                  if (curChar == 46)
                     { jjCheckNAdd(442); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 548:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(137, 139); }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(243, 292); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 53)
                        kind = 53;
                     { jjCheckNAddTwoStates(244, 245); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(261, 279); }
                  break;
               case 551:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(137, 139); }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(243, 292); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 53)
                        kind = 53;
                     { jjCheckNAddTwoStates(244, 245); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(261, 279); }
                  break;
               case 2:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 53)
                        kind = 53;
                     { jjCheckNAddStates(521, 525); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddStates(526, 531); }
                  else if (curChar == 64)
                     { jjAddStates(532, 536); }
                  else if (curChar == 123)
                  {
                     if (kind > 23)
                        kind = 23;
                  }
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 226;
                  else if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 138;
                  break;
               case 550:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(137, 139); }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(243, 246); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 53)
                        kind = 53;
                     { jjCheckNAddTwoStates(244, 245); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(261, 264); }
                  break;
               case 22:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 50)
                        kind = 50;
                     { jjCheckNAddTwoStates(24, 25); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(26, 43); }
                  break;
               case 552:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 50)
                        kind = 50;
                     { jjCheckNAddTwoStates(24, 25); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(26, 27); }
                  break;
               case 0:
                  if (curChar == 123 && kind > 23)
                     kind = 23;
                  break;
               case 3:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddTwoStates(3, 4); }
                  break;
               case 4:
                  if (curChar == 92)
                     { jjAddStates(537, 538); }
                  break;
               case 5:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddTwoStates(3, 4); }
                  break;
               case 6:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddStates(146, 154); }
                  break;
               case 7:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddStates(155, 158); }
                  break;
               case 11:
               case 13:
               case 16:
               case 20:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(7); }
                  break;
               case 12:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 14:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 15:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 17:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 18:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 19:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 21:
                  if (curChar == 64)
                     { jjAddStates(532, 536); }
                  break;
               case 23:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  { jjCheckNAddTwoStates(24, 25); }
                  break;
               case 24:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  { jjCheckNAddTwoStates(24, 25); }
                  break;
               case 25:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(26, 27); }
                  break;
               case 26:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  { jjCheckNAddTwoStates(24, 25); }
                  break;
               case 27:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  { jjCheckNAddStates(159, 167); }
                  break;
               case 28:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  { jjCheckNAddStates(168, 171); }
                  break;
               case 32:
               case 34:
               case 37:
               case 41:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(28); }
                  break;
               case 33:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 34;
                  break;
               case 35:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 36;
                  break;
               case 36:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 38:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 39:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 40;
                  break;
               case 40:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 42:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(26, 43); }
                  break;
               case 43:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  { jjCheckNAddStates(172, 180); }
                  break;
               case 44:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  { jjCheckNAddStates(181, 184); }
                  break;
               case 46:
               case 48:
               case 51:
               case 55:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(44); }
                  break;
               case 47:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 48;
                  break;
               case 49:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 50;
                  break;
               case 50:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 52:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 53;
                  break;
               case 53:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 54;
                  break;
               case 54:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 55;
                  break;
               case 62:
                  if ((0x10000000100000L & l) != 0L && kind > 51)
                     kind = 51;
                  break;
               case 63:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 62;
                  break;
               case 64:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 63;
                  break;
               case 65:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 64;
                  break;
               case 66:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 65;
                  break;
               case 67:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 66;
                  break;
               case 68:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 67;
                  break;
               case 69:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 68;
                  break;
               case 70:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 69;
                  break;
               case 73:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(191, 193); }
                  break;
               case 77:
                  if (curChar == 92)
                     { jjAddStates(539, 542); }
                  break;
               case 81:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(191, 193); }
                  break;
               case 82:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(194, 203); }
                  break;
               case 83:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(204, 208); }
                  break;
               case 86:
               case 88:
               case 91:
               case 95:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(83); }
                  break;
               case 87:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 88;
                  break;
               case 89:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 90;
                  break;
               case 90:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 91;
                  break;
               case 92:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 93;
                  break;
               case 93:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 94;
                  break;
               case 94:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 95;
                  break;
               case 97:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(209, 211); }
                  break;
               case 99:
                  if (curChar == 92)
                     { jjAddStates(543, 546); }
                  break;
               case 103:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(209, 211); }
                  break;
               case 104:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(212, 221); }
                  break;
               case 105:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(222, 226); }
                  break;
               case 108:
               case 110:
               case 113:
               case 117:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(105); }
                  break;
               case 109:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 110;
                  break;
               case 111:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 112;
                  break;
               case 112:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 113;
                  break;
               case 114:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 115;
                  break;
               case 115:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 116;
                  break;
               case 116:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 117;
                  break;
               case 118:
                  if ((0x7fffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(227, 230); }
                  break;
               case 119:
                  if (curChar == 92)
                     { jjAddStates(547, 548); }
                  break;
               case 120:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(227, 230); }
                  break;
               case 121:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(231, 240); }
                  break;
               case 122:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(241, 245); }
                  break;
               case 126:
               case 128:
               case 131:
               case 135:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(122); }
                  break;
               case 127:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 128;
                  break;
               case 129:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 130;
                  break;
               case 130:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 131;
                  break;
               case 132:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 133;
                  break;
               case 133:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 134;
                  break;
               case 134:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 135;
                  break;
               case 137:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 71;
                  break;
               case 138:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 137;
                  break;
               case 139:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 138;
                  break;
               case 140:
                  if ((0x1000000010L & l) != 0L)
                     { jjAddStates(253, 254); }
                  break;
               case 145:
               case 146:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(261, 265); }
                  break;
               case 149:
               case 150:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(271, 275); }
                  break;
               case 153:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(154, 155); }
                  break;
               case 154:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(271, 275); }
                  break;
               case 155:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(276, 286); }
                  break;
               case 156:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(287, 292); }
                  break;
               case 160:
               case 162:
               case 165:
               case 169:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(156); }
                  break;
               case 161:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 162;
                  break;
               case 163:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 164;
                  break;
               case 164:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 165;
                  break;
               case 166:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 167;
                  break;
               case 167:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 168;
                  break;
               case 168:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 169;
                  break;
               case 170:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(154, 171); }
                  break;
               case 171:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(293, 303); }
                  break;
               case 172:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(304, 309); }
                  break;
               case 174:
               case 176:
               case 179:
               case 183:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(172); }
                  break;
               case 175:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 176;
                  break;
               case 177:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 178;
                  break;
               case 178:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 179;
                  break;
               case 180:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 181;
                  break;
               case 181:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 182;
                  break;
               case 182:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 183;
                  break;
               case 188:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(189, 190); }
                  break;
               case 189:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(261, 265); }
                  break;
               case 190:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(316, 326); }
                  break;
               case 191:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(327, 332); }
                  break;
               case 195:
               case 197:
               case 200:
               case 204:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(191); }
                  break;
               case 196:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 197;
                  break;
               case 198:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 199;
                  break;
               case 199:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 200;
                  break;
               case 201:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 202;
                  break;
               case 202:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 203;
                  break;
               case 203:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 204;
                  break;
               case 205:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(189, 206); }
                  break;
               case 206:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(333, 343); }
                  break;
               case 207:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(344, 349); }
                  break;
               case 209:
               case 211:
               case 214:
               case 218:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(207); }
                  break;
               case 210:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 211;
                  break;
               case 212:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 213;
                  break;
               case 213:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 214;
                  break;
               case 215:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 216;
                  break;
               case 216:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 217;
                  break;
               case 217:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 218;
                  break;
               case 223:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 140;
                  break;
               case 224:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 223;
                  break;
               case 225:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 224;
                  break;
               case 226:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 225;
                  break;
               case 227:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 226;
                  break;
               case 229:
                  if ((0xdfffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  { jjAddStates(356, 358); }
                  break;
               case 239:
                  if (curChar == 92)
                     { jjCheckNAddStates(526, 531); }
                  break;
               case 243:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  { jjCheckNAddTwoStates(244, 245); }
                  break;
               case 244:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  { jjCheckNAddTwoStates(244, 245); }
                  break;
               case 245:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(243, 246); }
                  break;
               case 246:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  { jjCheckNAddStates(359, 367); }
                  break;
               case 247:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  { jjCheckNAddStates(368, 371); }
                  break;
               case 251:
               case 253:
               case 256:
               case 260:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(247); }
                  break;
               case 252:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 253;
                  break;
               case 254:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 255;
                  break;
               case 255:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 256;
                  break;
               case 257:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 258;
                  break;
               case 258:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 259;
                  break;
               case 259:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 260;
                  break;
               case 261:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(137, 139); }
                  break;
               case 262:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(137, 139); }
                  break;
               case 263:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(261, 264); }
                  break;
               case 264:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(372, 381); }
                  break;
               case 265:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(382, 386); }
                  break;
               case 269:
               case 271:
               case 274:
               case 278:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(265); }
                  break;
               case 270:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 271;
                  break;
               case 272:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 273;
                  break;
               case 273:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 274;
                  break;
               case 275:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 276;
                  break;
               case 276:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 277;
                  break;
               case 277:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 278;
                  break;
               case 279:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(387, 396); }
                  break;
               case 280:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(397, 401); }
                  break;
               case 282:
               case 284:
               case 287:
               case 291:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(280); }
                  break;
               case 283:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 284;
                  break;
               case 285:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 286;
                  break;
               case 286:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 287;
                  break;
               case 288:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 289;
                  break;
               case 289:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 290;
                  break;
               case 290:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 291;
                  break;
               case 292:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  { jjCheckNAddStates(402, 410); }
                  break;
               case 293:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  { jjCheckNAddStates(411, 414); }
                  break;
               case 295:
               case 297:
               case 300:
               case 304:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(293); }
                  break;
               case 296:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 297;
                  break;
               case 298:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 299;
                  break;
               case 299:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 300;
                  break;
               case 301:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 302;
                  break;
               case 302:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 303;
                  break;
               case 303:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 304;
                  break;
               case 306:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(415, 417); }
                  break;
               case 308:
                  if (curChar == 92)
                     { jjAddStates(549, 552); }
                  break;
               case 312:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(415, 417); }
                  break;
               case 313:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(418, 427); }
                  break;
               case 314:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(428, 432); }
                  break;
               case 317:
               case 319:
               case 322:
               case 326:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(314); }
                  break;
               case 318:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 319;
                  break;
               case 320:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 321;
                  break;
               case 321:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 322;
                  break;
               case 323:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 324;
                  break;
               case 324:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 325;
                  break;
               case 325:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 326;
                  break;
               case 327:
                  if ((0xffffffffefffffffL & l) == 0L)
                     break;
                  if (kind > 17)
                     kind = 17;
                  { jjCheckNAddTwoStates(327, 328); }
                  break;
               case 328:
                  if (curChar == 92)
                     { jjAddStates(553, 556); }
                  break;
               case 332:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 17)
                     kind = 17;
                  { jjCheckNAddTwoStates(327, 328); }
                  break;
               case 333:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 17)
                     kind = 17;
                  { jjCheckNAddStates(433, 441); }
                  break;
               case 334:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 17)
                     kind = 17;
                  { jjCheckNAddStates(442, 445); }
                  break;
               case 337:
               case 339:
               case 342:
               case 346:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(334); }
                  break;
               case 338:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 339;
                  break;
               case 340:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 341;
                  break;
               case 341:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 342;
                  break;
               case 343:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 344;
                  break;
               case 344:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 345;
                  break;
               case 345:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 346;
                  break;
               case 348:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(446, 448); }
                  break;
               case 350:
                  if (curChar == 92)
                     { jjAddStates(557, 560); }
                  break;
               case 354:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(446, 448); }
                  break;
               case 355:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(449, 458); }
                  break;
               case 356:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(459, 463); }
                  break;
               case 359:
               case 361:
               case 364:
               case 368:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(356); }
                  break;
               case 360:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 361;
                  break;
               case 362:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 363;
                  break;
               case 363:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 364;
                  break;
               case 365:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 366;
                  break;
               case 366:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 367;
                  break;
               case 367:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 368;
                  break;
               case 369:
                  if ((0xffffffffefffffffL & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  { jjCheckNAddTwoStates(369, 370); }
                  break;
               case 370:
                  if (curChar == 92)
                     { jjAddStates(561, 564); }
                  break;
               case 374:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  { jjCheckNAddTwoStates(369, 370); }
                  break;
               case 375:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  { jjCheckNAddStates(464, 472); }
                  break;
               case 376:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  { jjCheckNAddStates(473, 476); }
                  break;
               case 379:
               case 381:
               case 384:
               case 388:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(376); }
                  break;
               case 380:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 381;
                  break;
               case 382:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 383;
                  break;
               case 383:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 384;
                  break;
               case 385:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 386;
                  break;
               case 386:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 387;
                  break;
               case 387:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 388;
                  break;
               case 392:
                  if ((0x200000002000L & l) != 0L && kind > 54)
                     kind = 54;
                  break;
               case 393:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 392;
                  break;
               case 395:
                  if ((0x100000001000000L & l) != 0L && kind > 55)
                     kind = 55;
                  break;
               case 396:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 395;
                  break;
               case 398:
                  if ((0x100000001000000L & l) != 0L && kind > 56)
                     kind = 56;
                  break;
               case 399:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 398;
                  break;
               case 401:
                  if ((0x200000002000L & l) != 0L && kind > 57)
                     kind = 57;
                  break;
               case 402:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 401;
                  break;
               case 404:
                  if ((0x200000002000L & l) != 0L && kind > 58)
                     kind = 58;
                  break;
               case 405:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 404;
                  break;
               case 407:
                  if ((0x400000004000L & l) != 0L && kind > 59)
                     kind = 59;
                  break;
               case 408:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 407;
                  break;
               case 410:
                  if ((0x10000000100000L & l) != 0L && kind > 60)
                     kind = 60;
                  break;
               case 411:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 410;
                  break;
               case 413:
                  if ((0x800000008L & l) != 0L && kind > 61)
                     kind = 61;
                  break;
               case 414:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 413;
                  break;
               case 416:
                  if ((0x8000000080L & l) != 0L && kind > 62)
                     kind = 62;
                  break;
               case 417:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 416;
                  break;
               case 418:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 417;
                  break;
               case 420:
                  if ((0x1000000010L & l) != 0L && kind > 63)
                     kind = 63;
                  break;
               case 421:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 420;
                  break;
               case 422:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 421;
                  break;
               case 424:
                  if ((0x1000000010L & l) != 0L && kind > 64)
                     kind = 64;
                  break;
               case 425:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 424;
                  break;
               case 426:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 425;
                  break;
               case 427:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 426;
                  break;
               case 429:
                  if ((0x8000000080000L & l) != 0L && kind > 65)
                     kind = 65;
                  break;
               case 430:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 429;
                  break;
               case 432:
                  if ((0x8000000080000L & l) != 0L && kind > 66)
                     kind = 66;
                  break;
               case 434:
                  if ((0x400000004000000L & l) != 0L && kind > 67)
                     kind = 67;
                  break;
               case 435:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 434;
                  break;
               case 437:
                  if ((0x400000004000000L & l) != 0L && kind > 68)
                     kind = 68;
                  break;
               case 438:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 437;
                  break;
               case 439:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 438;
                  break;
               case 444:
               case 445:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddTwoStates(445, 446); }
                  break;
               case 446:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(447, 448); }
                  break;
               case 447:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddTwoStates(445, 446); }
                  break;
               case 448:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddStates(477, 485); }
                  break;
               case 449:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddStates(486, 489); }
                  break;
               case 453:
               case 455:
               case 458:
               case 462:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(449); }
                  break;
               case 454:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 455;
                  break;
               case 456:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 457;
                  break;
               case 457:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 458;
                  break;
               case 459:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 460;
                  break;
               case 460:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 461;
                  break;
               case 461:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 462;
                  break;
               case 463:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(447, 464); }
                  break;
               case 464:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddStates(490, 498); }
                  break;
               case 465:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddStates(499, 502); }
                  break;
               case 467:
               case 469:
               case 472:
               case 476:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(465); }
                  break;
               case 468:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 469;
                  break;
               case 470:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 471;
                  break;
               case 471:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 472;
                  break;
               case 473:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 474;
                  break;
               case 474:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 475;
                  break;
               case 475:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 476;
                  break;
               case 482:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  { jjCheckNAddTwoStates(244, 245); }
                  break;
               case 483:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(137, 139); }
                  break;
               case 484:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(261, 279); }
                  break;
               case 485:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(243, 292); }
                  break;
               case 492:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  { jjCheckNAddStates(521, 525); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 548:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 53)
                        kind = 53;
                     { jjCheckNAddTwoStates(244, 245); }
                  }
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(137, 139); }
                  break;
               case 551:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 53)
                        kind = 53;
                     { jjCheckNAddTwoStates(244, 245); }
                  }
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(137, 139); }
                  break;
               case 2:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 53)
                     kind = 53;
                  { jjCheckNAddStates(521, 525); }
                  break;
               case 550:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 53)
                        kind = 53;
                     { jjCheckNAddTwoStates(244, 245); }
                  }
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(137, 139); }
                  break;
               case 22:
               case 23:
               case 26:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 50)
                     kind = 50;
                  { jjCheckNAddTwoStates(24, 25); }
                  break;
               case 552:
               case 24:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 50)
                     kind = 50;
                  { jjCheckNAddTwoStates(24, 25); }
                  break;
               case 3:
               case 5:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddTwoStates(3, 4); }
                  break;
               case 73:
               case 81:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(191, 193); }
                  break;
               case 97:
               case 103:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(209, 211); }
                  break;
               case 118:
               case 120:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(227, 230); }
                  break;
               case 145:
               case 146:
               case 189:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(261, 265); }
                  break;
               case 149:
               case 150:
               case 154:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(271, 275); }
                  break;
               case 229:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 75)
                     kind = 75;
                  { jjAddStates(356, 358); }
                  break;
               case 243:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 53)
                     kind = 53;
                  { jjCheckNAddTwoStates(244, 245); }
                  break;
               case 244:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 53)
                     kind = 53;
                  { jjCheckNAddTwoStates(244, 245); }
                  break;
               case 261:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(137, 139); }
                  break;
               case 262:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(137, 139); }
                  break;
               case 306:
               case 312:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(415, 417); }
                  break;
               case 327:
               case 332:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 17)
                     kind = 17;
                  { jjCheckNAddTwoStates(327, 328); }
                  break;
               case 348:
               case 354:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(446, 448); }
                  break;
               case 369:
               case 374:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 18)
                     kind = 18;
                  { jjCheckNAddTwoStates(369, 370); }
                  break;
               case 444:
               case 445:
               case 447:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddTwoStates(445, 446); }
                  break;
               case 482:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 53)
                     kind = 53;
                  { jjCheckNAddTwoStates(244, 245); }
                  break;
               case 483:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(137, 139); }
                  break;
               default : if (i1 == 0 || l1 == 0 || i2 == 0 ||  l2 == 0) break; else break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 548 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_2(int pos, long active0, long active1){
   switch (pos)
   {
      case 0:
         if ((active0 & 0x100800000000L) != 0L)
            return 542;
         if ((active0 & 0x200000000L) != 0L)
            return 543;
         if ((active0 & 0x10000000000000L) != 0L || (active1 & 0x200L) != 0L)
         {
            jjmatchedKind = 53;
            jjmatchedPos = 0;
            return 544;
         }
         if ((active0 & 0x20000000L) != 0L)
            return 545;
         if ((active0 & 0x3e00000000000L) != 0L)
            return 22;
         return -1;
      case 1:
         if ((active0 & 0x3e00000000000L) != 0L)
         {
            jjmatchedKind = 50;
            jjmatchedPos = 1;
            return 546;
         }
         if ((active0 & 0x10000000000000L) != 0L || (active1 & 0x200L) != 0L)
         {
            jjmatchedKind = 53;
            jjmatchedPos = 1;
            return 544;
         }
         return -1;
      case 2:
         if ((active0 & 0x10000000000000L) != 0L || (active1 & 0x200L) != 0L)
         {
            jjmatchedKind = 53;
            jjmatchedPos = 2;
            return 544;
         }
         if ((active0 & 0x3e00000000000L) != 0L)
         {
            jjmatchedKind = 50;
            jjmatchedPos = 2;
            return 546;
         }
         return -1;
      case 3:
         if ((active0 & 0x3e00000000000L) != 0L)
         {
            jjmatchedKind = 50;
            jjmatchedPos = 3;
            return 546;
         }
         if ((active0 & 0x10000000000000L) != 0L || (active1 & 0x200L) != 0L)
         {
            jjmatchedKind = 53;
            jjmatchedPos = 3;
            return 544;
         }
         return -1;
      case 4:
         if ((active0 & 0x2e00000000000L) != 0L)
         {
            jjmatchedKind = 50;
            jjmatchedPos = 4;
            return 546;
         }
         if ((active0 & 0x1000000000000L) != 0L)
            return 546;
         if ((active0 & 0x10000000000000L) != 0L || (active1 & 0x200L) != 0L)
         {
            jjmatchedKind = 53;
            jjmatchedPos = 4;
            return 544;
         }
         return -1;
      case 5:
         if ((active0 & 0x2000000000000L) != 0L)
            return 546;
         if ((active0 & 0xe00000000000L) != 0L)
         {
            jjmatchedKind = 50;
            jjmatchedPos = 5;
            return 546;
         }
         if ((active0 & 0x10000000000000L) != 0L || (active1 & 0x200L) != 0L)
         {
            jjmatchedKind = 53;
            jjmatchedPos = 5;
            return 544;
         }
         return -1;
      case 6:
         if ((active0 & 0x10000000000000L) != 0L)
            return 544;
         if ((active0 & 0x400000000000L) != 0L)
            return 546;
         if ((active1 & 0x200L) != 0L)
         {
            jjmatchedKind = 53;
            jjmatchedPos = 6;
            return 544;
         }
         if ((active0 & 0xa00000000000L) != 0L)
         {
            jjmatchedKind = 50;
            jjmatchedPos = 6;
            return 546;
         }
         return -1;
      case 7:
         if ((active0 & 0x800000000000L) != 0L)
         {
            jjmatchedKind = 50;
            jjmatchedPos = 7;
            return 546;
         }
         if ((active1 & 0x200L) != 0L)
         {
            jjmatchedKind = 53;
            jjmatchedPos = 7;
            return 544;
         }
         if ((active0 & 0x200000000000L) != 0L)
            return 546;
         return -1;
      case 8:
         if ((active1 & 0x200L) != 0L)
         {
            jjmatchedKind = 53;
            jjmatchedPos = 8;
            return 544;
         }
         if ((active0 & 0x800000000000L) != 0L)
         {
            jjmatchedKind = 50;
            jjmatchedPos = 8;
            return 546;
         }
         return -1;
      case 9:
         if ((active0 & 0x800000000000L) != 0L)
            return 546;
         if ((active1 & 0x200L) != 0L)
         {
            jjmatchedKind = 53;
            jjmatchedPos = 9;
            return 544;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_2(int pos, long active0, long active1){
   return jjMoveNfa_2(jjStopStringLiteralDfa_2(pos, active0, active1), pos + 1);
}
private int jjMoveStringLiteralDfa0_2(){
   switch(curChar)
   {
      case 40:
         return jjStopAtPos(0, 27);
      case 41:
         return jjStopAtPos(0, 28);
      case 42:
         return jjStartNfaWithStates_2(0, 33, 543);
      case 43:
         return jjStopAtPos(0, 38);
      case 45:
         {
         jjmatchedKind = 35;
         jjmatchedPos = 0;
         }
         return jjMoveStringLiteralDfa1_2(0x100000000000L, 0x0L);
      case 46:
         return jjStartNfaWithStates_2(0, 29, 545);
      case 47:
         return jjStopAtPos(0, 34);
      case 58:
         return jjStopAtPos(0, 32);
      case 59:
         return jjStopAtPos(0, 31);
      case 60:
         return jjMoveStringLiteralDfa1_2(0x80000000000L, 0x0L);
      case 61:
         return jjStopAtPos(0, 36);
      case 62:
         return jjStopAtPos(0, 39);
      case 64:
         return jjMoveStringLiteralDfa1_2(0x3e00000000000L, 0x0L);
      case 91:
         return jjStopAtPos(0, 25);
      case 93:
         return jjStopAtPos(0, 26);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa1_2(0x0L, 0x200L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa1_2(0x10000000000000L, 0x0L);
      case 124:
         {
         jjmatchedKind = 37;
         jjmatchedPos = 0;
         }
         return jjMoveStringLiteralDfa1_2(0x40000000000L, 0x0L);
      case 125:
         return jjStopAtPos(0, 24);
      case 126:
         return jjMoveStringLiteralDfa1_2(0x20000000000L, 0x0L);
      default :
         return jjMoveNfa_2(2, 0);
   }
}
private int jjMoveStringLiteralDfa1_2(long active0, long active1){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(0, active0, active1);
      return 1;
   }
   switch(curChar)
   {
      case 33:
         return jjMoveStringLiteralDfa2_2(active0, 0x80000000000L, active1, 0L);
      case 45:
         return jjMoveStringLiteralDfa2_2(active0, 0x100000000000L, active1, 0L);
      case 61:
         if ((active0 & 0x20000000000L) != 0L)
            return jjStopAtPos(1, 41);
         else if ((active0 & 0x40000000000L) != 0L)
            return jjStopAtPos(1, 42);
         break;
      case 67:
      case 99:
         return jjMoveStringLiteralDfa2_2(active0, 0x200000000000L, active1, 0L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa2_2(active0, 0x400000000000L, active1, 0L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa2_2(active0, 0x2000000000000L, active1, 0L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa2_2(active0, 0x10800000000000L, active1, 0L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa2_2(active0, 0x1000000000000L, active1, 0L);
      case 88:
      case 120:
         return jjMoveStringLiteralDfa2_2(active0, 0L, active1, 0x200L);
      default :
         break;
   }
   return jjStartNfa_2(0, active0, active1);
}
private int jjMoveStringLiteralDfa2_2(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_2(0, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(1, active0, active1);
      return 2;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa3_2(active0, 0x80000000000L, active1, 0L);
      case 62:
         if ((active0 & 0x100000000000L) != 0L)
            return jjStopAtPos(2, 44);
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa3_2(active0, 0x1800000000000L, active1, 0L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa3_2(active0, 0x2000000000000L, active1, 0L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa3_2(active0, 0x10200000000000L, active1, 0L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa3_2(active0, 0x400000000000L, active1, 0L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa3_2(active0, 0L, active1, 0x200L);
      default :
         break;
   }
   return jjStartNfa_2(1, active0, active1);
}
private int jjMoveStringLiteralDfa3_2(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_2(1, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(2, active0, active1);
      return 3;
   }
   switch(curChar)
   {
      case 45:
         if ((active0 & 0x80000000000L) != 0L)
            return jjStopAtPos(3, 43);
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa4_2(active0, 0x200000000000L, active1, 0L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa4_2(active0, 0x2000000000000L, active1, 0L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa4_2(active0, 0x10000000000000L, active1, 0L);
      case 71:
      case 103:
         return jjMoveStringLiteralDfa4_2(active0, 0x1000000000000L, active1, 0L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa4_2(active0, 0x800000000000L, active1, 0L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa4_2(active0, 0x400000000000L, active1, 0L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa4_2(active0, 0L, active1, 0x200L);
      default :
         break;
   }
   return jjStartNfa_2(2, active0, active1);
}
private int jjMoveStringLiteralDfa4_2(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_2(2, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(3, active0, active1);
      return 4;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         if ((active0 & 0x1000000000000L) != 0L)
            return jjStartNfaWithStates_2(4, 48, 546);
         return jjMoveStringLiteralDfa5_2(active0, 0x800000000000L, active1, 0x200L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa5_2(active0, 0x2000000000000L, active1, 0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa5_2(active0, 0x400000000000L, active1, 0L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa5_2(active0, 0x10200000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_2(3, active0, active1);
}
private int jjMoveStringLiteralDfa5_2(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_2(3, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(4, active0, active1);
      return 5;
   }
   switch(curChar)
   {
      case 65:
      case 97:
         if ((active0 & 0x2000000000000L) != 0L)
            return jjStartNfaWithStates_2(5, 49, 546);
         break;
      case 73:
      case 105:
         return jjMoveStringLiteralDfa6_2(active0, 0x10000000000000L, active1, 0L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa6_2(active0, 0x400000000000L, active1, 0L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa6_2(active0, 0xa00000000000L, active1, 0x200L);
      default :
         break;
   }
   return jjStartNfa_2(4, active0, active1);
}
private int jjMoveStringLiteralDfa6_2(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_2(4, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(5, active0, active1);
      return 6;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         return jjMoveStringLiteralDfa7_2(active0, 0x200000000000L, active1, 0L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa7_2(active0, 0x800000000000L, active1, 0L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa7_2(active0, 0L, active1, 0x200L);
      case 84:
      case 116:
         if ((active0 & 0x400000000000L) != 0L)
            return jjStartNfaWithStates_2(6, 46, 546);
         else if ((active0 & 0x10000000000000L) != 0L)
            return jjStartNfaWithStates_2(6, 52, 544);
         break;
      default :
         break;
   }
   return jjStartNfa_2(5, active0, active1);
}
private int jjMoveStringLiteralDfa7_2(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_2(5, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(6, active0, active1);
      return 7;
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa8_2(active0, 0x800000000000L, active1, 0L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa8_2(active0, 0L, active1, 0x200L);
      case 84:
      case 116:
         if ((active0 & 0x200000000000L) != 0L)
            return jjStartNfaWithStates_2(7, 45, 546);
         break;
      default :
         break;
   }
   return jjStartNfa_2(6, active0, active1);
}
private int jjMoveStringLiteralDfa8_2(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_2(6, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(7, active0, active1);
      return 8;
   }
   switch(curChar)
   {
      case 67:
      case 99:
         return jjMoveStringLiteralDfa9_2(active0, 0x800000000000L, active1, 0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa9_2(active0, 0L, active1, 0x200L);
      default :
         break;
   }
   return jjStartNfa_2(7, active0, active1);
}
private int jjMoveStringLiteralDfa9_2(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_2(7, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(8, active0, active1);
      return 9;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         if ((active0 & 0x800000000000L) != 0L)
            return jjStartNfaWithStates_2(9, 47, 546);
         break;
      case 78:
      case 110:
         return jjMoveStringLiteralDfa10_2(active0, 0L, active1, 0x200L);
      default :
         break;
   }
   return jjStartNfa_2(8, active0, active1);
}
private int jjMoveStringLiteralDfa10_2(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_2(8, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(9, 0L, active1);
      return 10;
   }
   switch(curChar)
   {
      case 40:
         if ((active1 & 0x200L) != 0L)
            return jjStopAtPos(10, 73);
         break;
      default :
         break;
   }
   return jjStartNfa_2(9, 0L, active1);
}
private int jjStartNfaWithStates_2(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_2(state, pos + 1);
}
private int jjMoveNfa_2(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 542;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 543:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(565, 567); }
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(568, 570); }
                  break;
               case 544:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(571, 573); }
                  else if (curChar == 40)
                  {
                     if (kind > 74)
                        kind = 74;
                  }
                  if ((0x3ff200000000000L & l) != 0L)
                  {
                     if (kind > 53)
                        kind = 53;
                     { jjCheckNAddTwoStates(238, 239); }
                  }
                  break;
               case 2:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 22)
                        kind = 22;
                     { jjCheckNAddStates(574, 648); }
                  }
                  else if ((0x100003600L & l) != 0L)
                  {
                     if (kind > 4)
                        kind = 4;
                     { jjCheckNAddStates(649, 654); }
                  }
                  else if (curChar == 42)
                     { jjCheckNAddStates(655, 660); }
                  else if (curChar == 36)
                     { jjCheckNAddStates(661, 666); }
                  else if (curChar == 45)
                     { jjCheckNAddStates(667, 670); }
                  else if (curChar == 46)
                     { jjCheckNAddStates(671, 688); }
                  else if (curChar == 39)
                  {
                     if (kind > 18)
                        kind = 18;
                     { jjCheckNAddStates(689, 693); }
                  }
                  else if (curChar == 34)
                  {
                     if (kind > 17)
                        kind = 17;
                     { jjCheckNAddStates(694, 698); }
                  }
                  else if (curChar == 33)
                     { jjCheckNAddTwoStates(61, 70); }
                  else if (curChar == 35)
                     { jjCheckNAddTwoStates(3, 4); }
                  else if (curChar == 44)
                  {
                     if (kind > 30)
                        kind = 30;
                  }
                  break;
               case 545:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(699, 704); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(434, 435); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(430, 433); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(427, 429); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(425, 426); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(422, 424); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(417, 421); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(413, 416); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(409, 412); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(406, 408); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(403, 405); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(400, 402); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(397, 399); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(394, 396); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(391, 393); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(388, 390); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(385, 387); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 22)
                        kind = 22;
                     { jjCheckNAdd(384); }
                  }
                  break;
               case 22:
                  if (curChar == 42)
                     { jjCheckNAddStates(140, 142); }
                  else if (curChar == 36)
                     { jjCheckNAddStates(143, 145); }
                  else if (curChar == 45)
                     { jjCheckNAddTwoStates(23, 42); }
                  break;
               case 546:
               case 24:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  { jjCheckNAddTwoStates(24, 25); }
                  break;
               case 1:
                  if (curChar == 44 && kind > 30)
                     kind = 30;
                  break;
               case 3:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddTwoStates(3, 4); }
                  break;
               case 5:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddTwoStates(3, 4); }
                  break;
               case 6:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddStates(146, 154); }
                  break;
               case 7:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddStates(155, 158); }
                  break;
               case 8:
                  if (curChar != 10)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddTwoStates(3, 4); }
                  break;
               case 9:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 10:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddTwoStates(3, 4); }
                  break;
               case 11:
               case 13:
               case 16:
               case 20:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(7); }
                  break;
               case 12:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 14:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 15:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 17:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 18:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 19:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 26:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  { jjCheckNAddTwoStates(24, 25); }
                  break;
               case 27:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  { jjCheckNAddStates(159, 167); }
                  break;
               case 28:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  { jjCheckNAddStates(168, 171); }
                  break;
               case 29:
                  if (curChar != 10)
                     break;
                  if (kind > 50)
                     kind = 50;
                  { jjCheckNAddTwoStates(24, 25); }
                  break;
               case 30:
               case 45:
                  if (curChar == 13)
                     { jjCheckNAdd(29); }
                  break;
               case 31:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  { jjCheckNAddTwoStates(24, 25); }
                  break;
               case 32:
               case 34:
               case 37:
               case 41:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(28); }
                  break;
               case 33:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 34;
                  break;
               case 35:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 36;
                  break;
               case 36:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 38:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 39:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 40;
                  break;
               case 40:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 43:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  { jjCheckNAddStates(172, 180); }
                  break;
               case 44:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  { jjCheckNAddStates(181, 184); }
                  break;
               case 46:
               case 48:
               case 51:
               case 55:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(44); }
                  break;
               case 47:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 48;
                  break;
               case 49:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 50;
                  break;
               case 50:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 52:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 53;
                  break;
               case 53:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 54;
                  break;
               case 54:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 55;
                  break;
               case 56:
                  if (curChar == 36)
                     { jjCheckNAddStates(143, 145); }
                  break;
               case 57:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(143, 145); }
                  break;
               case 58:
                  if (curChar == 42)
                     { jjCheckNAddStates(140, 142); }
                  break;
               case 59:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(140, 142); }
                  break;
               case 60:
                  if (curChar == 33)
                     { jjCheckNAddTwoStates(61, 70); }
                  break;
               case 61:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(61, 70); }
                  break;
               case 71:
                  if (curChar == 40)
                     { jjCheckNAddStates(185, 190); }
                  break;
               case 72:
                  if (curChar == 34)
                     { jjCheckNAddStates(191, 193); }
                  break;
               case 73:
                  if ((0xfffffffbffffcbffL & l) != 0L)
                     { jjCheckNAddStates(191, 193); }
                  break;
               case 74:
                  if (curChar == 34)
                     { jjCheckNAddTwoStates(75, 76); }
                  break;
               case 75:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(75, 76); }
                  break;
               case 76:
                  if (curChar == 41 && kind > 72)
                     kind = 72;
                  break;
               case 78:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(191, 193); }
                  break;
               case 79:
                  if (curChar == 10)
                     { jjCheckNAddStates(191, 193); }
                  break;
               case 80:
               case 84:
                  if (curChar == 13)
                     { jjCheckNAdd(79); }
                  break;
               case 81:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(191, 193); }
                  break;
               case 82:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(194, 203); }
                  break;
               case 83:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(204, 208); }
                  break;
               case 85:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(191, 193); }
                  break;
               case 86:
               case 88:
               case 91:
               case 95:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(83); }
                  break;
               case 87:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 88;
                  break;
               case 89:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 90;
                  break;
               case 90:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 91;
                  break;
               case 92:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 93;
                  break;
               case 93:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 94;
                  break;
               case 94:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 95;
                  break;
               case 96:
                  if (curChar == 39)
                     { jjCheckNAddStates(209, 211); }
                  break;
               case 97:
                  if ((0xffffff7fffffcbffL & l) != 0L)
                     { jjCheckNAddStates(209, 211); }
                  break;
               case 98:
                  if (curChar == 39)
                     { jjCheckNAddTwoStates(75, 76); }
                  break;
               case 100:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(209, 211); }
                  break;
               case 101:
                  if (curChar == 10)
                     { jjCheckNAddStates(209, 211); }
                  break;
               case 102:
               case 106:
                  if (curChar == 13)
                     { jjCheckNAdd(101); }
                  break;
               case 103:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(209, 211); }
                  break;
               case 104:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(212, 221); }
                  break;
               case 105:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(222, 226); }
                  break;
               case 107:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(209, 211); }
                  break;
               case 108:
               case 110:
               case 113:
               case 117:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(105); }
                  break;
               case 109:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 110;
                  break;
               case 111:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 112;
                  break;
               case 112:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 113;
                  break;
               case 114:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 115;
                  break;
               case 115:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 116;
                  break;
               case 116:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 117;
                  break;
               case 118:
                  if ((0xfffffc7a00000000L & l) != 0L)
                     { jjCheckNAddStates(227, 230); }
                  break;
               case 120:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(227, 230); }
                  break;
               case 121:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(231, 240); }
                  break;
               case 122:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(241, 245); }
                  break;
               case 123:
                  if (curChar == 10)
                     { jjCheckNAddStates(227, 230); }
                  break;
               case 124:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 123;
                  break;
               case 125:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(227, 230); }
                  break;
               case 126:
               case 128:
               case 131:
               case 135:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(122); }
                  break;
               case 127:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 128;
                  break;
               case 129:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 130;
                  break;
               case 130:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 131;
                  break;
               case 132:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 133;
                  break;
               case 133:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 134;
                  break;
               case 134:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 135;
                  break;
               case 136:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(246, 252); }
                  break;
               case 141:
                  if ((0x100003600L & l) != 0L)
                     { jjAddStates(253, 254); }
                  break;
               case 142:
                  if (curChar == 58)
                     { jjCheckNAddStates(255, 260); }
                  break;
               case 143:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(255, 260); }
                  break;
               case 144:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(145, 205); }
                  break;
               case 146:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(261, 265); }
                  break;
               case 147:
                  if (curChar == 46)
                     { jjCheckNAddStates(266, 270); }
                  break;
               case 148:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(149, 170); }
                  break;
               case 150:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(271, 275); }
                  break;
               case 151:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(151, 152); }
                  break;
               case 152:
                  if (curChar == 40 && kind > 74)
                     kind = 74;
                  break;
               case 154:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(271, 275); }
                  break;
               case 155:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(276, 286); }
                  break;
               case 156:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(287, 292); }
                  break;
               case 157:
                  if (curChar == 10)
                     { jjCheckNAddStates(271, 275); }
                  break;
               case 158:
               case 173:
                  if (curChar == 13)
                     { jjCheckNAdd(157); }
                  break;
               case 159:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(271, 275); }
                  break;
               case 160:
               case 162:
               case 165:
               case 169:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(156); }
                  break;
               case 161:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 162;
                  break;
               case 163:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 164;
                  break;
               case 164:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 165;
                  break;
               case 166:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 167;
                  break;
               case 167:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 168;
                  break;
               case 168:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 169;
                  break;
               case 171:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(293, 303); }
                  break;
               case 172:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(304, 309); }
                  break;
               case 174:
               case 176:
               case 179:
               case 183:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(172); }
                  break;
               case 175:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 176;
                  break;
               case 177:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 178;
                  break;
               case 178:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 179;
                  break;
               case 180:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 181;
                  break;
               case 181:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 182;
                  break;
               case 182:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 183;
                  break;
               case 184:
                  if (curChar == 36)
                     { jjCheckNAddStates(310, 312); }
                  break;
               case 185:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(310, 312); }
                  break;
               case 186:
                  if (curChar == 42)
                     { jjCheckNAddStates(313, 315); }
                  break;
               case 187:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(313, 315); }
                  break;
               case 189:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(261, 265); }
                  break;
               case 190:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(316, 326); }
                  break;
               case 191:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(327, 332); }
                  break;
               case 192:
                  if (curChar == 10)
                     { jjCheckNAddStates(261, 265); }
                  break;
               case 193:
               case 208:
                  if (curChar == 13)
                     { jjCheckNAdd(192); }
                  break;
               case 194:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(261, 265); }
                  break;
               case 195:
               case 197:
               case 200:
               case 204:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(191); }
                  break;
               case 196:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 197;
                  break;
               case 198:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 199;
                  break;
               case 199:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 200;
                  break;
               case 201:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 202;
                  break;
               case 202:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 203;
                  break;
               case 203:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 204;
                  break;
               case 206:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(333, 343); }
                  break;
               case 207:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(344, 349); }
                  break;
               case 209:
               case 211:
               case 214:
               case 218:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(207); }
                  break;
               case 210:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 211;
                  break;
               case 212:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 213;
                  break;
               case 213:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 214;
                  break;
               case 215:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 216;
                  break;
               case 216:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 217;
                  break;
               case 217:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 218;
                  break;
               case 219:
                  if (curChar == 36)
                     { jjCheckNAddStates(350, 352); }
                  break;
               case 220:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(350, 352); }
                  break;
               case 221:
                  if (curChar == 42)
                     { jjCheckNAddStates(353, 355); }
                  break;
               case 222:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(353, 355); }
                  break;
               case 228:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 4)
                     kind = 4;
                  { jjCheckNAddStates(649, 654); }
                  break;
               case 229:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 4)
                     kind = 4;
                  { jjCheckNAdd(229); }
                  break;
               case 230:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 5)
                     kind = 5;
                  { jjCheckNAdd(230); }
                  break;
               case 231:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 0); }
                  break;
               case 232:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(232, 1); }
                  break;
               case 234:
                  if ((0x3400L & l) != 0L && kind > 14)
                     kind = 14;
                  break;
               case 235:
                  if (curChar == 10 && kind > 14)
                     kind = 14;
                  break;
               case 236:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 235;
                  break;
               case 237:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  { jjCheckNAddTwoStates(238, 239); }
                  break;
               case 238:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  { jjCheckNAddTwoStates(238, 239); }
                  break;
               case 240:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  { jjCheckNAddStates(705, 713); }
                  break;
               case 241:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  { jjCheckNAddStates(714, 717); }
                  break;
               case 242:
                  if (curChar != 10)
                     break;
                  if (kind > 53)
                     kind = 53;
                  { jjCheckNAddTwoStates(238, 239); }
                  break;
               case 243:
               case 288:
                  if (curChar == 13)
                     { jjCheckNAdd(242); }
                  break;
               case 244:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  { jjCheckNAddTwoStates(238, 239); }
                  break;
               case 245:
               case 247:
               case 250:
               case 254:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(241); }
                  break;
               case 246:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 247;
                  break;
               case 248:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 249;
                  break;
               case 249:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 250;
                  break;
               case 251:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 252;
                  break;
               case 252:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 253;
                  break;
               case 253:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 254;
                  break;
               case 255:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(571, 573); }
                  break;
               case 256:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(571, 573); }
                  break;
               case 258:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(718, 727); }
                  break;
               case 259:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(728, 732); }
                  break;
               case 260:
                  if (curChar == 10)
                     { jjCheckNAddStates(571, 573); }
                  break;
               case 261:
               case 275:
                  if (curChar == 13)
                     { jjCheckNAdd(260); }
                  break;
               case 262:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(571, 573); }
                  break;
               case 263:
               case 265:
               case 268:
               case 272:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(259); }
                  break;
               case 264:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 265;
                  break;
               case 266:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 267;
                  break;
               case 267:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 268;
                  break;
               case 269:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 270;
                  break;
               case 270:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 271;
                  break;
               case 271:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 272;
                  break;
               case 273:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(733, 742); }
                  break;
               case 274:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(743, 747); }
                  break;
               case 276:
               case 278:
               case 281:
               case 285:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(274); }
                  break;
               case 277:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 278;
                  break;
               case 279:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 280;
                  break;
               case 280:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 281;
                  break;
               case 282:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 283;
                  break;
               case 283:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 284;
                  break;
               case 284:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 285;
                  break;
               case 286:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  { jjCheckNAddStates(748, 756); }
                  break;
               case 287:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  { jjCheckNAddStates(757, 760); }
                  break;
               case 289:
               case 291:
               case 294:
               case 298:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(287); }
                  break;
               case 290:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 291;
                  break;
               case 292:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 293;
                  break;
               case 293:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 294;
                  break;
               case 295:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 296;
                  break;
               case 296:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 297;
                  break;
               case 297:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 298;
                  break;
               case 299:
                  if (curChar != 34)
                     break;
                  if (kind > 17)
                     kind = 17;
                  { jjCheckNAddStates(694, 698); }
                  break;
               case 300:
                  if ((0xfffffffbffffcbffL & l) != 0L)
                     { jjCheckNAddStates(761, 763); }
                  break;
               case 301:
                  if (curChar == 34 && kind > 15)
                     kind = 15;
                  break;
               case 303:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(761, 763); }
                  break;
               case 304:
                  if (curChar == 10)
                     { jjCheckNAddStates(761, 763); }
                  break;
               case 305:
               case 309:
                  if (curChar == 13)
                     { jjCheckNAdd(304); }
                  break;
               case 306:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(761, 763); }
                  break;
               case 307:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(764, 773); }
                  break;
               case 308:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(774, 778); }
                  break;
               case 310:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(761, 763); }
                  break;
               case 311:
               case 313:
               case 316:
               case 320:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(308); }
                  break;
               case 312:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 313;
                  break;
               case 314:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 315;
                  break;
               case 315:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 316;
                  break;
               case 317:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 318;
                  break;
               case 318:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 319;
                  break;
               case 319:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 320;
                  break;
               case 321:
                  if ((0xfffffffbffffcbffL & l) == 0L)
                     break;
                  if (kind > 17)
                     kind = 17;
                  { jjCheckNAddTwoStates(321, 322); }
                  break;
               case 323:
                  if ((0x3400L & l) == 0L)
                     break;
                  if (kind > 17)
                     kind = 17;
                  { jjCheckNAddTwoStates(321, 322); }
                  break;
               case 324:
                  if (curChar != 10)
                     break;
                  if (kind > 17)
                     kind = 17;
                  { jjCheckNAddTwoStates(321, 322); }
                  break;
               case 325:
               case 329:
                  if (curChar == 13)
                     { jjCheckNAdd(324); }
                  break;
               case 326:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 17)
                     kind = 17;
                  { jjCheckNAddTwoStates(321, 322); }
                  break;
               case 327:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 17)
                     kind = 17;
                  { jjCheckNAddStates(779, 787); }
                  break;
               case 328:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 17)
                     kind = 17;
                  { jjCheckNAddStates(788, 791); }
                  break;
               case 330:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 17)
                     kind = 17;
                  { jjCheckNAddTwoStates(321, 322); }
                  break;
               case 331:
               case 333:
               case 336:
               case 340:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(328); }
                  break;
               case 332:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 333;
                  break;
               case 334:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 335;
                  break;
               case 335:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 336;
                  break;
               case 337:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 338;
                  break;
               case 338:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 339;
                  break;
               case 339:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 340;
                  break;
               case 341:
                  if (curChar != 39)
                     break;
                  if (kind > 18)
                     kind = 18;
                  { jjCheckNAddStates(689, 693); }
                  break;
               case 342:
                  if ((0xffffff7fffffcbffL & l) != 0L)
                     { jjCheckNAddStates(792, 794); }
                  break;
               case 343:
                  if (curChar == 39 && kind > 16)
                     kind = 16;
                  break;
               case 345:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(792, 794); }
                  break;
               case 346:
                  if (curChar == 10)
                     { jjCheckNAddStates(792, 794); }
                  break;
               case 347:
               case 351:
                  if (curChar == 13)
                     { jjCheckNAdd(346); }
                  break;
               case 348:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(792, 794); }
                  break;
               case 349:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(795, 804); }
                  break;
               case 350:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(805, 809); }
                  break;
               case 352:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(792, 794); }
                  break;
               case 353:
               case 355:
               case 358:
               case 362:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(350); }
                  break;
               case 354:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 355;
                  break;
               case 356:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 357;
                  break;
               case 357:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 358;
                  break;
               case 359:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 360;
                  break;
               case 360:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 361;
                  break;
               case 361:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 362;
                  break;
               case 363:
                  if ((0xffffff7fffffcbffL & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  { jjCheckNAddTwoStates(363, 364); }
                  break;
               case 365:
                  if ((0x3400L & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  { jjCheckNAddTwoStates(363, 364); }
                  break;
               case 366:
                  if (curChar != 10)
                     break;
                  if (kind > 18)
                     kind = 18;
                  { jjCheckNAddTwoStates(363, 364); }
                  break;
               case 367:
               case 371:
                  if (curChar == 13)
                     { jjCheckNAdd(366); }
                  break;
               case 368:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  { jjCheckNAddTwoStates(363, 364); }
                  break;
               case 369:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  { jjCheckNAddStates(810, 818); }
                  break;
               case 370:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  { jjCheckNAddStates(819, 822); }
                  break;
               case 372:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  { jjCheckNAddTwoStates(363, 364); }
                  break;
               case 373:
               case 375:
               case 378:
               case 382:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(370); }
                  break;
               case 374:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 375;
                  break;
               case 376:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 377;
                  break;
               case 377:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 378;
                  break;
               case 379:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 380;
                  break;
               case 380:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 381;
                  break;
               case 381:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 382;
                  break;
               case 383:
                  if (curChar == 46)
                     { jjCheckNAddStates(671, 688); }
                  break;
               case 384:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 22)
                     kind = 22;
                  { jjCheckNAdd(384); }
                  break;
               case 385:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(385, 387); }
                  break;
               case 388:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(388, 390); }
                  break;
               case 391:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(391, 393); }
                  break;
               case 394:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(394, 396); }
                  break;
               case 397:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(397, 399); }
                  break;
               case 400:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(400, 402); }
                  break;
               case 403:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(403, 405); }
                  break;
               case 406:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(406, 408); }
                  break;
               case 409:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(409, 412); }
                  break;
               case 413:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(413, 416); }
                  break;
               case 417:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(417, 421); }
                  break;
               case 422:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(422, 424); }
                  break;
               case 425:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(425, 426); }
                  break;
               case 427:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(427, 429); }
                  break;
               case 430:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(430, 433); }
                  break;
               case 434:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(434, 435); }
                  break;
               case 435:
                  if (curChar == 37 && kind > 69)
                     kind = 69;
                  break;
               case 436:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(699, 704); }
                  break;
               case 437:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(438, 457); }
                  break;
               case 439:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddTwoStates(439, 440); }
                  break;
               case 441:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddTwoStates(439, 440); }
                  break;
               case 442:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddStates(823, 831); }
                  break;
               case 443:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddStates(832, 835); }
                  break;
               case 444:
                  if (curChar != 10)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddTwoStates(439, 440); }
                  break;
               case 445:
               case 460:
                  if (curChar == 13)
                     { jjCheckNAdd(444); }
                  break;
               case 446:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddTwoStates(439, 440); }
                  break;
               case 447:
               case 449:
               case 452:
               case 456:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(443); }
                  break;
               case 448:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 449;
                  break;
               case 450:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 451;
                  break;
               case 451:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 452;
                  break;
               case 453:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 454;
                  break;
               case 454:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 455;
                  break;
               case 455:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 456;
                  break;
               case 458:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddStates(836, 844); }
                  break;
               case 459:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddStates(845, 848); }
                  break;
               case 461:
               case 463:
               case 466:
               case 470:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(459); }
                  break;
               case 462:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 463;
                  break;
               case 464:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 465;
                  break;
               case 465:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 466;
                  break;
               case 467:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 468;
                  break;
               case 468:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 469;
                  break;
               case 469:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 470;
                  break;
               case 471:
                  if (curChar == 36)
                     { jjCheckNAddStates(849, 851); }
                  break;
               case 472:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(849, 851); }
                  break;
               case 473:
                  if (curChar == 42)
                     { jjCheckNAddStates(852, 854); }
                  break;
               case 474:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(852, 854); }
                  break;
               case 475:
                  if (curChar == 45)
                     { jjCheckNAddStates(667, 670); }
                  break;
               case 480:
                  if (curChar == 36)
                     { jjCheckNAddStates(661, 666); }
                  break;
               case 481:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(855, 857); }
                  break;
               case 482:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(858, 860); }
                  break;
               case 483:
                  if (curChar == 42)
                     { jjCheckNAddStates(655, 660); }
                  break;
               case 484:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(568, 570); }
                  break;
               case 485:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(565, 567); }
                  break;
               case 487:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 22)
                     kind = 22;
                  { jjCheckNAddStates(574, 648); }
                  break;
               case 488:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 22)
                     kind = 22;
                  { jjCheckNAdd(488); }
                  break;
               case 489:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(489, 490); }
                  break;
               case 490:
                  if (curChar == 46)
                     { jjCheckNAdd(384); }
                  break;
               case 491:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(491, 387); }
                  break;
               case 492:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(492, 493); }
                  break;
               case 493:
                  if (curChar == 46)
                     { jjCheckNAdd(385); }
                  break;
               case 494:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(494, 390); }
                  break;
               case 495:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(495, 496); }
                  break;
               case 496:
                  if (curChar == 46)
                     { jjCheckNAdd(388); }
                  break;
               case 497:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(497, 393); }
                  break;
               case 498:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(498, 499); }
                  break;
               case 499:
                  if (curChar == 46)
                     { jjCheckNAdd(391); }
                  break;
               case 500:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(500, 396); }
                  break;
               case 501:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(501, 502); }
                  break;
               case 502:
                  if (curChar == 46)
                     { jjCheckNAdd(394); }
                  break;
               case 503:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(503, 399); }
                  break;
               case 504:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(504, 505); }
                  break;
               case 505:
                  if (curChar == 46)
                     { jjCheckNAdd(397); }
                  break;
               case 506:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(506, 402); }
                  break;
               case 507:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(507, 508); }
                  break;
               case 508:
                  if (curChar == 46)
                     { jjCheckNAdd(400); }
                  break;
               case 509:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(509, 405); }
                  break;
               case 510:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(510, 511); }
                  break;
               case 511:
                  if (curChar == 46)
                     { jjCheckNAdd(403); }
                  break;
               case 512:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(512, 408); }
                  break;
               case 513:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(513, 514); }
                  break;
               case 514:
                  if (curChar == 46)
                     { jjCheckNAdd(406); }
                  break;
               case 515:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(515, 412); }
                  break;
               case 516:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(516, 517); }
                  break;
               case 517:
                  if (curChar == 46)
                     { jjCheckNAdd(409); }
                  break;
               case 518:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(518, 416); }
                  break;
               case 519:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(519, 520); }
                  break;
               case 520:
                  if (curChar == 46)
                     { jjCheckNAdd(413); }
                  break;
               case 521:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(521, 421); }
                  break;
               case 522:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(522, 523); }
                  break;
               case 523:
                  if (curChar == 46)
                     { jjCheckNAdd(417); }
                  break;
               case 524:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(524, 424); }
                  break;
               case 525:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(525, 526); }
                  break;
               case 526:
                  if (curChar == 46)
                     { jjCheckNAdd(422); }
                  break;
               case 527:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(527, 426); }
                  break;
               case 528:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(528, 529); }
                  break;
               case 529:
                  if (curChar == 46)
                     { jjCheckNAdd(425); }
                  break;
               case 530:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(530, 429); }
                  break;
               case 531:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(531, 532); }
                  break;
               case 532:
                  if (curChar == 46)
                     { jjCheckNAdd(427); }
                  break;
               case 533:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(533, 433); }
                  break;
               case 534:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(534, 535); }
                  break;
               case 535:
                  if (curChar == 46)
                     { jjCheckNAdd(430); }
                  break;
               case 536:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(536, 435); }
                  break;
               case 537:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(537, 538); }
                  break;
               case 538:
                  if (curChar == 46)
                     { jjCheckNAdd(434); }
                  break;
               case 539:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(861, 866); }
                  break;
               case 540:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(540, 541); }
                  break;
               case 541:
                  if (curChar == 46)
                     { jjCheckNAdd(436); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 543:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(571, 573); }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(237, 286); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 53)
                        kind = 53;
                     { jjCheckNAddTwoStates(238, 239); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(255, 273); }
                  break;
               case 544:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(571, 573); }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(237, 240); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 53)
                        kind = 53;
                     { jjCheckNAddTwoStates(238, 239); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(255, 258); }
                  break;
               case 2:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 53)
                        kind = 53;
                     { jjCheckNAddStates(867, 871); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddStates(872, 877); }
                  else if (curChar == 64)
                     { jjAddStates(532, 536); }
                  else if (curChar == 123)
                  {
                     if (kind > 23)
                        kind = 23;
                  }
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 226;
                  else if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 138;
                  break;
               case 22:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 50)
                        kind = 50;
                     { jjCheckNAddTwoStates(24, 25); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(26, 43); }
                  break;
               case 546:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 50)
                        kind = 50;
                     { jjCheckNAddTwoStates(24, 25); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(26, 27); }
                  break;
               case 542:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(571, 573); }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(237, 286); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 53)
                        kind = 53;
                     { jjCheckNAddTwoStates(238, 239); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(255, 273); }
                  break;
               case 0:
                  if (curChar == 123 && kind > 23)
                     kind = 23;
                  break;
               case 3:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddTwoStates(3, 4); }
                  break;
               case 4:
                  if (curChar == 92)
                     { jjAddStates(537, 538); }
                  break;
               case 5:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddTwoStates(3, 4); }
                  break;
               case 6:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddStates(146, 154); }
                  break;
               case 7:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddStates(155, 158); }
                  break;
               case 11:
               case 13:
               case 16:
               case 20:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(7); }
                  break;
               case 12:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 14:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 15:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 17:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 18:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 19:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 21:
                  if (curChar == 64)
                     { jjAddStates(532, 536); }
                  break;
               case 23:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  { jjCheckNAddTwoStates(24, 25); }
                  break;
               case 24:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  { jjCheckNAddTwoStates(24, 25); }
                  break;
               case 25:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(26, 27); }
                  break;
               case 26:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  { jjCheckNAddTwoStates(24, 25); }
                  break;
               case 27:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  { jjCheckNAddStates(159, 167); }
                  break;
               case 28:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  { jjCheckNAddStates(168, 171); }
                  break;
               case 32:
               case 34:
               case 37:
               case 41:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(28); }
                  break;
               case 33:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 34;
                  break;
               case 35:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 36;
                  break;
               case 36:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 38:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 39:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 40;
                  break;
               case 40:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 42:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(26, 43); }
                  break;
               case 43:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  { jjCheckNAddStates(172, 180); }
                  break;
               case 44:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  { jjCheckNAddStates(181, 184); }
                  break;
               case 46:
               case 48:
               case 51:
               case 55:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(44); }
                  break;
               case 47:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 48;
                  break;
               case 49:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 50;
                  break;
               case 50:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 52:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 53;
                  break;
               case 53:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 54;
                  break;
               case 54:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 55;
                  break;
               case 62:
                  if ((0x10000000100000L & l) != 0L && kind > 51)
                     kind = 51;
                  break;
               case 63:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 62;
                  break;
               case 64:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 63;
                  break;
               case 65:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 64;
                  break;
               case 66:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 65;
                  break;
               case 67:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 66;
                  break;
               case 68:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 67;
                  break;
               case 69:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 68;
                  break;
               case 70:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 69;
                  break;
               case 73:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(191, 193); }
                  break;
               case 77:
                  if (curChar == 92)
                     { jjAddStates(539, 542); }
                  break;
               case 81:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(191, 193); }
                  break;
               case 82:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(194, 203); }
                  break;
               case 83:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(204, 208); }
                  break;
               case 86:
               case 88:
               case 91:
               case 95:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(83); }
                  break;
               case 87:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 88;
                  break;
               case 89:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 90;
                  break;
               case 90:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 91;
                  break;
               case 92:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 93;
                  break;
               case 93:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 94;
                  break;
               case 94:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 95;
                  break;
               case 97:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(209, 211); }
                  break;
               case 99:
                  if (curChar == 92)
                     { jjAddStates(543, 546); }
                  break;
               case 103:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(209, 211); }
                  break;
               case 104:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(212, 221); }
                  break;
               case 105:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(222, 226); }
                  break;
               case 108:
               case 110:
               case 113:
               case 117:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(105); }
                  break;
               case 109:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 110;
                  break;
               case 111:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 112;
                  break;
               case 112:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 113;
                  break;
               case 114:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 115;
                  break;
               case 115:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 116;
                  break;
               case 116:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 117;
                  break;
               case 118:
                  if ((0x7fffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(227, 230); }
                  break;
               case 119:
                  if (curChar == 92)
                     { jjAddStates(547, 548); }
                  break;
               case 120:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(227, 230); }
                  break;
               case 121:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(231, 240); }
                  break;
               case 122:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(241, 245); }
                  break;
               case 126:
               case 128:
               case 131:
               case 135:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(122); }
                  break;
               case 127:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 128;
                  break;
               case 129:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 130;
                  break;
               case 130:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 131;
                  break;
               case 132:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 133;
                  break;
               case 133:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 134;
                  break;
               case 134:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 135;
                  break;
               case 137:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 71;
                  break;
               case 138:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 137;
                  break;
               case 139:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 138;
                  break;
               case 140:
                  if ((0x1000000010L & l) != 0L)
                     { jjAddStates(253, 254); }
                  break;
               case 145:
               case 146:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(261, 265); }
                  break;
               case 149:
               case 150:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(271, 275); }
                  break;
               case 153:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(154, 155); }
                  break;
               case 154:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(271, 275); }
                  break;
               case 155:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(276, 286); }
                  break;
               case 156:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(287, 292); }
                  break;
               case 160:
               case 162:
               case 165:
               case 169:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(156); }
                  break;
               case 161:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 162;
                  break;
               case 163:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 164;
                  break;
               case 164:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 165;
                  break;
               case 166:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 167;
                  break;
               case 167:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 168;
                  break;
               case 168:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 169;
                  break;
               case 170:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(154, 171); }
                  break;
               case 171:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(293, 303); }
                  break;
               case 172:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(304, 309); }
                  break;
               case 174:
               case 176:
               case 179:
               case 183:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(172); }
                  break;
               case 175:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 176;
                  break;
               case 177:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 178;
                  break;
               case 178:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 179;
                  break;
               case 180:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 181;
                  break;
               case 181:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 182;
                  break;
               case 182:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 183;
                  break;
               case 188:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(189, 190); }
                  break;
               case 189:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(261, 265); }
                  break;
               case 190:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(316, 326); }
                  break;
               case 191:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(327, 332); }
                  break;
               case 195:
               case 197:
               case 200:
               case 204:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(191); }
                  break;
               case 196:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 197;
                  break;
               case 198:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 199;
                  break;
               case 199:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 200;
                  break;
               case 201:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 202;
                  break;
               case 202:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 203;
                  break;
               case 203:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 204;
                  break;
               case 205:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(189, 206); }
                  break;
               case 206:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(333, 343); }
                  break;
               case 207:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(344, 349); }
                  break;
               case 209:
               case 211:
               case 214:
               case 218:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(207); }
                  break;
               case 210:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 211;
                  break;
               case 212:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 213;
                  break;
               case 213:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 214;
                  break;
               case 215:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 216;
                  break;
               case 216:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 217;
                  break;
               case 217:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 218;
                  break;
               case 223:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 140;
                  break;
               case 224:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 223;
                  break;
               case 225:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 224;
                  break;
               case 226:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 225;
                  break;
               case 227:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 226;
                  break;
               case 233:
                  if (curChar == 92)
                     { jjCheckNAddStates(872, 877); }
                  break;
               case 237:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  { jjCheckNAddTwoStates(238, 239); }
                  break;
               case 238:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  { jjCheckNAddTwoStates(238, 239); }
                  break;
               case 239:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(237, 240); }
                  break;
               case 240:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  { jjCheckNAddStates(705, 713); }
                  break;
               case 241:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  { jjCheckNAddStates(714, 717); }
                  break;
               case 245:
               case 247:
               case 250:
               case 254:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(241); }
                  break;
               case 246:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 247;
                  break;
               case 248:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 249;
                  break;
               case 249:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 250;
                  break;
               case 251:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 252;
                  break;
               case 252:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 253;
                  break;
               case 253:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 254;
                  break;
               case 255:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(571, 573); }
                  break;
               case 256:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(571, 573); }
                  break;
               case 257:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(255, 258); }
                  break;
               case 258:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(718, 727); }
                  break;
               case 259:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(728, 732); }
                  break;
               case 263:
               case 265:
               case 268:
               case 272:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(259); }
                  break;
               case 264:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 265;
                  break;
               case 266:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 267;
                  break;
               case 267:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 268;
                  break;
               case 269:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 270;
                  break;
               case 270:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 271;
                  break;
               case 271:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 272;
                  break;
               case 273:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(733, 742); }
                  break;
               case 274:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(743, 747); }
                  break;
               case 276:
               case 278:
               case 281:
               case 285:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(274); }
                  break;
               case 277:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 278;
                  break;
               case 279:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 280;
                  break;
               case 280:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 281;
                  break;
               case 282:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 283;
                  break;
               case 283:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 284;
                  break;
               case 284:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 285;
                  break;
               case 286:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  { jjCheckNAddStates(748, 756); }
                  break;
               case 287:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  { jjCheckNAddStates(757, 760); }
                  break;
               case 289:
               case 291:
               case 294:
               case 298:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(287); }
                  break;
               case 290:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 291;
                  break;
               case 292:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 293;
                  break;
               case 293:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 294;
                  break;
               case 295:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 296;
                  break;
               case 296:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 297;
                  break;
               case 297:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 298;
                  break;
               case 300:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(761, 763); }
                  break;
               case 302:
                  if (curChar == 92)
                     { jjAddStates(878, 881); }
                  break;
               case 306:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(761, 763); }
                  break;
               case 307:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(764, 773); }
                  break;
               case 308:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(774, 778); }
                  break;
               case 311:
               case 313:
               case 316:
               case 320:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(308); }
                  break;
               case 312:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 313;
                  break;
               case 314:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 315;
                  break;
               case 315:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 316;
                  break;
               case 317:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 318;
                  break;
               case 318:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 319;
                  break;
               case 319:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 320;
                  break;
               case 321:
                  if ((0xffffffffefffffffL & l) == 0L)
                     break;
                  if (kind > 17)
                     kind = 17;
                  { jjCheckNAddTwoStates(321, 322); }
                  break;
               case 322:
                  if (curChar == 92)
                     { jjAddStates(882, 885); }
                  break;
               case 326:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 17)
                     kind = 17;
                  { jjCheckNAddTwoStates(321, 322); }
                  break;
               case 327:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 17)
                     kind = 17;
                  { jjCheckNAddStates(779, 787); }
                  break;
               case 328:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 17)
                     kind = 17;
                  { jjCheckNAddStates(788, 791); }
                  break;
               case 331:
               case 333:
               case 336:
               case 340:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(328); }
                  break;
               case 332:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 333;
                  break;
               case 334:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 335;
                  break;
               case 335:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 336;
                  break;
               case 337:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 338;
                  break;
               case 338:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 339;
                  break;
               case 339:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 340;
                  break;
               case 342:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(792, 794); }
                  break;
               case 344:
                  if (curChar == 92)
                     { jjAddStates(886, 889); }
                  break;
               case 348:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(792, 794); }
                  break;
               case 349:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(795, 804); }
                  break;
               case 350:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(805, 809); }
                  break;
               case 353:
               case 355:
               case 358:
               case 362:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(350); }
                  break;
               case 354:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 355;
                  break;
               case 356:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 357;
                  break;
               case 357:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 358;
                  break;
               case 359:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 360;
                  break;
               case 360:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 361;
                  break;
               case 361:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 362;
                  break;
               case 363:
                  if ((0xffffffffefffffffL & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  { jjCheckNAddTwoStates(363, 364); }
                  break;
               case 364:
                  if (curChar == 92)
                     { jjAddStates(890, 893); }
                  break;
               case 368:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  { jjCheckNAddTwoStates(363, 364); }
                  break;
               case 369:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  { jjCheckNAddStates(810, 818); }
                  break;
               case 370:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  { jjCheckNAddStates(819, 822); }
                  break;
               case 373:
               case 375:
               case 378:
               case 382:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(370); }
                  break;
               case 374:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 375;
                  break;
               case 376:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 377;
                  break;
               case 377:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 378;
                  break;
               case 379:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 380;
                  break;
               case 380:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 381;
                  break;
               case 381:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 382;
                  break;
               case 386:
                  if ((0x200000002000L & l) != 0L && kind > 54)
                     kind = 54;
                  break;
               case 387:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 386;
                  break;
               case 389:
                  if ((0x100000001000000L & l) != 0L && kind > 55)
                     kind = 55;
                  break;
               case 390:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 389;
                  break;
               case 392:
                  if ((0x100000001000000L & l) != 0L && kind > 56)
                     kind = 56;
                  break;
               case 393:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 392;
                  break;
               case 395:
                  if ((0x200000002000L & l) != 0L && kind > 57)
                     kind = 57;
                  break;
               case 396:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 395;
                  break;
               case 398:
                  if ((0x200000002000L & l) != 0L && kind > 58)
                     kind = 58;
                  break;
               case 399:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 398;
                  break;
               case 401:
                  if ((0x400000004000L & l) != 0L && kind > 59)
                     kind = 59;
                  break;
               case 402:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 401;
                  break;
               case 404:
                  if ((0x10000000100000L & l) != 0L && kind > 60)
                     kind = 60;
                  break;
               case 405:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 404;
                  break;
               case 407:
                  if ((0x800000008L & l) != 0L && kind > 61)
                     kind = 61;
                  break;
               case 408:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 407;
                  break;
               case 410:
                  if ((0x8000000080L & l) != 0L && kind > 62)
                     kind = 62;
                  break;
               case 411:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 410;
                  break;
               case 412:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 411;
                  break;
               case 414:
                  if ((0x1000000010L & l) != 0L && kind > 63)
                     kind = 63;
                  break;
               case 415:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 414;
                  break;
               case 416:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 415;
                  break;
               case 418:
                  if ((0x1000000010L & l) != 0L && kind > 64)
                     kind = 64;
                  break;
               case 419:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 418;
                  break;
               case 420:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 419;
                  break;
               case 421:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 420;
                  break;
               case 423:
                  if ((0x8000000080000L & l) != 0L && kind > 65)
                     kind = 65;
                  break;
               case 424:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 423;
                  break;
               case 426:
                  if ((0x8000000080000L & l) != 0L && kind > 66)
                     kind = 66;
                  break;
               case 428:
                  if ((0x400000004000000L & l) != 0L && kind > 67)
                     kind = 67;
                  break;
               case 429:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 428;
                  break;
               case 431:
                  if ((0x400000004000000L & l) != 0L && kind > 68)
                     kind = 68;
                  break;
               case 432:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 431;
                  break;
               case 433:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 432;
                  break;
               case 438:
               case 439:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddTwoStates(439, 440); }
                  break;
               case 440:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(441, 442); }
                  break;
               case 441:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddTwoStates(439, 440); }
                  break;
               case 442:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddStates(823, 831); }
                  break;
               case 443:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddStates(832, 835); }
                  break;
               case 447:
               case 449:
               case 452:
               case 456:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(443); }
                  break;
               case 448:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 449;
                  break;
               case 450:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 451;
                  break;
               case 451:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 452;
                  break;
               case 453:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 454;
                  break;
               case 454:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 455;
                  break;
               case 455:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 456;
                  break;
               case 457:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(441, 458); }
                  break;
               case 458:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddStates(836, 844); }
                  break;
               case 459:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddStates(845, 848); }
                  break;
               case 461:
               case 463:
               case 466:
               case 470:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(459); }
                  break;
               case 462:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 463;
                  break;
               case 464:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 465;
                  break;
               case 465:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 466;
                  break;
               case 467:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 468;
                  break;
               case 468:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 469;
                  break;
               case 469:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 470;
                  break;
               case 476:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  { jjCheckNAddTwoStates(238, 239); }
                  break;
               case 477:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(571, 573); }
                  break;
               case 478:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(255, 273); }
                  break;
               case 479:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(237, 286); }
                  break;
               case 486:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  { jjCheckNAddStates(867, 871); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 543:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 53)
                        kind = 53;
                     { jjCheckNAddTwoStates(238, 239); }
                  }
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(571, 573); }
                  break;
               case 544:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 53)
                        kind = 53;
                     { jjCheckNAddTwoStates(238, 239); }
                  }
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(571, 573); }
                  break;
               case 2:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 53)
                     kind = 53;
                  { jjCheckNAddStates(867, 871); }
                  break;
               case 22:
               case 23:
               case 26:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 50)
                     kind = 50;
                  { jjCheckNAddTwoStates(24, 25); }
                  break;
               case 546:
               case 24:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 50)
                     kind = 50;
                  { jjCheckNAddTwoStates(24, 25); }
                  break;
               case 542:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 53)
                        kind = 53;
                     { jjCheckNAddTwoStates(238, 239); }
                  }
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(571, 573); }
                  break;
               case 3:
               case 5:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddTwoStates(3, 4); }
                  break;
               case 73:
               case 81:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(191, 193); }
                  break;
               case 97:
               case 103:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(209, 211); }
                  break;
               case 118:
               case 120:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(227, 230); }
                  break;
               case 145:
               case 146:
               case 189:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(261, 265); }
                  break;
               case 149:
               case 150:
               case 154:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(271, 275); }
                  break;
               case 237:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 53)
                     kind = 53;
                  { jjCheckNAddTwoStates(238, 239); }
                  break;
               case 238:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 53)
                     kind = 53;
                  { jjCheckNAddTwoStates(238, 239); }
                  break;
               case 255:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(571, 573); }
                  break;
               case 256:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(571, 573); }
                  break;
               case 300:
               case 306:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(761, 763); }
                  break;
               case 321:
               case 326:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 17)
                     kind = 17;
                  { jjCheckNAddTwoStates(321, 322); }
                  break;
               case 342:
               case 348:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(792, 794); }
                  break;
               case 363:
               case 368:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 18)
                     kind = 18;
                  { jjCheckNAddTwoStates(363, 364); }
                  break;
               case 438:
               case 439:
               case 441:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddTwoStates(439, 440); }
                  break;
               case 476:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 53)
                     kind = 53;
                  { jjCheckNAddTwoStates(238, 239); }
                  break;
               case 477:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(571, 573); }
                  break;
               default : if (i1 == 0 || l1 == 0 || i2 == 0 ||  l2 == 0) break; else break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 542 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_1(){
   switch(curChar)
   {
      case 42:
         return jjMoveStringLiteralDfa1_1(0x8L);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa1_1(long active0){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 1;
   }
   switch(curChar)
   {
      case 47:
         if ((active0 & 0x8L) != 0L)
            return jjStopAtPos(1, 3);
         break;
      default :
         return 2;
   }
   return 2;
}
static final int[] jjnextStates = {
   491, 483, 484, 490, 482, 485, 494, 495, 496, 497, 498, 499, 393, 500, 501, 502, 
   396, 503, 504, 505, 399, 506, 507, 508, 402, 509, 510, 511, 405, 512, 513, 514, 
   408, 515, 516, 517, 411, 518, 519, 520, 414, 521, 522, 523, 418, 524, 525, 526, 
   422, 527, 528, 529, 427, 530, 531, 532, 430, 533, 534, 535, 432, 536, 537, 538, 
   435, 539, 540, 541, 439, 542, 543, 544, 441, 545, 546, 547, 443, 477, 479, 444, 
   463, 235, 236, 237, 0, 238, 1, 490, 482, 491, 483, 484, 485, 487, 482, 488, 
   483, 484, 485, 482, 483, 484, 485, 390, 391, 394, 397, 400, 403, 406, 409, 412, 
   415, 419, 423, 428, 431, 433, 436, 440, 442, 348, 349, 369, 370, 350, 306, 307, 
   327, 328, 308, 442, 443, 477, 479, 444, 463, 262, 152, 263, 59, 23, 42, 57, 
   23, 42, 3, 7, 11, 12, 14, 17, 9, 10, 4, 3, 9, 10, 4, 24, 
   28, 32, 33, 35, 38, 30, 31, 25, 24, 30, 31, 25, 44, 46, 47, 49, 
   52, 45, 31, 24, 25, 45, 31, 24, 25, 72, 96, 118, 76, 119, 136, 73, 
   74, 77, 73, 83, 86, 87, 89, 92, 84, 85, 74, 77, 73, 84, 85, 74, 
   77, 97, 98, 99, 97, 105, 108, 109, 111, 114, 106, 107, 98, 99, 97, 106, 
   107, 98, 99, 118, 75, 76, 119, 118, 122, 126, 127, 129, 132, 124, 76, 119, 
   125, 118, 124, 76, 119, 125, 72, 96, 118, 75, 76, 119, 136, 141, 142, 143, 
   144, 219, 221, 145, 205, 146, 147, 151, 152, 188, 148, 184, 186, 149, 170, 147, 
   150, 151, 152, 153, 147, 150, 156, 160, 161, 163, 166, 158, 152, 153, 159, 147, 
   150, 158, 152, 153, 159, 147, 172, 174, 175, 177, 180, 173, 150, 152, 153, 159, 
   147, 173, 150, 152, 153, 159, 185, 149, 170, 187, 149, 170, 146, 191, 195, 196, 
   198, 201, 193, 147, 152, 188, 194, 146, 193, 147, 152, 188, 194, 207, 209, 210, 
   212, 215, 208, 146, 147, 152, 188, 194, 208, 146, 147, 152, 188, 194, 220, 145, 
   205, 222, 145, 205, 229, 230, 232, 244, 247, 251, 252, 254, 257, 249, 250, 245, 
   244, 249, 250, 245, 262, 265, 269, 270, 272, 275, 267, 268, 152, 263, 262, 267, 
   268, 152, 263, 280, 282, 283, 285, 288, 281, 268, 262, 152, 263, 281, 268, 262, 
   152, 263, 293, 295, 296, 298, 301, 294, 250, 244, 245, 294, 250, 244, 245, 306, 
   307, 308, 306, 314, 317, 318, 320, 323, 315, 316, 307, 308, 306, 315, 316, 307, 
   308, 327, 334, 337, 338, 340, 343, 335, 336, 328, 327, 335, 336, 328, 348, 349, 
   350, 348, 356, 359, 360, 362, 365, 357, 358, 349, 350, 348, 357, 358, 349, 350, 
   369, 376, 379, 380, 382, 385, 377, 378, 370, 369, 377, 378, 370, 445, 449, 453, 
   454, 456, 459, 451, 452, 446, 445, 451, 452, 446, 465, 467, 468, 470, 473, 466, 
   452, 445, 446, 466, 452, 445, 446, 478, 444, 463, 480, 444, 463, 487, 482, 485, 
   488, 483, 484, 545, 443, 477, 479, 444, 463, 244, 262, 152, 263, 245, 240, 242, 
   243, 261, 279, 292, 22, 56, 58, 23, 42, 5, 6, 78, 80, 81, 82, 100, 
   102, 103, 104, 120, 121, 309, 311, 312, 313, 329, 331, 332, 333, 351, 353, 354, 
   355, 371, 373, 374, 375, 485, 477, 478, 484, 476, 479, 256, 152, 257, 488, 489, 
   490, 491, 492, 493, 387, 494, 495, 496, 390, 497, 498, 499, 393, 500, 501, 502, 
   396, 503, 504, 505, 399, 506, 507, 508, 402, 509, 510, 511, 405, 512, 513, 514, 
   408, 515, 516, 517, 412, 518, 519, 520, 416, 521, 522, 523, 421, 524, 525, 526, 
   424, 527, 528, 529, 426, 530, 531, 532, 429, 533, 534, 535, 433, 536, 537, 538, 
   435, 539, 540, 541, 437, 471, 473, 438, 457, 229, 230, 231, 0, 232, 1, 484, 
   476, 485, 477, 478, 479, 481, 476, 482, 477, 478, 479, 476, 477, 478, 479, 384, 
   385, 388, 391, 394, 397, 400, 403, 406, 409, 413, 417, 422, 425, 427, 430, 434, 
   436, 342, 343, 363, 364, 344, 300, 301, 321, 322, 302, 436, 437, 471, 473, 438, 
   457, 238, 241, 245, 246, 248, 251, 243, 244, 239, 238, 243, 244, 239, 256, 259, 
   263, 264, 266, 269, 261, 262, 152, 257, 256, 261, 262, 152, 257, 274, 276, 277, 
   279, 282, 275, 262, 256, 152, 257, 275, 262, 256, 152, 257, 287, 289, 290, 292, 
   295, 288, 244, 238, 239, 288, 244, 238, 239, 300, 301, 302, 300, 308, 311, 312, 
   314, 317, 309, 310, 301, 302, 300, 309, 310, 301, 302, 321, 328, 331, 332, 334, 
   337, 329, 330, 322, 321, 329, 330, 322, 342, 343, 344, 342, 350, 353, 354, 356, 
   359, 351, 352, 343, 344, 342, 351, 352, 343, 344, 363, 370, 373, 374, 376, 379, 
   371, 372, 364, 363, 371, 372, 364, 439, 443, 447, 448, 450, 453, 445, 446, 440, 
   439, 445, 446, 440, 459, 461, 462, 464, 467, 460, 446, 439, 440, 460, 446, 439, 
   440, 472, 438, 457, 474, 438, 457, 481, 476, 479, 482, 477, 478, 539, 437, 471, 
   473, 438, 457, 238, 256, 152, 257, 239, 234, 236, 237, 255, 273, 286, 303, 305, 
   306, 307, 323, 325, 326, 327, 345, 347, 348, 349, 365, 367, 368, 369, 
};
private static final boolean jjCanMove_0(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec2[i2] & l2) != 0L);
      default :
         if ((jjbitVec0[i1] & l1) != 0L)
            return true;
         return false;
   }
}

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, "\175", "\133", 
"\135", "\50", "\51", "\56", null, "\73", "\72", "\52", "\57", "\55", "\75", "\174", 
"\53", "\76", null, "\176\75", "\174\75", "\74\41\55\55", "\55\55\76", null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, };
protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   if (jjmatchedPos < 0)
   {
      if (image == null)
         curTokenImage = "";
      else
         curTokenImage = image.toString();
      beginLine = endLine = input_stream.getEndLine();
      beginColumn = endColumn = input_stream.getEndColumn();
   }
   else
   {
      String im = jjstrLiteralImages[jjmatchedKind];
      curTokenImage = (im == null) ? input_stream.GetImage() : im;
      beginLine = input_stream.getBeginLine();
      beginColumn = input_stream.getBeginColumn();
      endLine = input_stream.getEndLine();
      endColumn = input_stream.getEndColumn();
   }
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token specialToken = null;
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(Exception e)
   {
      jjmatchedKind = 0;
      jjmatchedPos = -1;
      matchedToken = jjFillToken();
      matchedToken.specialToken = specialToken;
      return matchedToken;
   }
   image = jjimage;
   image.setLength(0);
   jjimageLen = 0;

   for (;;)
   {
     switch(curLexState)
     {
       case 0:
         jjmatchedKind = 5;
         jjmatchedPos = -1;
         curPos = 0;
         curPos = jjMoveStringLiteralDfa0_0();
         if (jjmatchedPos < 0 || (jjmatchedPos == 0 && jjmatchedKind > 76))
         {
            jjmatchedKind = 76;
            jjmatchedPos = 0;
         }
         break;
       case 1:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_1();
         if (jjmatchedPos == 0 && jjmatchedKind > 2)
         {
            jjmatchedKind = 2;
         }
         break;
       case 2:
         jjmatchedKind = 5;
         jjmatchedPos = -1;
         curPos = 0;
         curPos = jjMoveStringLiteralDfa0_2();
         if (jjmatchedPos < 0 || (jjmatchedPos == 0 && jjmatchedKind > 76))
         {
            jjmatchedKind = 76;
            jjmatchedPos = 0;
         }
         break;
     }
     if (jjmatchedKind != 0x7fffffff)
     {
        if (jjmatchedPos + 1 < curPos)
           input_stream.backup(curPos - jjmatchedPos - 1);
        if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           matchedToken = jjFillToken();
           matchedToken.specialToken = specialToken;
           TokenLexicalActions(matchedToken);
       if (jjnewLexState[jjmatchedKind] != -1)
         curLexState = jjnewLexState[jjmatchedKind];
           return matchedToken;
        }
        else if ((jjtoSkip[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           if ((jjtoSpecial[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
           {
              matchedToken = jjFillToken();
              if (specialToken == null)
                 specialToken = matchedToken;
              else
              {
                 matchedToken.specialToken = specialToken;
                 specialToken = (specialToken.next = matchedToken);
              }
              SkipLexicalActions(matchedToken);
           }
           else
              SkipLexicalActions(null);
         if (jjnewLexState[jjmatchedKind] != -1)
           curLexState = jjnewLexState[jjmatchedKind];
           continue EOFLoop;
        }
        jjimageLen += jjmatchedPos + 1;
      if (jjnewLexState[jjmatchedKind] != -1)
        curLexState = jjnewLexState[jjmatchedKind];
        curPos = 0;
        jjmatchedKind = 0x7fffffff;
        try {
           curChar = input_stream.readChar();
           continue;
        }
        catch (java.io.IOException e1) { }
     }
     int error_line = input_stream.getEndLine();
     int error_column = input_stream.getEndColumn();
     String error_after = null;
     boolean EOFSeen = false;
     try { input_stream.readChar(); input_stream.backup(1); }
     catch (java.io.IOException e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
        if (curChar == '\n' || curChar == '\r') {
           error_line++;
           error_column = 0;
        }
        else
           error_column++;
     }
     if (!EOFSeen) {
        input_stream.backup(1);
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
     }
     throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
   }
  }
}

void SkipLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      default :
         break;
   }
}
void TokenLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      case 14 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                   matchedToken.image = "";
         break;
      case 53 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                             matchedToken.image = CSSParseHelper.validateIdentifier(image);
         break;
      case 54 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "em";
         break;
      case 55 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "ex";
         break;
      case 56 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "px";
         break;
      case 57 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "cm";
         break;
      case 58 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "mm";
         break;
      case 59 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "in";
         break;
      case 60 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "pt";
         break;
      case 61 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "pc";
         break;
      case 62 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "deg";
         break;
      case 63 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "rad";
         break;
      case 64 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "grad";
         break;
      case 65 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "ms";
         break;
      case 66 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "s";
         break;
      case 67 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "hz";
         break;
      case 68 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "khz";
         break;
      case 69 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "%";
         break;
      case 72 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                       matchedToken.image = CSSParseHelper.trimUrl(image);
         break;
      case 74 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                matchedToken.image = image.toString ();
         break;
      case 76 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
    s_aLogger.error("Illegal character: " + image.toString());
         break;
      default :
         break;
   }
}
private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

    /** Constructor. */
    public ParserCSS21TokenManager(CharStream stream){


    input_stream = stream;
  }

  /** Constructor. */
  public ParserCSS21TokenManager (CharStream stream, int lexState){
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Reinitialise parser. */
  public void ReInit(CharStream stream)
  {
	
    jjmatchedPos = jjnewStateCnt = 0;
    curLexState = defaultLexState;
    input_stream = stream;
    ReInitRounds();
  }

  private void ReInitRounds()
  {
    int i;
    jjround = 0x80000001;
    for (i = 548; i-- > 0;)
      jjrounds[i] = 0x80000000;
  }

  /** Reinitialise parser. */
  public void ReInit( CharStream stream, int lexState)
  {
  
    ReInit( stream);
    SwitchTo(lexState);
  }

  /** Switch to specified lex state. */
  public void SwitchTo(int lexState)
  {
    if (lexState >= 3 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
    else
      curLexState = lexState;
  }

/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
   "IN_COMMENT",
   "IN_UNKNOWN_RULE",
};

/** Lex State array. */
public static final int[] jjnewLexState = {
   -1, 1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, 
};
static final long[] jjtoToken = {
   0xffffffffffc7c031L, 0x177fL, 
};
static final long[] jjtoSkip = {
   0x8L, 0x800L, 
};
static final long[] jjtoSpecial = {
   0x8L, 0x800L, 
};
static final long[] jjtoMore = {
   0x6L, 0x0L, 
};
    protected CharStream  input_stream;

    private final int[] jjrounds = new int[548];
    private final int[] jjstateSet = new int[2 * 548];

    private final StringBuilder jjimage = new StringBuilder();
    private StringBuilder image = jjimage;
    private int jjimageLen;
    private int lengthOfMatch;
    
    protected int curChar;
}
