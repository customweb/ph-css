/* Generated By:JJTree&JavaCC: Do not edit this line. ParserCSS21Constants.java */
package com.helger.css.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserCSS21Constants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int S = 4;
  /** RegularExpression Id. */
  int W = 5;
  /** RegularExpression Id. */
  int H = 6;
  /** RegularExpression Id. */
  int HNUM = 7;
  /** RegularExpression Id. */
  int NONASCII = 8;
  /** RegularExpression Id. */
  int ESCAPE_UNICODE = 9;
  /** RegularExpression Id. */
  int ESCAPE_OTHER = 10;
  /** RegularExpression Id. */
  int ESCAPE = 11;
  /** RegularExpression Id. */
  int NMSTART = 12;
  /** RegularExpression Id. */
  int NMCHAR = 13;
  /** RegularExpression Id. */
  int STRING_EOL = 14;
  /** RegularExpression Id. */
  int STRING1 = 15;
  /** RegularExpression Id. */
  int STRING2 = 16;
  /** RegularExpression Id. */
  int INVALID_STRING1 = 17;
  /** RegularExpression Id. */
  int INVALID_STRING2 = 18;
  /** RegularExpression Id. */
  int NAME = 19;
  /** RegularExpression Id. */
  int NUM = 20;
  /** RegularExpression Id. */
  int URLCHAR = 21;
  /** RegularExpression Id. */
  int NUMBER = 22;
  /** RegularExpression Id. */
  int LBRACE = 23;
  /** RegularExpression Id. */
  int RBRACE = 24;
  /** RegularExpression Id. */
  int LSQUARE = 25;
  /** RegularExpression Id. */
  int RSQUARE = 26;
  /** RegularExpression Id. */
  int LROUND = 27;
  /** RegularExpression Id. */
  int RROUND = 28;
  /** RegularExpression Id. */
  int DOT = 29;
  /** RegularExpression Id. */
  int COMMA = 30;
  /** RegularExpression Id. */
  int SEMICOLON = 31;
  /** RegularExpression Id. */
  int COLON = 32;
  /** RegularExpression Id. */
  int ASTERISK = 33;
  /** RegularExpression Id. */
  int SLASH = 34;
  /** RegularExpression Id. */
  int MINUS = 35;
  /** RegularExpression Id. */
  int EQUALS = 36;
  /** RegularExpression Id. */
  int DASH = 37;
  /** RegularExpression Id. */
  int PLUS = 38;
  /** RegularExpression Id. */
  int GREATER = 39;
  /** RegularExpression Id. */
  int HASH = 40;
  /** RegularExpression Id. */
  int INCLUDES = 41;
  /** RegularExpression Id. */
  int DASHMATCH = 42;
  /** RegularExpression Id. */
  int CDO = 43;
  /** RegularExpression Id. */
  int CDC = 44;
  /** RegularExpression Id. */
  int CHARSET_SYM = 45;
  /** RegularExpression Id. */
  int IMPORT_SYM = 46;
  /** RegularExpression Id. */
  int NAMESPACE_SYM = 47;
  /** RegularExpression Id. */
  int PAGE_SYM = 48;
  /** RegularExpression Id. */
  int MEDIA_SYM = 49;
  /** RegularExpression Id. */
  int AT_UNKNOWN = 50;
  /** RegularExpression Id. */
  int IMPORTANT_SYM = 51;
  /** RegularExpression Id. */
  int INHERIT = 52;
  /** RegularExpression Id. */
  int IDENT = 53;
  /** RegularExpression Id. */
  int EM = 54;
  /** RegularExpression Id. */
  int EX = 55;
  /** RegularExpression Id. */
  int PX = 56;
  /** RegularExpression Id. */
  int LENGTH_CM = 57;
  /** RegularExpression Id. */
  int LENGTH_MM = 58;
  /** RegularExpression Id. */
  int LENGTH_IN = 59;
  /** RegularExpression Id. */
  int LENGTH_PT = 60;
  /** RegularExpression Id. */
  int LENGTH_PC = 61;
  /** RegularExpression Id. */
  int ANGLE_DEG = 62;
  /** RegularExpression Id. */
  int ANGLE_RAD = 63;
  /** RegularExpression Id. */
  int ANGLE_GRAD = 64;
  /** RegularExpression Id. */
  int TIME_MS = 65;
  /** RegularExpression Id. */
  int TIME_S = 66;
  /** RegularExpression Id. */
  int FREQ_HZ = 67;
  /** RegularExpression Id. */
  int FREQ_KHZ = 68;
  /** RegularExpression Id. */
  int PERCENTAGE = 69;
  /** RegularExpression Id. */
  int DIMENSION = 70;
  /** RegularExpression Id. */
  int URL_CONTENT = 71;
  /** RegularExpression Id. */
  int URL = 72;
  /** RegularExpression Id. */
  int FUNCTION_EXPRESSION = 73;
  /** RegularExpression Id. */
  int FUNCTION = 74;
  /** RegularExpression Id. */
  int SINGLE_LINE_COMMENT = 75;
  /** RegularExpression Id. */
  int UNKNOWN = 76;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_COMMENT = 1;
  /** Lexical state. */
  int IN_UNKNOWN_RULE = 2;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"/*\"",
    "<token of kind 2>",
    "\"*/\"",
    "<S>",
    "<W>",
    "<H>",
    "<HNUM>",
    "<NONASCII>",
    "<ESCAPE_UNICODE>",
    "<ESCAPE_OTHER>",
    "<ESCAPE>",
    "<NMSTART>",
    "<NMCHAR>",
    "<STRING_EOL>",
    "<STRING1>",
    "<STRING2>",
    "<INVALID_STRING1>",
    "<INVALID_STRING2>",
    "<NAME>",
    "<NUM>",
    "<URLCHAR>",
    "<NUMBER>",
    "<LBRACE>",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\"(\"",
    "\")\"",
    "\".\"",
    "<COMMA>",
    "\";\"",
    "\":\"",
    "\"*\"",
    "\"/\"",
    "\"-\"",
    "\"=\"",
    "\"|\"",
    "\"+\"",
    "\">\"",
    "<HASH>",
    "\"~=\"",
    "\"|=\"",
    "\"<!--\"",
    "\"-->\"",
    "\"@charset\"",
    "\"@import\"",
    "\"@namespace\"",
    "\"@page\"",
    "\"@media\"",
    "<AT_UNKNOWN>",
    "<IMPORTANT_SYM>",
    "\"inherit\"",
    "<IDENT>",
    "<EM>",
    "<EX>",
    "<PX>",
    "<LENGTH_CM>",
    "<LENGTH_MM>",
    "<LENGTH_IN>",
    "<LENGTH_PT>",
    "<LENGTH_PC>",
    "<ANGLE_DEG>",
    "<ANGLE_RAD>",
    "<ANGLE_GRAD>",
    "<TIME_MS>",
    "<TIME_S>",
    "<FREQ_HZ>",
    "<FREQ_KHZ>",
    "<PERCENTAGE>",
    "<DIMENSION>",
    "<URL_CONTENT>",
    "<URL>",
    "\"expression(\"",
    "<FUNCTION>",
    "<SINGLE_LINE_COMMENT>",
    "<UNKNOWN>",
  };

}
