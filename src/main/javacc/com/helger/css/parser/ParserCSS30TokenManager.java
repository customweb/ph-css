/* ParserCSS30TokenManager.java */
/* Generated By:JJTree&JavaCC: Do not edit this line. ParserCSS30TokenManager.java */
package com.helger.css.parser;

/** Token Manager. */
@SuppressWarnings("unused")public class ParserCSS30TokenManager implements ParserCSS30Constants {
  private static final org.slf4j.Logger s_aLogger = org.slf4j.LoggerFactory.getLogger (ParserCSS30TokenManager.class);

  void backup(final int nChars) {
    input_stream.backup(nChars);
  }

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_0(int pos, long active0, long active1){
   switch (pos)
   {
      case 0:
         if ((active0 & 0x2000000000L) != 0L)
            return 810;
         if ((active0 & 0x8000000000000L) != 0L)
            return 811;
         if ((active1 & 0x100000001ecL) != 0L)
         {
            jjmatchedKind = 73;
            jjmatchedPos = 0;
            return 812;
         }
         if ((active0 & 0x10020000000000L) != 0L)
            return 813;
         if ((active0 & 0x9f80000000000000L) != 0L)
            return 698;
         if ((active0 & 0x40000000000800L) != 0L)
            return 226;
         if ((active1 & 0x10L) != 0L)
         {
            jjmatchedKind = 73;
            jjmatchedPos = 0;
            return 179;
         }
         if ((active0 & 0x40000000002L) != 0L)
            return 164;
         return -1;
      case 1:
         if ((active1 & 0x1000000007cL) != 0L)
         {
            jjmatchedKind = 73;
            jjmatchedPos = 1;
            return 812;
         }
         if ((active0 & 0x9f80000000000000L) != 0L)
         {
            jjmatchedKind = 64;
            jjmatchedPos = 1;
            return 814;
         }
         if ((active1 & 0x180L) != 0L)
            return 812;
         return -1;
      case 2:
         if ((active0 & 0x9f80000000000000L) != 0L)
         {
            jjmatchedKind = 64;
            jjmatchedPos = 2;
            return 814;
         }
         if ((active1 & 0x18L) != 0L)
            return 812;
         if ((active1 & 0x10000000064L) != 0L)
         {
            jjmatchedKind = 73;
            jjmatchedPos = 2;
            return 812;
         }
         return -1;
      case 3:
         if ((active1 & 0x10000000004L) != 0L)
         {
            jjmatchedKind = 73;
            jjmatchedPos = 3;
            return 812;
         }
         if ((active1 & 0x60L) != 0L)
            return 812;
         if ((active0 & 0x9f80000000000000L) != 0L)
         {
            jjmatchedKind = 64;
            jjmatchedPos = 3;
            return 814;
         }
         return -1;
      case 4:
         if ((active1 & 0x10000000004L) != 0L)
         {
            jjmatchedKind = 73;
            jjmatchedPos = 4;
            return 812;
         }
         if ((active0 & 0x400000000000000L) != 0L)
            return 814;
         if ((active0 & 0x9b80000000000000L) != 0L)
         {
            jjmatchedKind = 64;
            jjmatchedPos = 4;
            return 814;
         }
         return -1;
      case 5:
         if ((active0 & 0x800000000000000L) != 0L)
            return 814;
         if ((active0 & 0x9380000000000000L) != 0L)
         {
            jjmatchedKind = 64;
            jjmatchedPos = 5;
            return 814;
         }
         if ((active1 & 0x10000000004L) != 0L)
         {
            jjmatchedKind = 73;
            jjmatchedPos = 5;
            return 812;
         }
         return -1;
      case 6:
         if ((active0 & 0x100000000000000L) != 0L)
            return 814;
         if ((active1 & 0x10000000000L) != 0L)
         {
            jjmatchedKind = 73;
            jjmatchedPos = 6;
            return 812;
         }
         if ((active1 & 0x4L) != 0L)
            return 812;
         if ((active0 & 0x9280000000000000L) != 0L)
         {
            jjmatchedKind = 64;
            jjmatchedPos = 6;
            return 814;
         }
         return -1;
      case 7:
         if ((active1 & 0x10000000000L) != 0L)
         {
            jjmatchedKind = 73;
            jjmatchedPos = 7;
            return 812;
         }
         if ((active0 & 0x80000000000000L) != 0L)
            return 814;
         if ((active0 & 0x9200000000000000L) != 0L)
         {
            jjmatchedKind = 64;
            jjmatchedPos = 7;
            return 814;
         }
         return -1;
      case 8:
         if ((active0 & 0x8000000000000000L) != 0L)
            return 814;
         if ((active0 & 0x1200000000000000L) != 0L)
         {
            jjmatchedKind = 64;
            jjmatchedPos = 8;
            return 814;
         }
         if ((active1 & 0x10000000000L) != 0L)
         {
            jjmatchedKind = 73;
            jjmatchedPos = 8;
            return 812;
         }
         return -1;
      case 9:
         if ((active0 & 0x1200000000000000L) != 0L)
            return 814;
         if ((active1 & 0x10000000000L) != 0L)
         {
            jjmatchedKind = 73;
            jjmatchedPos = 9;
            return 812;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0, long active1){
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0, active1), pos + 1);
}
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_0(){
   switch(curChar)
   {
      case 36:
         return jjMoveStringLiteralDfa1_0(0x8000000000000L, 0x0L);
      case 40:
         return jjStopAtPos(0, 12);
      case 41:
         return jjStopAtPos(0, 13);
      case 42:
         {
         jjmatchedKind = 41;
         jjmatchedPos = 0;
         }
         return jjMoveStringLiteralDfa1_0(0x10000000000000L, 0x0L);
      case 43:
         return jjStopAtPos(0, 10);
      case 45:
         {
         jjmatchedKind = 11;
         jjmatchedPos = 0;
         }
         return jjMoveStringLiteralDfa1_0(0x40000000000000L, 0x0L);
      case 46:
         return jjStartNfaWithStates_0(0, 37, 810);
      case 47:
         {
         jjmatchedKind = 42;
         jjmatchedPos = 0;
         }
         return jjMoveStringLiteralDfa1_0(0x2L, 0x0L);
      case 58:
         {
         jjmatchedKind = 40;
         jjmatchedPos = 0;
         }
         return jjMoveStringLiteralDfa1_0(0x0L, 0x4000000000L);
      case 59:
         return jjStopAtPos(0, 39);
      case 60:
         return jjMoveStringLiteralDfa1_0(0x20000000000000L, 0x0L);
      case 61:
         return jjStopAtPos(0, 43);
      case 62:
         return jjStopAtPos(0, 45);
      case 64:
         return jjMoveStringLiteralDfa1_0(0x9f80000000000000L, 0x0L);
      case 91:
         return jjStopAtPos(0, 35);
      case 93:
         return jjStopAtPos(0, 36);
      case 94:
         return jjMoveStringLiteralDfa1_0(0x4000000000000L, 0x0L);
      case 65:
      case 97:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x8L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x10000000000L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x40L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x4L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x10L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x120L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x80L);
      case 124:
         {
         jjmatchedKind = 44;
         jjmatchedPos = 0;
         }
         return jjMoveStringLiteralDfa1_0(0x2000000000000L, 0x0L);
      case 125:
         return jjStopAtPos(0, 34);
      case 126:
         {
         jjmatchedKind = 46;
         jjmatchedPos = 0;
         }
         return jjMoveStringLiteralDfa1_0(0x1000000000000L, 0x0L);
      default :
         return jjMoveNfa_0(2, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active0, long active1){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0, active1);
      return 1;
   }
   switch(curChar)
   {
      case 33:
         return jjMoveStringLiteralDfa2_0(active0, 0x20000000000000L, active1, 0L);
      case 42:
         if ((active0 & 0x2L) != 0L)
            return jjStopAtPos(1, 1);
         break;
      case 45:
         return jjMoveStringLiteralDfa2_0(active0, 0x40000000000000L, active1, 0L);
      case 61:
         if ((active0 & 0x1000000000000L) != 0L)
            return jjStopAtPos(1, 48);
         else if ((active0 & 0x2000000000000L) != 0L)
            return jjStopAtPos(1, 49);
         else if ((active0 & 0x4000000000000L) != 0L)
            return jjStopAtPos(1, 50);
         else if ((active0 & 0x8000000000000L) != 0L)
            return jjStopAtPos(1, 51);
         else if ((active0 & 0x10000000000000L) != 0L)
            return jjStopAtPos(1, 52);
         break;
      case 67:
      case 99:
         return jjMoveStringLiteralDfa2_0(active0, 0x80000000000000L, active1, 0L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa2_0(active0, 0x1000000000000000L, active1, 0L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa2_0(active0, 0x100000000000000L, active1, 0L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa2_0(active0, 0x800000000000000L, active1, 0L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa2_0(active0, 0x200000000000000L, active1, 0x400000002cL);
      case 79:
      case 111:
         if ((active1 & 0x80L) != 0L)
            return jjStartNfaWithStates_0(1, 71, 812);
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x10L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa2_0(active0, 0x400000000000000L, active1, 0L);
      case 82:
      case 114:
         if ((active1 & 0x100L) != 0L)
            return jjStartNfaWithStates_0(1, 72, 812);
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x40L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa2_0(active0, 0x8000000000000000L, active1, 0L);
      case 88:
      case 120:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x10000000000L);
      default :
         break;
   }
   return jjStartNfa_0(0, active0, active1);
}
private int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(0, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0, active1);
      return 2;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa3_0(active0, 0x20000000000000L, active1, 0L);
      case 62:
         if ((active0 & 0x40000000000000L) != 0L)
            return jjStopAtPos(2, 54);
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa3_0(active0, 0x600000000000000L, active1, 0L);
      case 68:
      case 100:
         if ((active1 & 0x8L) != 0L)
            return jjStartNfaWithStates_0(2, 67, 812);
         break;
      case 69:
      case 101:
         return jjMoveStringLiteralDfa3_0(active0, 0x800000000000000L, active1, 0L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa3_0(active0, 0x80000000000000L, active1, 0x4L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x20L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa3_0(active0, 0x100000000000000L, active1, 0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa3_0(active0, 0x1000000000000000L, active1, 0x4000000040L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x10000000000L);
      case 84:
      case 116:
         if ((active1 & 0x10L) != 0L)
            return jjStartNfaWithStates_0(2, 68, 812);
         break;
      case 85:
      case 117:
         return jjMoveStringLiteralDfa3_0(active0, 0x8000000000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(1, active0, active1);
}
private int jjMoveStringLiteralDfa3_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(1, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0, active1);
      return 3;
   }
   switch(curChar)
   {
      case 45:
         if ((active0 & 0x20000000000000L) != 0L)
            return jjStopAtPos(3, 53);
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa4_0(active0, 0x80000000000000L, active1, 0L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa4_0(active0, 0x800000000000000L, active1, 0L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x4L);
      case 71:
      case 103:
         return jjMoveStringLiteralDfa4_0(active0, 0x400000000000000L, active1, 0L);
      case 77:
      case 109:
         if ((active1 & 0x40L) != 0L)
            return jjStartNfaWithStates_0(3, 70, 812);
         return jjMoveStringLiteralDfa4_0(active0, 0x200000000000000L, active1, 0L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa4_0(active0, 0x1000000000000000L, active1, 0L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa4_0(active0, 0x8100000000000000L, active1, 0L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x10000000000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x4000000000L);
      case 89:
      case 121:
         if ((active1 & 0x20L) != 0L)
            return jjStartNfaWithStates_0(3, 69, 812);
         break;
      default :
         break;
   }
   return jjStartNfa_0(2, active0, active1);
}
private int jjMoveStringLiteralDfa4_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(2, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, active0, active1);
      return 4;
   }
   switch(curChar)
   {
      case 40:
         if ((active1 & 0x4000000000L) != 0L)
            return jjStopAtPos(4, 102);
         break;
      case 69:
      case 101:
         if ((active0 & 0x400000000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 58, 814);
         return jjMoveStringLiteralDfa5_0(active0, 0x200000000000000L, active1, 0x10000000000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa5_0(active0, 0x800000000000000L, active1, 0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa5_0(active0, 0x100000000000000L, active1, 0L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa5_0(active0, 0x8000000000000000L, active1, 0L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa5_0(active0, 0x80000000000000L, active1, 0x4L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa5_0(active0, 0x1000000000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(3, active0, active1);
}
private int jjMoveStringLiteralDfa5_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(3, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(4, active0, active1);
      return 5;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa6_0(active0, 0x1000000000000000L, active1, 0L);
      case 65:
      case 97:
         if ((active0 & 0x800000000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 59, 814);
         break;
      case 73:
      case 105:
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x4L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa6_0(active0, 0x8000000000000000L, active1, 0L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa6_0(active0, 0x100000000000000L, active1, 0L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa6_0(active0, 0x280000000000000L, active1, 0x10000000000L);
      default :
         break;
   }
   return jjStartNfa_0(4, active0, active1);
}
private int jjMoveStringLiteralDfa6_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(4, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(5, active0, active1);
      return 6;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         return jjMoveStringLiteralDfa7_0(active0, 0x80000000000000L, active1, 0L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa7_0(active0, 0x1000000000000000L, active1, 0L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa7_0(active0, 0x200000000000000L, active1, 0L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa7_0(active0, 0x8000000000000000L, active1, 0L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0x10000000000L);
      case 84:
      case 116:
         if ((active0 & 0x100000000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 56, 814);
         else if ((active1 & 0x4L) != 0L)
            return jjStartNfaWithStates_0(6, 66, 812);
         break;
      default :
         break;
   }
   return jjStartNfa_0(5, active0, active1);
}
private int jjMoveStringLiteralDfa7_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(5, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(6, active0, active1);
      return 7;
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa8_0(active0, 0x1200000000000000L, active1, 0L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa8_0(active0, 0L, active1, 0x10000000000L);
      case 84:
      case 116:
         if ((active0 & 0x80000000000000L) != 0L)
            return jjStartNfaWithStates_0(7, 55, 814);
         return jjMoveStringLiteralDfa8_0(active0, 0x8000000000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(6, active0, active1);
}
private int jjMoveStringLiteralDfa8_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(6, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(7, active0, active1);
      return 8;
   }
   switch(curChar)
   {
      case 67:
      case 99:
         return jjMoveStringLiteralDfa9_0(active0, 0x1200000000000000L, active1, 0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa9_0(active0, 0L, active1, 0x10000000000L);
      case 83:
      case 115:
         if ((active0 & 0x8000000000000000L) != 0L)
            return jjStartNfaWithStates_0(8, 63, 814);
         break;
      default :
         break;
   }
   return jjStartNfa_0(7, active0, active1);
}
private int jjMoveStringLiteralDfa9_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(7, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(8, active0, active1);
      return 9;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         if ((active0 & 0x200000000000000L) != 0L)
            return jjStartNfaWithStates_0(9, 57, 814);
         else if ((active0 & 0x1000000000000000L) != 0L)
            return jjStartNfaWithStates_0(9, 60, 814);
         break;
      case 78:
      case 110:
         return jjMoveStringLiteralDfa10_0(active0, 0L, active1, 0x10000000000L);
      default :
         break;
   }
   return jjStartNfa_0(8, active0, active1);
}
private int jjMoveStringLiteralDfa10_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(8, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(9, 0L, active1);
      return 10;
   }
   switch(curChar)
   {
      case 40:
         if ((active1 & 0x10000000000L) != 0L)
            return jjStopAtPos(10, 104);
         break;
      default :
         break;
   }
   return jjStartNfa_0(9, 0L, active1);
}
private int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
static final long[] jjbitVec0 = {
   0xfffffffffffffffeL, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec2 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 810;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 2:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 32)
                        kind = 32;
                     { jjCheckNAddStates(0, 102); }
                  }
                  else if ((0x100003600L & l) != 0L)
                  {
                     if (kind > 4)
                        kind = 4;
                     { jjCheckNAddStates(103, 108); }
                  }
                  else if (curChar == 42)
                     { jjCheckNAddStates(109, 114); }
                  else if (curChar == 36)
                     { jjCheckNAddStates(115, 120); }
                  else if (curChar == 45)
                     { jjCheckNAddStates(121, 124); }
                  else if (curChar == 46)
                     { jjCheckNAddStates(125, 150); }
                  else if (curChar == 39)
                  {
                     if (kind > 26)
                        kind = 26;
                     { jjCheckNAddStates(151, 155); }
                  }
                  else if (curChar == 34)
                  {
                     if (kind > 25)
                        kind = 25;
                     { jjCheckNAddStates(156, 160); }
                  }
                  else if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 164;
                  else if (curChar == 33)
                     { jjCheckNAddTwoStates(61, 70); }
                  else if (curChar == 35)
                     { jjCheckNAddTwoStates(3, 4); }
                  else if (curChar == 44)
                  {
                     if (kind > 38)
                        kind = 38;
                  }
                  if (curChar == 45)
                     { jjAddStates(161, 163); }
                  break;
               case 179:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(164, 166); }
                  else if (curChar == 40)
                  {
                     if (kind > 105)
                        kind = 105;
                  }
                  if ((0x3ff200000000000L & l) != 0L)
                  {
                     if (kind > 73)
                        kind = 73;
                     { jjCheckNAddTwoStates(254, 255); }
                  }
                  break;
               case 810:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(487, 488); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(483, 486); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(480, 482); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(478, 479); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(475, 477); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(470, 474); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(465, 469); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(461, 464); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(457, 460); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(454, 456); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(451, 453); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(448, 450); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(445, 447); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(442, 444); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(437, 441); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(432, 436); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(428, 431); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(425, 427); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(420, 424); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(417, 419); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(414, 416); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(410, 413); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(407, 409); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(404, 406); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(401, 403); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 32)
                        kind = 32;
                     { jjCheckNAdd(400); }
                  }
                  break;
               case 698:
                  if (curChar == 42)
                     { jjCheckNAddStates(167, 169); }
                  else if (curChar == 36)
                     { jjCheckNAddStates(170, 172); }
                  else if (curChar == 45)
                     { jjCheckNAddTwoStates(23, 42); }
                  if (curChar == 45)
                     { jjCheckNAddStates(173, 177); }
                  if (curChar == 45)
                     { jjCheckNAddStates(178, 182); }
                  break;
               case 812:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(164, 166); }
                  else if (curChar == 40)
                  {
                     if (kind > 105)
                        kind = 105;
                  }
                  if ((0x3ff200000000000L & l) != 0L)
                  {
                     if (kind > 73)
                        kind = 73;
                     { jjCheckNAddTwoStates(254, 255); }
                  }
                  break;
               case 811:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(183, 185); }
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(186, 188); }
                  break;
               case 813:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(189, 191); }
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(192, 194); }
                  break;
               case 814:
               case 24:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddTwoStates(24, 25); }
                  break;
               case 1:
                  if (curChar == 44 && kind > 38)
                     kind = 38;
                  break;
               case 3:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  { jjCheckNAddTwoStates(3, 4); }
                  break;
               case 5:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  { jjCheckNAddTwoStates(3, 4); }
                  break;
               case 6:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  { jjCheckNAddStates(195, 203); }
                  break;
               case 7:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  { jjCheckNAddStates(204, 207); }
                  break;
               case 8:
                  if (curChar != 10)
                     break;
                  if (kind > 47)
                     kind = 47;
                  { jjCheckNAddTwoStates(3, 4); }
                  break;
               case 9:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 10:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  { jjCheckNAddTwoStates(3, 4); }
                  break;
               case 11:
               case 13:
               case 16:
               case 20:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(7); }
                  break;
               case 12:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 14:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 15:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 17:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 18:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 19:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 22:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(23, 42); }
                  break;
               case 26:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddTwoStates(24, 25); }
                  break;
               case 27:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(208, 216); }
                  break;
               case 28:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(217, 220); }
                  break;
               case 29:
                  if (curChar != 10)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddTwoStates(24, 25); }
                  break;
               case 30:
               case 45:
                  if (curChar == 13)
                     { jjCheckNAdd(29); }
                  break;
               case 31:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddTwoStates(24, 25); }
                  break;
               case 32:
               case 34:
               case 37:
               case 41:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(28); }
                  break;
               case 33:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 34;
                  break;
               case 35:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 36;
                  break;
               case 36:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 38:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 39:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 40;
                  break;
               case 40:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 43:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(221, 229); }
                  break;
               case 44:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(230, 233); }
                  break;
               case 46:
               case 48:
               case 51:
               case 55:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(44); }
                  break;
               case 47:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 48;
                  break;
               case 49:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 50;
                  break;
               case 50:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 52:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 53;
                  break;
               case 53:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 54;
                  break;
               case 54:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 55;
                  break;
               case 56:
                  if (curChar == 36)
                     { jjCheckNAddStates(170, 172); }
                  break;
               case 57:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(170, 172); }
                  break;
               case 58:
                  if (curChar == 42)
                     { jjCheckNAddStates(167, 169); }
                  break;
               case 59:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(167, 169); }
                  break;
               case 60:
                  if (curChar == 33)
                     { jjCheckNAddTwoStates(61, 70); }
                  break;
               case 61:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(61, 70); }
                  break;
               case 71:
                  if (curChar == 40 && kind > 101)
                     kind = 101;
                  break;
               case 77:
                  if ((0x100003600L & l) != 0L)
                     { jjAddStates(234, 235); }
                  break;
               case 78:
                  if (curChar == 58)
                     { jjCheckNAddStates(236, 241); }
                  break;
               case 79:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(236, 241); }
                  break;
               case 80:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(81, 141); }
                  break;
               case 82:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(242, 246); }
                  break;
               case 83:
                  if (curChar == 46)
                     { jjCheckNAddStates(247, 251); }
                  break;
               case 84:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(85, 106); }
                  break;
               case 86:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(252, 256); }
                  break;
               case 87:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(87, 88); }
                  break;
               case 88:
                  if (curChar == 40 && kind > 105)
                     kind = 105;
                  break;
               case 90:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(252, 256); }
                  break;
               case 91:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(257, 267); }
                  break;
               case 92:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(268, 273); }
                  break;
               case 93:
                  if (curChar == 10)
                     { jjCheckNAddStates(252, 256); }
                  break;
               case 94:
               case 109:
                  if (curChar == 13)
                     { jjCheckNAdd(93); }
                  break;
               case 95:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(252, 256); }
                  break;
               case 96:
               case 98:
               case 101:
               case 105:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(92); }
                  break;
               case 97:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 98;
                  break;
               case 99:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 100;
                  break;
               case 100:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 101;
                  break;
               case 102:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 103;
                  break;
               case 103:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 104;
                  break;
               case 104:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 105;
                  break;
               case 107:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(274, 284); }
                  break;
               case 108:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(285, 290); }
                  break;
               case 110:
               case 112:
               case 115:
               case 119:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(108); }
                  break;
               case 111:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 112;
                  break;
               case 113:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 114;
                  break;
               case 114:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 115;
                  break;
               case 116:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 117;
                  break;
               case 117:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 118;
                  break;
               case 118:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 119;
                  break;
               case 120:
                  if (curChar == 36)
                     { jjCheckNAddStates(291, 293); }
                  break;
               case 121:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(291, 293); }
                  break;
               case 122:
                  if (curChar == 42)
                     { jjCheckNAddStates(294, 296); }
                  break;
               case 123:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(294, 296); }
                  break;
               case 125:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(242, 246); }
                  break;
               case 126:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(297, 307); }
                  break;
               case 127:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(308, 313); }
                  break;
               case 128:
                  if (curChar == 10)
                     { jjCheckNAddStates(242, 246); }
                  break;
               case 129:
               case 144:
                  if (curChar == 13)
                     { jjCheckNAdd(128); }
                  break;
               case 130:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(242, 246); }
                  break;
               case 131:
               case 133:
               case 136:
               case 140:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(127); }
                  break;
               case 132:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 133;
                  break;
               case 134:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 135;
                  break;
               case 135:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 136;
                  break;
               case 137:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 138;
                  break;
               case 138:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 139;
                  break;
               case 139:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 140;
                  break;
               case 142:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(314, 324); }
                  break;
               case 143:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(325, 330); }
                  break;
               case 145:
               case 147:
               case 150:
               case 154:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(143); }
                  break;
               case 146:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 147;
                  break;
               case 148:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 149;
                  break;
               case 149:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 150;
                  break;
               case 151:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 152;
                  break;
               case 152:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 153;
                  break;
               case 153:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 154;
                  break;
               case 155:
                  if (curChar == 36)
                     { jjCheckNAddStates(331, 333); }
                  break;
               case 156:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(331, 333); }
                  break;
               case 157:
                  if (curChar == 42)
                     { jjCheckNAddStates(334, 336); }
                  break;
               case 158:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(334, 336); }
                  break;
               case 164:
                  if (curChar != 47)
                     break;
                  if (kind > 107)
                     kind = 107;
                  { jjCheckNAddStates(337, 339); }
                  break;
               case 165:
                  if ((0xf7ffffffffffdbffL & l) == 0L)
                     break;
                  if (kind > 107)
                     kind = 107;
                  { jjCheckNAddStates(337, 339); }
                  break;
               case 166:
                  if ((0x2400L & l) != 0L && kind > 107)
                     kind = 107;
                  break;
               case 167:
                  if (curChar == 10 && kind > 107)
                     kind = 107;
                  break;
               case 168:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 167;
                  break;
               case 169:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 164;
                  break;
               case 171:
                  if (curChar == 40 && kind > 103)
                     kind = 103;
                  break;
               case 177:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 176;
                  break;
               case 185:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 184;
                  break;
               case 190:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 189;
                  break;
               case 197:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 196;
                  break;
               case 200:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 199;
                  break;
               case 207:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 206;
                  break;
               case 210:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 209;
                  break;
               case 215:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 214;
                  break;
               case 218:
                  if (curChar == 45)
                     { jjAddStates(161, 163); }
                  break;
               case 223:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 222;
                  break;
               case 231:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 230;
                  break;
               case 242:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 241;
                  break;
               case 244:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 4)
                     kind = 4;
                  { jjCheckNAddStates(103, 108); }
                  break;
               case 245:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 4)
                     kind = 4;
                  { jjCheckNAdd(245); }
                  break;
               case 246:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 5)
                     kind = 5;
                  { jjCheckNAdd(246); }
                  break;
               case 247:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(247, 0); }
                  break;
               case 248:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(248, 1); }
                  break;
               case 250:
                  if ((0x3400L & l) != 0L && kind > 22)
                     kind = 22;
                  break;
               case 251:
                  if (curChar == 10 && kind > 22)
                     kind = 22;
                  break;
               case 252:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 251;
                  break;
               case 253:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  { jjCheckNAddTwoStates(254, 255); }
                  break;
               case 254:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  { jjCheckNAddTwoStates(254, 255); }
                  break;
               case 256:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  { jjCheckNAddStates(340, 348); }
                  break;
               case 257:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  { jjCheckNAddStates(349, 352); }
                  break;
               case 258:
                  if (curChar != 10)
                     break;
                  if (kind > 73)
                     kind = 73;
                  { jjCheckNAddTwoStates(254, 255); }
                  break;
               case 259:
               case 304:
                  if (curChar == 13)
                     { jjCheckNAdd(258); }
                  break;
               case 260:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  { jjCheckNAddTwoStates(254, 255); }
                  break;
               case 261:
               case 263:
               case 266:
               case 270:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(257); }
                  break;
               case 262:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 263;
                  break;
               case 264:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 265;
                  break;
               case 265:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 266;
                  break;
               case 267:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 268;
                  break;
               case 268:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 269;
                  break;
               case 269:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 270;
                  break;
               case 271:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(164, 166); }
                  break;
               case 272:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(164, 166); }
                  break;
               case 274:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(353, 362); }
                  break;
               case 275:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(363, 367); }
                  break;
               case 276:
                  if (curChar == 10)
                     { jjCheckNAddStates(164, 166); }
                  break;
               case 277:
               case 291:
                  if (curChar == 13)
                     { jjCheckNAdd(276); }
                  break;
               case 278:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(164, 166); }
                  break;
               case 279:
               case 281:
               case 284:
               case 288:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(275); }
                  break;
               case 280:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 281;
                  break;
               case 282:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 283;
                  break;
               case 283:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 284;
                  break;
               case 285:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 286;
                  break;
               case 286:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 287;
                  break;
               case 287:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 288;
                  break;
               case 289:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(368, 377); }
                  break;
               case 290:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(378, 382); }
                  break;
               case 292:
               case 294:
               case 297:
               case 301:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(290); }
                  break;
               case 293:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 294;
                  break;
               case 295:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 296;
                  break;
               case 296:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 297;
                  break;
               case 298:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 299;
                  break;
               case 299:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 300;
                  break;
               case 300:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 301;
                  break;
               case 302:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  { jjCheckNAddStates(383, 391); }
                  break;
               case 303:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  { jjCheckNAddStates(392, 395); }
                  break;
               case 305:
               case 307:
               case 310:
               case 314:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(303); }
                  break;
               case 306:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 307;
                  break;
               case 308:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 309;
                  break;
               case 309:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 310;
                  break;
               case 311:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 312;
                  break;
               case 312:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 313;
                  break;
               case 313:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 314;
                  break;
               case 315:
                  if (curChar != 34)
                     break;
                  if (kind > 25)
                     kind = 25;
                  { jjCheckNAddStates(156, 160); }
                  break;
               case 316:
                  if ((0xfffffffbffffcbffL & l) != 0L)
                     { jjCheckNAddStates(396, 398); }
                  break;
               case 317:
                  if (curChar == 34 && kind > 23)
                     kind = 23;
                  break;
               case 319:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(396, 398); }
                  break;
               case 320:
                  if (curChar == 10)
                     { jjCheckNAddStates(396, 398); }
                  break;
               case 321:
               case 325:
                  if (curChar == 13)
                     { jjCheckNAdd(320); }
                  break;
               case 322:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(396, 398); }
                  break;
               case 323:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(399, 408); }
                  break;
               case 324:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(409, 413); }
                  break;
               case 326:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(396, 398); }
                  break;
               case 327:
               case 329:
               case 332:
               case 336:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(324); }
                  break;
               case 328:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 329;
                  break;
               case 330:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 331;
                  break;
               case 331:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 332;
                  break;
               case 333:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 334;
                  break;
               case 334:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 335;
                  break;
               case 335:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 336;
                  break;
               case 337:
                  if ((0xfffffffbffffcbffL & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  { jjCheckNAddTwoStates(337, 338); }
                  break;
               case 339:
                  if ((0x3400L & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  { jjCheckNAddTwoStates(337, 338); }
                  break;
               case 340:
                  if (curChar != 10)
                     break;
                  if (kind > 25)
                     kind = 25;
                  { jjCheckNAddTwoStates(337, 338); }
                  break;
               case 341:
               case 345:
                  if (curChar == 13)
                     { jjCheckNAdd(340); }
                  break;
               case 342:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  { jjCheckNAddTwoStates(337, 338); }
                  break;
               case 343:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  { jjCheckNAddStates(414, 422); }
                  break;
               case 344:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  { jjCheckNAddStates(423, 426); }
                  break;
               case 346:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  { jjCheckNAddTwoStates(337, 338); }
                  break;
               case 347:
               case 349:
               case 352:
               case 356:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(344); }
                  break;
               case 348:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 349;
                  break;
               case 350:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 351;
                  break;
               case 351:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 352;
                  break;
               case 353:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 354;
                  break;
               case 354:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 355;
                  break;
               case 355:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 356;
                  break;
               case 357:
                  if (curChar != 39)
                     break;
                  if (kind > 26)
                     kind = 26;
                  { jjCheckNAddStates(151, 155); }
                  break;
               case 358:
                  if ((0xffffff7fffffcbffL & l) != 0L)
                     { jjCheckNAddStates(427, 429); }
                  break;
               case 359:
                  if (curChar == 39 && kind > 24)
                     kind = 24;
                  break;
               case 361:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(427, 429); }
                  break;
               case 362:
                  if (curChar == 10)
                     { jjCheckNAddStates(427, 429); }
                  break;
               case 363:
               case 367:
                  if (curChar == 13)
                     { jjCheckNAdd(362); }
                  break;
               case 364:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(427, 429); }
                  break;
               case 365:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(430, 439); }
                  break;
               case 366:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(440, 444); }
                  break;
               case 368:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(427, 429); }
                  break;
               case 369:
               case 371:
               case 374:
               case 378:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(366); }
                  break;
               case 370:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 371;
                  break;
               case 372:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 373;
                  break;
               case 373:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 374;
                  break;
               case 375:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 376;
                  break;
               case 376:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 377;
                  break;
               case 377:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 378;
                  break;
               case 379:
                  if ((0xffffff7fffffcbffL & l) == 0L)
                     break;
                  if (kind > 26)
                     kind = 26;
                  { jjCheckNAddTwoStates(379, 380); }
                  break;
               case 381:
                  if ((0x3400L & l) == 0L)
                     break;
                  if (kind > 26)
                     kind = 26;
                  { jjCheckNAddTwoStates(379, 380); }
                  break;
               case 382:
                  if (curChar != 10)
                     break;
                  if (kind > 26)
                     kind = 26;
                  { jjCheckNAddTwoStates(379, 380); }
                  break;
               case 383:
               case 387:
                  if (curChar == 13)
                     { jjCheckNAdd(382); }
                  break;
               case 384:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 26)
                     kind = 26;
                  { jjCheckNAddTwoStates(379, 380); }
                  break;
               case 385:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 26)
                     kind = 26;
                  { jjCheckNAddStates(445, 453); }
                  break;
               case 386:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 26)
                     kind = 26;
                  { jjCheckNAddStates(454, 457); }
                  break;
               case 388:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 26)
                     kind = 26;
                  { jjCheckNAddTwoStates(379, 380); }
                  break;
               case 389:
               case 391:
               case 394:
               case 398:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(386); }
                  break;
               case 390:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 391;
                  break;
               case 392:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 393;
                  break;
               case 393:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 394;
                  break;
               case 395:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 396;
                  break;
               case 396:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 397;
                  break;
               case 397:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 398;
                  break;
               case 399:
                  if (curChar == 46)
                     { jjCheckNAddStates(125, 150); }
                  break;
               case 400:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 32)
                     kind = 32;
                  { jjCheckNAdd(400); }
                  break;
               case 401:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(401, 403); }
                  break;
               case 404:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(404, 406); }
                  break;
               case 407:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(407, 409); }
                  break;
               case 410:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(410, 413); }
                  break;
               case 414:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(414, 416); }
                  break;
               case 417:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(417, 419); }
                  break;
               case 420:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(420, 424); }
                  break;
               case 425:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(425, 427); }
                  break;
               case 428:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(428, 431); }
                  break;
               case 432:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(432, 436); }
                  break;
               case 437:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(437, 441); }
                  break;
               case 442:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(442, 444); }
                  break;
               case 445:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(445, 447); }
                  break;
               case 448:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(448, 450); }
                  break;
               case 451:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(451, 453); }
                  break;
               case 454:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(454, 456); }
                  break;
               case 457:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(457, 460); }
                  break;
               case 461:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(461, 464); }
                  break;
               case 465:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(465, 469); }
                  break;
               case 470:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(470, 474); }
                  break;
               case 475:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(475, 477); }
                  break;
               case 478:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(478, 479); }
                  break;
               case 480:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(480, 482); }
                  break;
               case 483:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(483, 486); }
                  break;
               case 487:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(487, 488); }
                  break;
               case 488:
                  if (curChar == 37 && kind > 98)
                     kind = 98;
                  break;
               case 489:
                  if (curChar == 45)
                     { jjCheckNAddStates(121, 124); }
                  break;
               case 494:
                  if (curChar == 36)
                     { jjCheckNAddStates(115, 120); }
                  break;
               case 495:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(186, 188); }
                  break;
               case 496:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(183, 185); }
                  break;
               case 497:
                  if (curChar == 42)
                     { jjCheckNAddStates(109, 114); }
                  break;
               case 498:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(192, 194); }
                  break;
               case 499:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(189, 191); }
                  break;
               case 502:
                  if (curChar == 40)
                     { jjCheckNAddStates(458, 463); }
                  break;
               case 503:
                  if (curChar == 34)
                     { jjCheckNAddStates(464, 466); }
                  break;
               case 504:
                  if ((0xfffffffbffffcbffL & l) != 0L)
                     { jjCheckNAddStates(464, 466); }
                  break;
               case 505:
                  if (curChar == 34)
                     { jjCheckNAddTwoStates(506, 507); }
                  break;
               case 506:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(506, 507); }
                  break;
               case 507:
                  if (curChar == 41 && kind > 100)
                     kind = 100;
                  break;
               case 509:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(464, 466); }
                  break;
               case 510:
                  if (curChar == 10)
                     { jjCheckNAddStates(464, 466); }
                  break;
               case 511:
               case 515:
                  if (curChar == 13)
                     { jjCheckNAdd(510); }
                  break;
               case 512:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(464, 466); }
                  break;
               case 513:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(467, 476); }
                  break;
               case 514:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(477, 481); }
                  break;
               case 516:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(464, 466); }
                  break;
               case 517:
               case 519:
               case 522:
               case 526:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(514); }
                  break;
               case 518:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 519;
                  break;
               case 520:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 521;
                  break;
               case 521:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 522;
                  break;
               case 523:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 524;
                  break;
               case 524:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 525;
                  break;
               case 525:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 526;
                  break;
               case 527:
                  if (curChar == 39)
                     { jjCheckNAddStates(482, 484); }
                  break;
               case 528:
                  if ((0xffffff7fffffcbffL & l) != 0L)
                     { jjCheckNAddStates(482, 484); }
                  break;
               case 529:
                  if (curChar == 39)
                     { jjCheckNAddTwoStates(506, 507); }
                  break;
               case 531:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(482, 484); }
                  break;
               case 532:
                  if (curChar == 10)
                     { jjCheckNAddStates(482, 484); }
                  break;
               case 533:
               case 537:
                  if (curChar == 13)
                     { jjCheckNAdd(532); }
                  break;
               case 534:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(482, 484); }
                  break;
               case 535:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(485, 494); }
                  break;
               case 536:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(495, 499); }
                  break;
               case 538:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(482, 484); }
                  break;
               case 539:
               case 541:
               case 544:
               case 548:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(536); }
                  break;
               case 540:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 541;
                  break;
               case 542:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 543;
                  break;
               case 543:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 544;
                  break;
               case 545:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 546;
                  break;
               case 546:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 547;
                  break;
               case 547:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 548;
                  break;
               case 549:
                  if ((0xfffffc7a00000000L & l) != 0L)
                     { jjCheckNAddStates(500, 503); }
                  break;
               case 551:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(500, 503); }
                  break;
               case 552:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(504, 513); }
                  break;
               case 553:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(514, 518); }
                  break;
               case 554:
                  if (curChar == 10)
                     { jjCheckNAddStates(500, 503); }
                  break;
               case 555:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 554;
                  break;
               case 556:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(500, 503); }
                  break;
               case 557:
               case 559:
               case 562:
               case 566:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(553); }
                  break;
               case 558:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 559;
                  break;
               case 560:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 561;
                  break;
               case 561:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 562;
                  break;
               case 563:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 564;
                  break;
               case 564:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 565;
                  break;
               case 565:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 566;
                  break;
               case 567:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(519, 525); }
                  break;
               case 570:
                  if (curChar == 43)
                     { jjAddStates(526, 527); }
                  break;
               case 571:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(528, 538); }
                  break;
               case 572:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(573); }
                  break;
               case 573:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 574;
                  break;
               case 574:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddStates(539, 543); }
                  break;
               case 575:
                  if ((0x3ff000000000000L & l) != 0L && kind > 106)
                     kind = 106;
                  break;
               case 576:
               case 578:
               case 581:
               case 585:
               case 599:
               case 602:
               case 604:
               case 605:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(575); }
                  break;
               case 577:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 578;
                  break;
               case 579:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 580;
                  break;
               case 580:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 581;
                  break;
               case 582:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 583;
                  break;
               case 583:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 584;
                  break;
               case 584:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 585;
                  break;
               case 586:
               case 588:
               case 591:
               case 595:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(572); }
                  break;
               case 587:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 588;
                  break;
               case 589:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 590;
                  break;
               case 590:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 591;
                  break;
               case 592:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 593;
                  break;
               case 593:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 594;
                  break;
               case 594:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 595;
                  break;
               case 596:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 597;
                  break;
               case 597:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 598;
                  break;
               case 598:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 599;
                  break;
               case 600:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 601;
                  break;
               case 601:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 602;
                  break;
               case 603:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 604;
                  break;
               case 606:
                  if ((0x83ff000000000000L & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddStates(544, 548); }
                  break;
               case 607:
                  if ((0x83ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 608;
                  break;
               case 608:
                  if ((0x83ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 609;
                  break;
               case 609:
                  if ((0x83ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 610;
                  break;
               case 610:
               case 614:
               case 616:
               case 617:
                  if ((0x83ff000000000000L & l) != 0L)
                     { jjCheckNAdd(611); }
                  break;
               case 611:
                  if ((0x83ff000000000000L & l) != 0L && kind > 106)
                     kind = 106;
                  break;
               case 612:
                  if ((0x83ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 613;
                  break;
               case 613:
                  if ((0x83ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 614;
                  break;
               case 615:
                  if ((0x83ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 616;
                  break;
               case 618:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 32)
                     kind = 32;
                  { jjCheckNAddStates(0, 102); }
                  break;
               case 619:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 32)
                     kind = 32;
                  { jjCheckNAdd(619); }
                  break;
               case 620:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(620, 621); }
                  break;
               case 621:
                  if (curChar == 46)
                     { jjCheckNAdd(400); }
                  break;
               case 622:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(622, 403); }
                  break;
               case 623:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(623, 624); }
                  break;
               case 624:
                  if (curChar == 46)
                     { jjCheckNAdd(401); }
                  break;
               case 625:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(625, 406); }
                  break;
               case 626:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(626, 627); }
                  break;
               case 627:
                  if (curChar == 46)
                     { jjCheckNAdd(404); }
                  break;
               case 628:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(628, 409); }
                  break;
               case 629:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(629, 630); }
                  break;
               case 630:
                  if (curChar == 46)
                     { jjCheckNAdd(407); }
                  break;
               case 631:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(631, 413); }
                  break;
               case 632:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(632, 633); }
                  break;
               case 633:
                  if (curChar == 46)
                     { jjCheckNAdd(410); }
                  break;
               case 634:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(634, 416); }
                  break;
               case 635:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(635, 636); }
                  break;
               case 636:
                  if (curChar == 46)
                     { jjCheckNAdd(414); }
                  break;
               case 637:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(637, 419); }
                  break;
               case 638:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(638, 639); }
                  break;
               case 639:
                  if (curChar == 46)
                     { jjCheckNAdd(417); }
                  break;
               case 640:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(640, 424); }
                  break;
               case 641:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(641, 642); }
                  break;
               case 642:
                  if (curChar == 46)
                     { jjCheckNAdd(420); }
                  break;
               case 643:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(643, 427); }
                  break;
               case 644:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(644, 645); }
                  break;
               case 645:
                  if (curChar == 46)
                     { jjCheckNAdd(425); }
                  break;
               case 646:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(646, 431); }
                  break;
               case 647:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(647, 648); }
                  break;
               case 648:
                  if (curChar == 46)
                     { jjCheckNAdd(428); }
                  break;
               case 649:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(649, 436); }
                  break;
               case 650:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(650, 651); }
                  break;
               case 651:
                  if (curChar == 46)
                     { jjCheckNAdd(432); }
                  break;
               case 652:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(652, 441); }
                  break;
               case 653:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(653, 654); }
                  break;
               case 654:
                  if (curChar == 46)
                     { jjCheckNAdd(437); }
                  break;
               case 655:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(655, 444); }
                  break;
               case 656:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(656, 657); }
                  break;
               case 657:
                  if (curChar == 46)
                     { jjCheckNAdd(442); }
                  break;
               case 658:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(658, 447); }
                  break;
               case 659:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(659, 660); }
                  break;
               case 660:
                  if (curChar == 46)
                     { jjCheckNAdd(445); }
                  break;
               case 661:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(661, 450); }
                  break;
               case 662:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(662, 663); }
                  break;
               case 663:
                  if (curChar == 46)
                     { jjCheckNAdd(448); }
                  break;
               case 664:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(664, 453); }
                  break;
               case 665:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(665, 666); }
                  break;
               case 666:
                  if (curChar == 46)
                     { jjCheckNAdd(451); }
                  break;
               case 667:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(667, 456); }
                  break;
               case 668:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(668, 669); }
                  break;
               case 669:
                  if (curChar == 46)
                     { jjCheckNAdd(454); }
                  break;
               case 670:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(670, 460); }
                  break;
               case 671:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(671, 672); }
                  break;
               case 672:
                  if (curChar == 46)
                     { jjCheckNAdd(457); }
                  break;
               case 673:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(673, 464); }
                  break;
               case 674:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(674, 675); }
                  break;
               case 675:
                  if (curChar == 46)
                     { jjCheckNAdd(461); }
                  break;
               case 676:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(676, 469); }
                  break;
               case 677:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(677, 678); }
                  break;
               case 678:
                  if (curChar == 46)
                     { jjCheckNAdd(465); }
                  break;
               case 679:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(679, 474); }
                  break;
               case 680:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(680, 681); }
                  break;
               case 681:
                  if (curChar == 46)
                     { jjCheckNAdd(470); }
                  break;
               case 682:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(682, 477); }
                  break;
               case 683:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(683, 684); }
                  break;
               case 684:
                  if (curChar == 46)
                     { jjCheckNAdd(475); }
                  break;
               case 685:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(685, 479); }
                  break;
               case 686:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(686, 687); }
                  break;
               case 687:
                  if (curChar == 46)
                     { jjCheckNAdd(478); }
                  break;
               case 688:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(688, 482); }
                  break;
               case 689:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(689, 690); }
                  break;
               case 690:
                  if (curChar == 46)
                     { jjCheckNAdd(480); }
                  break;
               case 691:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(691, 486); }
                  break;
               case 692:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(692, 693); }
                  break;
               case 693:
                  if (curChar == 46)
                     { jjCheckNAdd(483); }
                  break;
               case 694:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(694, 488); }
                  break;
               case 695:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(695, 696); }
                  break;
               case 696:
                  if (curChar == 46)
                     { jjCheckNAdd(487); }
                  break;
               case 699:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(700, 729); }
                  break;
               case 701:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(549, 551); }
                  break;
               case 711:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 710;
                  break;
               case 713:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(549, 551); }
                  break;
               case 714:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(552, 561); }
                  break;
               case 715:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(562, 566); }
                  break;
               case 716:
                  if (curChar == 10)
                     { jjCheckNAddStates(549, 551); }
                  break;
               case 717:
               case 732:
                  if (curChar == 13)
                     { jjCheckNAdd(716); }
                  break;
               case 718:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(549, 551); }
                  break;
               case 719:
               case 721:
               case 724:
               case 728:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(715); }
                  break;
               case 720:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 721;
                  break;
               case 722:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 723;
                  break;
               case 723:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 724;
                  break;
               case 725:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 726;
                  break;
               case 726:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 727;
                  break;
               case 727:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 728;
                  break;
               case 730:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(567, 576); }
                  break;
               case 731:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(577, 581); }
                  break;
               case 733:
               case 735:
               case 738:
               case 742:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(731); }
                  break;
               case 734:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 735;
                  break;
               case 736:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 737;
                  break;
               case 737:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 738;
                  break;
               case 739:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 740;
                  break;
               case 740:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 741;
                  break;
               case 741:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 742;
                  break;
               case 743:
                  if (curChar == 36)
                     { jjCheckNAddStates(582, 584); }
                  break;
               case 744:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(582, 584); }
                  break;
               case 745:
                  if (curChar == 42)
                     { jjCheckNAddStates(585, 587); }
                  break;
               case 746:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(585, 587); }
                  break;
               case 755:
                  if (curChar == 45)
                     { jjCheckNAddStates(173, 177); }
                  break;
               case 756:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(757, 785); }
                  break;
               case 758:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(588, 590); }
                  break;
               case 767:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 766;
                  break;
               case 769:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(588, 590); }
                  break;
               case 770:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(591, 600); }
                  break;
               case 771:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(601, 605); }
                  break;
               case 772:
                  if (curChar == 10)
                     { jjCheckNAddStates(588, 590); }
                  break;
               case 773:
               case 788:
                  if (curChar == 13)
                     { jjCheckNAdd(772); }
                  break;
               case 774:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(588, 590); }
                  break;
               case 775:
               case 777:
               case 780:
               case 784:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(771); }
                  break;
               case 776:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 777;
                  break;
               case 778:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 779;
                  break;
               case 779:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 780;
                  break;
               case 781:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 782;
                  break;
               case 782:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 783;
                  break;
               case 783:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 784;
                  break;
               case 786:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(606, 615); }
                  break;
               case 787:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(616, 620); }
                  break;
               case 789:
               case 791:
               case 794:
               case 798:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(787); }
                  break;
               case 790:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 791;
                  break;
               case 792:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 793;
                  break;
               case 793:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 794;
                  break;
               case 795:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 796;
                  break;
               case 796:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 797;
                  break;
               case 797:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 798;
                  break;
               case 799:
                  if (curChar == 36)
                     { jjCheckNAddStates(621, 623); }
                  break;
               case 800:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(621, 623); }
                  break;
               case 801:
                  if (curChar == 42)
                     { jjCheckNAddStates(624, 626); }
                  break;
               case 802:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(624, 626); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 2:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 73)
                        kind = 73;
                     { jjCheckNAddStates(627, 631); }
                  }
                  else if (curChar == 64)
                     { jjAddStates(632, 635); }
                  else if (curChar == 92)
                     { jjCheckNAddStates(636, 641); }
                  else if (curChar == 123)
                  {
                     if (kind > 33)
                        kind = 33;
                  }
                  if ((0x20000000200000L & l) != 0L)
                     { jjAddStates(642, 643); }
                  else if ((0x400000004000L & l) != 0L)
                     { jjAddStates(644, 647); }
                  else if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 162;
                  else if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 74;
                  else if (curChar == 64)
                     { jjAddStates(648, 652); }
                  break;
               case 179:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(164, 166); }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(253, 256); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 73)
                        kind = 73;
                     { jjCheckNAddTwoStates(254, 255); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(271, 274); }
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 216;
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 201;
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 191;
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 178;
                  break;
               case 698:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 64)
                        kind = 64;
                     { jjCheckNAddTwoStates(24, 25); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(26, 43); }
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 808;
                  else if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 753;
                  break;
               case 226:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(164, 166); }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(253, 302); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 73)
                        kind = 73;
                     { jjCheckNAddTwoStates(254, 255); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(271, 289); }
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 242;
                  else if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 236;
                  else if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 225;
                  break;
               case 812:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(164, 166); }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(253, 256); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 73)
                        kind = 73;
                     { jjCheckNAddTwoStates(254, 255); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(271, 274); }
                  break;
               case 811:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(164, 166); }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(253, 302); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 73)
                        kind = 73;
                     { jjCheckNAddTwoStates(254, 255); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(271, 289); }
                  break;
               case 813:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(164, 166); }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(253, 302); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 73)
                        kind = 73;
                     { jjCheckNAddTwoStates(254, 255); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(271, 289); }
                  break;
               case 814:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 64)
                        kind = 64;
                     { jjCheckNAddTwoStates(24, 25); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(26, 27); }
                  break;
               case 0:
                  if (curChar == 123 && kind > 33)
                     kind = 33;
                  break;
               case 3:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  { jjCheckNAddTwoStates(3, 4); }
                  break;
               case 4:
                  if (curChar == 92)
                     { jjAddStates(653, 654); }
                  break;
               case 5:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  { jjCheckNAddTwoStates(3, 4); }
                  break;
               case 6:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  { jjCheckNAddStates(195, 203); }
                  break;
               case 7:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  { jjCheckNAddStates(204, 207); }
                  break;
               case 11:
               case 13:
               case 16:
               case 20:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(7); }
                  break;
               case 12:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 14:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 15:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 17:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 18:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 19:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 21:
                  if (curChar == 64)
                     { jjAddStates(648, 652); }
                  break;
               case 23:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddTwoStates(24, 25); }
                  break;
               case 24:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddTwoStates(24, 25); }
                  break;
               case 25:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(26, 27); }
                  break;
               case 26:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddTwoStates(24, 25); }
                  break;
               case 27:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(208, 216); }
                  break;
               case 28:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(217, 220); }
                  break;
               case 32:
               case 34:
               case 37:
               case 41:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(28); }
                  break;
               case 33:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 34;
                  break;
               case 35:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 36;
                  break;
               case 36:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 38:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 39:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 40;
                  break;
               case 40:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 42:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(26, 43); }
                  break;
               case 43:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(221, 229); }
                  break;
               case 44:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(230, 233); }
                  break;
               case 46:
               case 48:
               case 51:
               case 55:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(44); }
                  break;
               case 47:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 48;
                  break;
               case 49:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 50;
                  break;
               case 50:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 52:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 53;
                  break;
               case 53:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 54;
                  break;
               case 54:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 55;
                  break;
               case 62:
                  if ((0x10000000100000L & l) != 0L && kind > 65)
                     kind = 65;
                  break;
               case 63:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 62;
                  break;
               case 64:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 63;
                  break;
               case 65:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 64;
                  break;
               case 66:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 65;
                  break;
               case 67:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 66;
                  break;
               case 68:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 67;
                  break;
               case 69:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 68;
                  break;
               case 70:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 69;
                  break;
               case 72:
               case 219:
               case 227:
               case 238:
                  if ((0x800000008L & l) != 0L)
                     { jjCheckNAdd(71); }
                  break;
               case 73:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 72;
                  break;
               case 74:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 73;
                  break;
               case 75:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 74;
                  break;
               case 76:
                  if ((0x1000000010L & l) != 0L)
                     { jjAddStates(234, 235); }
                  break;
               case 81:
               case 82:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(242, 246); }
                  break;
               case 85:
               case 86:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(252, 256); }
                  break;
               case 89:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(90, 91); }
                  break;
               case 90:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(252, 256); }
                  break;
               case 91:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(257, 267); }
                  break;
               case 92:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(268, 273); }
                  break;
               case 96:
               case 98:
               case 101:
               case 105:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(92); }
                  break;
               case 97:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 98;
                  break;
               case 99:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 100;
                  break;
               case 100:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 101;
                  break;
               case 102:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 103;
                  break;
               case 103:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 104;
                  break;
               case 104:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 105;
                  break;
               case 106:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(90, 107); }
                  break;
               case 107:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(274, 284); }
                  break;
               case 108:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(285, 290); }
                  break;
               case 110:
               case 112:
               case 115:
               case 119:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(108); }
                  break;
               case 111:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 112;
                  break;
               case 113:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 114;
                  break;
               case 114:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 115;
                  break;
               case 116:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 117;
                  break;
               case 117:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 118;
                  break;
               case 118:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 119;
                  break;
               case 124:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(125, 126); }
                  break;
               case 125:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(242, 246); }
                  break;
               case 126:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(297, 307); }
                  break;
               case 127:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(308, 313); }
                  break;
               case 131:
               case 133:
               case 136:
               case 140:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(127); }
                  break;
               case 132:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 133;
                  break;
               case 134:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 135;
                  break;
               case 135:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 136;
                  break;
               case 137:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 138;
                  break;
               case 138:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 139;
                  break;
               case 139:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 140;
                  break;
               case 141:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(125, 142); }
                  break;
               case 142:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(314, 324); }
                  break;
               case 143:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(325, 330); }
                  break;
               case 145:
               case 147:
               case 150:
               case 154:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(143); }
                  break;
               case 146:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 147;
                  break;
               case 148:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 149;
                  break;
               case 149:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 150;
                  break;
               case 151:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 152;
                  break;
               case 152:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 153;
                  break;
               case 153:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 154;
                  break;
               case 159:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 76;
                  break;
               case 160:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 159;
                  break;
               case 161:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 160;
                  break;
               case 162:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 161;
                  break;
               case 163:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 162;
                  break;
               case 165:
                  if ((0xdfffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 107)
                     kind = 107;
                  { jjAddStates(337, 339); }
                  break;
               case 170:
                  if ((0x400000004000L & l) != 0L)
                     { jjAddStates(644, 647); }
                  break;
               case 172:
               case 180:
                  if ((0x1000000010L & l) != 0L)
                     { jjCheckNAdd(171); }
                  break;
               case 173:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 172;
                  break;
               case 174:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 173;
                  break;
               case 175:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 174;
                  break;
               case 176:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 175;
                  break;
               case 178:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 177;
                  break;
               case 181:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 180;
                  break;
               case 182:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 181;
                  break;
               case 183:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 182;
                  break;
               case 184:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 183;
                  break;
               case 186:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 185;
                  break;
               case 187:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 186;
                  break;
               case 188:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 187;
                  break;
               case 189:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 188;
                  break;
               case 191:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 190;
                  break;
               case 192:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 191;
                  break;
               case 193:
               case 203:
                  if ((0x2000000020L & l) != 0L)
                     { jjCheckNAdd(171); }
                  break;
               case 194:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 193;
                  break;
               case 195:
                  if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 194;
                  break;
               case 196:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 195;
                  break;
               case 198:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 197;
                  break;
               case 199:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 198;
                  break;
               case 201:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 200;
                  break;
               case 202:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 201;
                  break;
               case 204:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 203;
                  break;
               case 205:
                  if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 204;
                  break;
               case 206:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 205;
                  break;
               case 208:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 207;
                  break;
               case 209:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 208;
                  break;
               case 211:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 210;
                  break;
               case 212:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 211;
                  break;
               case 213:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 212;
                  break;
               case 214:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 213;
                  break;
               case 216:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 215;
                  break;
               case 217:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 216;
                  break;
               case 220:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 219;
                  break;
               case 221:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 220;
                  break;
               case 222:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 221;
                  break;
               case 224:
                  if ((0x400000004000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 223;
                  break;
               case 225:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 224;
                  break;
               case 228:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 227;
                  break;
               case 229:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 228;
                  break;
               case 230:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 229;
                  break;
               case 232:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 231;
                  break;
               case 233:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 232;
                  break;
               case 234:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 233;
                  break;
               case 235:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 234;
                  break;
               case 236:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 235;
                  break;
               case 237:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 236;
                  break;
               case 239:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 238;
                  break;
               case 240:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 239;
                  break;
               case 241:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 240;
                  break;
               case 243:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 242;
                  break;
               case 249:
                  if (curChar == 92)
                     { jjCheckNAddStates(636, 641); }
                  break;
               case 253:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  { jjCheckNAddTwoStates(254, 255); }
                  break;
               case 254:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  { jjCheckNAddTwoStates(254, 255); }
                  break;
               case 255:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(253, 256); }
                  break;
               case 256:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  { jjCheckNAddStates(340, 348); }
                  break;
               case 257:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  { jjCheckNAddStates(349, 352); }
                  break;
               case 261:
               case 263:
               case 266:
               case 270:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(257); }
                  break;
               case 262:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 263;
                  break;
               case 264:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 265;
                  break;
               case 265:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 266;
                  break;
               case 267:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 268;
                  break;
               case 268:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 269;
                  break;
               case 269:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 270;
                  break;
               case 271:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(164, 166); }
                  break;
               case 272:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(164, 166); }
                  break;
               case 273:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(271, 274); }
                  break;
               case 274:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(353, 362); }
                  break;
               case 275:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(363, 367); }
                  break;
               case 279:
               case 281:
               case 284:
               case 288:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(275); }
                  break;
               case 280:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 281;
                  break;
               case 282:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 283;
                  break;
               case 283:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 284;
                  break;
               case 285:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 286;
                  break;
               case 286:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 287;
                  break;
               case 287:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 288;
                  break;
               case 289:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(368, 377); }
                  break;
               case 290:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(378, 382); }
                  break;
               case 292:
               case 294:
               case 297:
               case 301:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(290); }
                  break;
               case 293:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 294;
                  break;
               case 295:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 296;
                  break;
               case 296:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 297;
                  break;
               case 298:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 299;
                  break;
               case 299:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 300;
                  break;
               case 300:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 301;
                  break;
               case 302:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  { jjCheckNAddStates(383, 391); }
                  break;
               case 303:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  { jjCheckNAddStates(392, 395); }
                  break;
               case 305:
               case 307:
               case 310:
               case 314:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(303); }
                  break;
               case 306:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 307;
                  break;
               case 308:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 309;
                  break;
               case 309:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 310;
                  break;
               case 311:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 312;
                  break;
               case 312:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 313;
                  break;
               case 313:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 314;
                  break;
               case 316:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(396, 398); }
                  break;
               case 318:
                  if (curChar == 92)
                     { jjAddStates(655, 658); }
                  break;
               case 322:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(396, 398); }
                  break;
               case 323:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(399, 408); }
                  break;
               case 324:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(409, 413); }
                  break;
               case 327:
               case 329:
               case 332:
               case 336:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(324); }
                  break;
               case 328:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 329;
                  break;
               case 330:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 331;
                  break;
               case 331:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 332;
                  break;
               case 333:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 334;
                  break;
               case 334:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 335;
                  break;
               case 335:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 336;
                  break;
               case 337:
                  if ((0xffffffffefffffffL & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  { jjCheckNAddTwoStates(337, 338); }
                  break;
               case 338:
                  if (curChar == 92)
                     { jjAddStates(659, 662); }
                  break;
               case 342:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  { jjCheckNAddTwoStates(337, 338); }
                  break;
               case 343:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  { jjCheckNAddStates(414, 422); }
                  break;
               case 344:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  { jjCheckNAddStates(423, 426); }
                  break;
               case 347:
               case 349:
               case 352:
               case 356:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(344); }
                  break;
               case 348:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 349;
                  break;
               case 350:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 351;
                  break;
               case 351:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 352;
                  break;
               case 353:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 354;
                  break;
               case 354:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 355;
                  break;
               case 355:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 356;
                  break;
               case 358:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(427, 429); }
                  break;
               case 360:
                  if (curChar == 92)
                     { jjAddStates(663, 666); }
                  break;
               case 364:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(427, 429); }
                  break;
               case 365:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(430, 439); }
                  break;
               case 366:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(440, 444); }
                  break;
               case 369:
               case 371:
               case 374:
               case 378:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(366); }
                  break;
               case 370:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 371;
                  break;
               case 372:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 373;
                  break;
               case 373:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 374;
                  break;
               case 375:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 376;
                  break;
               case 376:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 377;
                  break;
               case 377:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 378;
                  break;
               case 379:
                  if ((0xffffffffefffffffL & l) == 0L)
                     break;
                  if (kind > 26)
                     kind = 26;
                  { jjCheckNAddTwoStates(379, 380); }
                  break;
               case 380:
                  if (curChar == 92)
                     { jjAddStates(667, 670); }
                  break;
               case 384:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 26)
                     kind = 26;
                  { jjCheckNAddTwoStates(379, 380); }
                  break;
               case 385:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 26)
                     kind = 26;
                  { jjCheckNAddStates(445, 453); }
                  break;
               case 386:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 26)
                     kind = 26;
                  { jjCheckNAddStates(454, 457); }
                  break;
               case 389:
               case 391:
               case 394:
               case 398:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(386); }
                  break;
               case 390:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 391;
                  break;
               case 392:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 393;
                  break;
               case 393:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 394;
                  break;
               case 395:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 396;
                  break;
               case 396:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 397;
                  break;
               case 397:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 398;
                  break;
               case 402:
                  if ((0x200000002000L & l) != 0L && kind > 74)
                     kind = 74;
                  break;
               case 403:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 402;
                  break;
               case 405:
                  if ((0x100000001000000L & l) != 0L && kind > 75)
                     kind = 75;
                  break;
               case 406:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 405;
                  break;
               case 408:
                  if ((0x100000001000000L & l) != 0L && kind > 76)
                     kind = 76;
                  break;
               case 409:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 408;
                  break;
               case 411:
                  if ((0x200000002000L & l) != 0L && kind > 77)
                     kind = 77;
                  break;
               case 412:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 411;
                  break;
               case 413:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 412;
                  break;
               case 415:
                  if ((0x80000000800000L & l) != 0L && kind > 78)
                     kind = 78;
                  break;
               case 416:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 415;
                  break;
               case 418:
                  if ((0x10000000100L & l) != 0L && kind > 79)
                     kind = 79;
                  break;
               case 419:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 418;
                  break;
               case 421:
                  if ((0x400000004000L & l) != 0L && kind > 80)
                     kind = 80;
                  break;
               case 422:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 421;
                  break;
               case 423:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 422;
                  break;
               case 424:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 423;
                  break;
               case 426:
                  if ((0x10000000100L & l) != 0L && kind > 81)
                     kind = 81;
                  break;
               case 427:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 426;
                  break;
               case 429:
                  if ((0x20000000200L & l) != 0L && kind > 82)
                     kind = 82;
                  break;
               case 430:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 429;
                  break;
               case 431:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 430;
                  break;
               case 433:
                  if ((0x200000002000L & l) != 0L && kind > 83)
                     kind = 83;
                  break;
               case 434:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 433;
                  break;
               case 435:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 434;
                  break;
               case 436:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 435;
                  break;
               case 438:
                  if ((0x100000001000000L & l) != 0L && kind > 84)
                     kind = 84;
                  break;
               case 439:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 438;
                  break;
               case 440:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 439;
                  break;
               case 441:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 440;
                  break;
               case 443:
                  if ((0x200000002000L & l) != 0L && kind > 85)
                     kind = 85;
                  break;
               case 444:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 443;
                  break;
               case 446:
                  if ((0x200000002000L & l) != 0L && kind > 86)
                     kind = 86;
                  break;
               case 447:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 446;
                  break;
               case 449:
                  if ((0x400000004000L & l) != 0L && kind > 87)
                     kind = 87;
                  break;
               case 450:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 449;
                  break;
               case 452:
                  if ((0x10000000100000L & l) != 0L && kind > 88)
                     kind = 88;
                  break;
               case 453:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 452;
                  break;
               case 455:
                  if ((0x800000008L & l) != 0L && kind > 89)
                     kind = 89;
                  break;
               case 456:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 455;
                  break;
               case 458:
                  if ((0x8000000080L & l) != 0L && kind > 90)
                     kind = 90;
                  break;
               case 459:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 458;
                  break;
               case 460:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 459;
                  break;
               case 462:
                  if ((0x1000000010L & l) != 0L && kind > 91)
                     kind = 91;
                  break;
               case 463:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 462;
                  break;
               case 464:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 463;
                  break;
               case 466:
                  if ((0x1000000010L & l) != 0L && kind > 92)
                     kind = 92;
                  break;
               case 467:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 466;
                  break;
               case 468:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 467;
                  break;
               case 469:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 468;
                  break;
               case 471:
                  if ((0x400000004000L & l) != 0L && kind > 93)
                     kind = 93;
                  break;
               case 472:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 471;
                  break;
               case 473:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 472;
                  break;
               case 474:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 473;
                  break;
               case 476:
                  if ((0x8000000080000L & l) != 0L && kind > 94)
                     kind = 94;
                  break;
               case 477:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 476;
                  break;
               case 479:
                  if ((0x8000000080000L & l) != 0L && kind > 95)
                     kind = 95;
                  break;
               case 481:
                  if ((0x400000004000000L & l) != 0L && kind > 96)
                     kind = 96;
                  break;
               case 482:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 481;
                  break;
               case 484:
                  if ((0x400000004000000L & l) != 0L && kind > 97)
                     kind = 97;
                  break;
               case 485:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 484;
                  break;
               case 486:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 485;
                  break;
               case 490:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  { jjCheckNAddTwoStates(254, 255); }
                  break;
               case 491:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(164, 166); }
                  break;
               case 492:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(271, 289); }
                  break;
               case 493:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(253, 302); }
                  break;
               case 500:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  { jjCheckNAddStates(627, 631); }
                  break;
               case 501:
                  if ((0x20000000200000L & l) != 0L)
                     { jjAddStates(642, 643); }
                  break;
               case 504:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(464, 466); }
                  break;
               case 508:
                  if (curChar == 92)
                     { jjAddStates(671, 674); }
                  break;
               case 512:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(464, 466); }
                  break;
               case 513:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(467, 476); }
                  break;
               case 514:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(477, 481); }
                  break;
               case 517:
               case 519:
               case 522:
               case 526:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(514); }
                  break;
               case 518:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 519;
                  break;
               case 520:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 521;
                  break;
               case 521:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 522;
                  break;
               case 523:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 524;
                  break;
               case 524:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 525;
                  break;
               case 525:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 526;
                  break;
               case 528:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(482, 484); }
                  break;
               case 530:
                  if (curChar == 92)
                     { jjAddStates(675, 678); }
                  break;
               case 534:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(482, 484); }
                  break;
               case 535:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(485, 494); }
                  break;
               case 536:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(495, 499); }
                  break;
               case 539:
               case 541:
               case 544:
               case 548:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(536); }
                  break;
               case 540:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 541;
                  break;
               case 542:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 543;
                  break;
               case 543:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 544;
                  break;
               case 545:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 546;
                  break;
               case 546:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 547;
                  break;
               case 547:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 548;
                  break;
               case 549:
                  if ((0x7fffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(500, 503); }
                  break;
               case 550:
                  if (curChar == 92)
                     { jjAddStates(679, 680); }
                  break;
               case 551:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(500, 503); }
                  break;
               case 552:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(504, 513); }
                  break;
               case 553:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(514, 518); }
                  break;
               case 557:
               case 559:
               case 562:
               case 566:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(553); }
                  break;
               case 558:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 559;
                  break;
               case 560:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 561;
                  break;
               case 561:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 562;
                  break;
               case 563:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 564;
                  break;
               case 564:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 565;
                  break;
               case 565:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 566;
                  break;
               case 568:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 502;
                  break;
               case 569:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 568;
                  break;
               case 571:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(528, 538); }
                  break;
               case 572:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(573); }
                  break;
               case 574:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddStates(539, 543); }
                  break;
               case 575:
               case 611:
                  if ((0x7e0000007eL & l) != 0L && kind > 106)
                     kind = 106;
                  break;
               case 576:
               case 578:
               case 581:
               case 585:
               case 599:
               case 602:
               case 604:
               case 605:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(575); }
                  break;
               case 577:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 578;
                  break;
               case 579:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 580;
                  break;
               case 580:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 581;
                  break;
               case 582:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 583;
                  break;
               case 583:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 584;
                  break;
               case 584:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 585;
                  break;
               case 586:
               case 588:
               case 591:
               case 595:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(572); }
                  break;
               case 587:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 588;
                  break;
               case 589:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 590;
                  break;
               case 590:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 591;
                  break;
               case 592:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 593;
                  break;
               case 593:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 594;
                  break;
               case 594:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 595;
                  break;
               case 596:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 597;
                  break;
               case 597:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 598;
                  break;
               case 598:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 599;
                  break;
               case 600:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 601;
                  break;
               case 601:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 602;
                  break;
               case 603:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 604;
                  break;
               case 606:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddStates(544, 548); }
                  break;
               case 607:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 608;
                  break;
               case 608:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 609;
                  break;
               case 609:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 610;
                  break;
               case 610:
               case 614:
               case 616:
               case 617:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(611); }
                  break;
               case 612:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 613;
                  break;
               case 613:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 614;
                  break;
               case 615:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 616;
                  break;
               case 697:
                  if (curChar == 64)
                     { jjAddStates(632, 635); }
                  break;
               case 700:
               case 701:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(549, 551); }
                  break;
               case 702:
                  if ((0x8000000080000L & l) != 0L && kind > 61)
                     kind = 61;
                  break;
               case 703:
               case 747:
                  if ((0x2000000020L & l) != 0L)
                     { jjCheckNAdd(702); }
                  break;
               case 704:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 703;
                  break;
               case 705:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 704;
                  break;
               case 706:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 705;
                  break;
               case 707:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 706;
                  break;
               case 708:
                  if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 707;
                  break;
               case 709:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 708;
                  break;
               case 710:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 709;
                  break;
               case 712:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(713, 714); }
                  break;
               case 713:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(549, 551); }
                  break;
               case 714:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(552, 561); }
                  break;
               case 715:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(562, 566); }
                  break;
               case 719:
               case 721:
               case 724:
               case 728:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(715); }
                  break;
               case 720:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 721;
                  break;
               case 722:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 723;
                  break;
               case 723:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 724;
                  break;
               case 725:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 726;
                  break;
               case 726:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 727;
                  break;
               case 727:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 728;
                  break;
               case 729:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(713, 730); }
                  break;
               case 730:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(567, 576); }
                  break;
               case 731:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(577, 581); }
                  break;
               case 733:
               case 735:
               case 738:
               case 742:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(731); }
                  break;
               case 734:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 735;
                  break;
               case 736:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 737;
                  break;
               case 737:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 738;
                  break;
               case 739:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 740;
                  break;
               case 740:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 741;
                  break;
               case 741:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 742;
                  break;
               case 748:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 747;
                  break;
               case 749:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 748;
                  break;
               case 750:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 749;
                  break;
               case 751:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 750;
                  break;
               case 752:
                  if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 751;
                  break;
               case 753:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 752;
                  break;
               case 754:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 753;
                  break;
               case 757:
               case 758:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(588, 590); }
                  break;
               case 759:
                  if ((0x10000000100000L & l) != 0L && kind > 62)
                     kind = 62;
                  break;
               case 760:
               case 803:
                  if ((0x4000000040000L & l) != 0L)
                     { jjCheckNAdd(759); }
                  break;
               case 761:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 760;
                  break;
               case 762:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 761;
                  break;
               case 763:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 762;
                  break;
               case 764:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 763;
                  break;
               case 765:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 764;
                  break;
               case 766:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 765;
                  break;
               case 768:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(769, 770); }
                  break;
               case 769:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(588, 590); }
                  break;
               case 770:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(591, 600); }
                  break;
               case 771:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(601, 605); }
                  break;
               case 775:
               case 777:
               case 780:
               case 784:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(771); }
                  break;
               case 776:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 777;
                  break;
               case 778:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 779;
                  break;
               case 779:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 780;
                  break;
               case 781:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 782;
                  break;
               case 782:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 783;
                  break;
               case 783:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 784;
                  break;
               case 785:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(769, 786); }
                  break;
               case 786:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(606, 615); }
                  break;
               case 787:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(616, 620); }
                  break;
               case 789:
               case 791:
               case 794:
               case 798:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(787); }
                  break;
               case 790:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 791;
                  break;
               case 792:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 793;
                  break;
               case 793:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 794;
                  break;
               case 795:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 796;
                  break;
               case 796:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 797;
                  break;
               case 797:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 798;
                  break;
               case 804:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 803;
                  break;
               case 805:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 804;
                  break;
               case 806:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 805;
                  break;
               case 807:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 806;
                  break;
               case 808:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 807;
                  break;
               case 809:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 808;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 2:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 73)
                     kind = 73;
                  { jjCheckNAddStates(627, 631); }
                  break;
               case 179:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 73)
                        kind = 73;
                     { jjCheckNAddTwoStates(254, 255); }
                  }
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(164, 166); }
                  break;
               case 698:
               case 23:
               case 26:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddTwoStates(24, 25); }
                  break;
               case 226:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 73)
                        kind = 73;
                     { jjCheckNAddTwoStates(254, 255); }
                  }
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(164, 166); }
                  break;
               case 812:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 73)
                        kind = 73;
                     { jjCheckNAddTwoStates(254, 255); }
                  }
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(164, 166); }
                  break;
               case 811:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 73)
                        kind = 73;
                     { jjCheckNAddTwoStates(254, 255); }
                  }
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(164, 166); }
                  break;
               case 813:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 73)
                        kind = 73;
                     { jjCheckNAddTwoStates(254, 255); }
                  }
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(164, 166); }
                  break;
               case 814:
               case 24:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddTwoStates(24, 25); }
                  break;
               case 3:
               case 5:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 47)
                     kind = 47;
                  { jjCheckNAddTwoStates(3, 4); }
                  break;
               case 81:
               case 82:
               case 125:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(242, 246); }
                  break;
               case 85:
               case 86:
               case 90:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(252, 256); }
                  break;
               case 165:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 107)
                     kind = 107;
                  { jjAddStates(337, 339); }
                  break;
               case 253:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 73)
                     kind = 73;
                  { jjCheckNAddTwoStates(254, 255); }
                  break;
               case 254:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 73)
                     kind = 73;
                  { jjCheckNAddTwoStates(254, 255); }
                  break;
               case 271:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(164, 166); }
                  break;
               case 272:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(164, 166); }
                  break;
               case 316:
               case 322:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(396, 398); }
                  break;
               case 337:
               case 342:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 25)
                     kind = 25;
                  { jjCheckNAddTwoStates(337, 338); }
                  break;
               case 358:
               case 364:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(427, 429); }
                  break;
               case 379:
               case 384:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 26)
                     kind = 26;
                  { jjCheckNAddTwoStates(379, 380); }
                  break;
               case 490:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 73)
                     kind = 73;
                  { jjCheckNAddTwoStates(254, 255); }
                  break;
               case 491:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(164, 166); }
                  break;
               case 504:
               case 512:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(464, 466); }
                  break;
               case 528:
               case 534:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(482, 484); }
                  break;
               case 549:
               case 551:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(500, 503); }
                  break;
               case 700:
               case 701:
               case 713:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(549, 551); }
                  break;
               case 757:
               case 758:
               case 769:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(588, 590); }
                  break;
               default : if (i1 == 0 || l1 == 0 || i2 == 0 ||  l2 == 0) break; else break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 810 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_2(int pos, long active0){
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_2(int pos, long active0){
   return jjMoveNfa_2(jjStopStringLiteralDfa_2(pos, active0), pos + 1);
}
private int jjMoveStringLiteralDfa0_2(){
   switch(curChar)
   {
      case 40:
         return jjStopAtPos(0, 12);
      case 41:
         return jjStopAtPos(0, 13);
      case 43:
         return jjStopAtPos(0, 10);
      case 45:
         return jjStopAtPos(0, 11);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa1_2(0x100L);
      case 78:
      case 110:
         return jjStopAtPos(0, 6);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa1_2(0x80L);
      default :
         return jjMoveNfa_2(6, 0);
   }
}
private int jjMoveStringLiteralDfa1_2(long active0){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(0, active0);
      return 1;
   }
   switch(curChar)
   {
      case 68:
      case 100:
         return jjMoveStringLiteralDfa2_2(active0, 0x80L);
      case 86:
      case 118:
         return jjMoveStringLiteralDfa2_2(active0, 0x100L);
      default :
         break;
   }
   return jjStartNfa_2(0, active0);
}
private int jjMoveStringLiteralDfa2_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(0, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(1, active0);
      return 2;
   }
   switch(curChar)
   {
      case 68:
      case 100:
         if ((active0 & 0x80L) != 0L)
            return jjStopAtPos(2, 7);
         break;
      case 69:
      case 101:
         return jjMoveStringLiteralDfa3_2(active0, 0x100L);
      default :
         break;
   }
   return jjStartNfa_2(1, active0);
}
private int jjMoveStringLiteralDfa3_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(1, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(2, active0);
      return 3;
   }
   switch(curChar)
   {
      case 78:
      case 110:
         if ((active0 & 0x100L) != 0L)
            return jjStopAtPos(3, 8);
         break;
      default :
         break;
   }
   return jjStartNfa_2(2, active0);
}
private int jjMoveNfa_2(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 10;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 6:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 9)
                        kind = 9;
                     { jjCheckNAdd(0); }
                  }
                  else if ((0x100003600L & l) != 0L)
                  {
                     if (kind > 4)
                        kind = 4;
                     { jjCheckNAddTwoStates(8, 9); }
                  }
                  else if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 0:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 9)
                     kind = 9;
                  { jjCheckNAdd(0); }
                  break;
               case 1:
                  if (curChar != 47)
                     break;
                  if (kind > 107)
                     kind = 107;
                  { jjCheckNAddStates(681, 683); }
                  break;
               case 2:
                  if ((0xf7ffffffffffdbffL & l) == 0L)
                     break;
                  if (kind > 107)
                     kind = 107;
                  { jjCheckNAddStates(681, 683); }
                  break;
               case 3:
                  if ((0x2400L & l) != 0L && kind > 107)
                     kind = 107;
                  break;
               case 4:
                  if (curChar == 10 && kind > 107)
                     kind = 107;
                  break;
               case 5:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 7:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 4)
                     kind = 4;
                  { jjCheckNAddTwoStates(8, 9); }
                  break;
               case 8:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 4)
                     kind = 4;
                  { jjCheckNAdd(8); }
                  break;
               case 9:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 5)
                     kind = 5;
                  { jjCheckNAdd(9); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 2:
                  if ((0xdfffffffffffffffL & l) == 0L)
                     break;
                  kind = 107;
                  { jjAddStates(681, 683); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 2:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 107)
                     kind = 107;
                  { jjAddStates(681, 683); }
                  break;
               default : if (i1 == 0 || l1 == 0 || i2 == 0 ||  l2 == 0) break; else break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 10 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_3(int pos, long active0, long active1){
   switch (pos)
   {
      case 0:
         if ((active1 & 0x10L) != 0L)
         {
            jjmatchedKind = 73;
            jjmatchedPos = 0;
            return 173;
         }
         if ((active1 & 0x100000001ecL) != 0L)
         {
            jjmatchedKind = 73;
            jjmatchedPos = 0;
            return 804;
         }
         if ((active0 & 0x2000000000L) != 0L)
            return 805;
         if ((active0 & 0x40000000000800L) != 0L)
            return 220;
         if ((active0 & 0x8000000000000L) != 0L)
            return 806;
         if ((active0 & 0x9f80000000000000L) != 0L)
            return 692;
         if ((active0 & 0x10020000000000L) != 0L)
            return 807;
         return -1;
      case 1:
         if ((active1 & 0x180L) != 0L)
            return 804;
         if ((active0 & 0x9f80000000000000L) != 0L)
         {
            jjmatchedKind = 64;
            jjmatchedPos = 1;
            return 808;
         }
         if ((active1 & 0x1000000007cL) != 0L)
         {
            jjmatchedKind = 73;
            jjmatchedPos = 1;
            return 804;
         }
         return -1;
      case 2:
         if ((active0 & 0x9f80000000000000L) != 0L)
         {
            jjmatchedKind = 64;
            jjmatchedPos = 2;
            return 808;
         }
         if ((active1 & 0x18L) != 0L)
            return 804;
         if ((active1 & 0x10000000064L) != 0L)
         {
            jjmatchedKind = 73;
            jjmatchedPos = 2;
            return 804;
         }
         return -1;
      case 3:
         if ((active1 & 0x10000000004L) != 0L)
         {
            jjmatchedKind = 73;
            jjmatchedPos = 3;
            return 804;
         }
         if ((active1 & 0x60L) != 0L)
            return 804;
         if ((active0 & 0x9f80000000000000L) != 0L)
         {
            jjmatchedKind = 64;
            jjmatchedPos = 3;
            return 808;
         }
         return -1;
      case 4:
         if ((active0 & 0x400000000000000L) != 0L)
            return 808;
         if ((active0 & 0x9b80000000000000L) != 0L)
         {
            jjmatchedKind = 64;
            jjmatchedPos = 4;
            return 808;
         }
         if ((active1 & 0x10000000004L) != 0L)
         {
            jjmatchedKind = 73;
            jjmatchedPos = 4;
            return 804;
         }
         return -1;
      case 5:
         if ((active0 & 0x800000000000000L) != 0L)
            return 808;
         if ((active0 & 0x9380000000000000L) != 0L)
         {
            jjmatchedKind = 64;
            jjmatchedPos = 5;
            return 808;
         }
         if ((active1 & 0x10000000004L) != 0L)
         {
            jjmatchedKind = 73;
            jjmatchedPos = 5;
            return 804;
         }
         return -1;
      case 6:
         if ((active0 & 0x100000000000000L) != 0L)
            return 808;
         if ((active1 & 0x10000000000L) != 0L)
         {
            jjmatchedKind = 73;
            jjmatchedPos = 6;
            return 804;
         }
         if ((active1 & 0x4L) != 0L)
            return 804;
         if ((active0 & 0x9280000000000000L) != 0L)
         {
            jjmatchedKind = 64;
            jjmatchedPos = 6;
            return 808;
         }
         return -1;
      case 7:
         if ((active0 & 0x80000000000000L) != 0L)
            return 808;
         if ((active0 & 0x9200000000000000L) != 0L)
         {
            jjmatchedKind = 64;
            jjmatchedPos = 7;
            return 808;
         }
         if ((active1 & 0x10000000000L) != 0L)
         {
            jjmatchedKind = 73;
            jjmatchedPos = 7;
            return 804;
         }
         return -1;
      case 8:
         if ((active0 & 0x8000000000000000L) != 0L)
            return 808;
         if ((active0 & 0x1200000000000000L) != 0L)
         {
            jjmatchedKind = 64;
            jjmatchedPos = 8;
            return 808;
         }
         if ((active1 & 0x10000000000L) != 0L)
         {
            jjmatchedKind = 73;
            jjmatchedPos = 8;
            return 804;
         }
         return -1;
      case 9:
         if ((active1 & 0x10000000000L) != 0L)
         {
            jjmatchedKind = 73;
            jjmatchedPos = 9;
            return 804;
         }
         if ((active0 & 0x1200000000000000L) != 0L)
            return 808;
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_3(int pos, long active0, long active1){
   return jjMoveNfa_3(jjStopStringLiteralDfa_3(pos, active0, active1), pos + 1);
}
private int jjMoveStringLiteralDfa0_3(){
   switch(curChar)
   {
      case 36:
         return jjMoveStringLiteralDfa1_3(0x8000000000000L, 0x0L);
      case 40:
         return jjStopAtPos(0, 12);
      case 41:
         return jjStopAtPos(0, 13);
      case 42:
         {
         jjmatchedKind = 41;
         jjmatchedPos = 0;
         }
         return jjMoveStringLiteralDfa1_3(0x10000000000000L, 0x0L);
      case 43:
         return jjStopAtPos(0, 10);
      case 45:
         {
         jjmatchedKind = 11;
         jjmatchedPos = 0;
         }
         return jjMoveStringLiteralDfa1_3(0x40000000000000L, 0x0L);
      case 46:
         return jjStartNfaWithStates_3(0, 37, 805);
      case 47:
         return jjStopAtPos(0, 42);
      case 58:
         {
         jjmatchedKind = 40;
         jjmatchedPos = 0;
         }
         return jjMoveStringLiteralDfa1_3(0x0L, 0x4000000000L);
      case 59:
         return jjStopAtPos(0, 39);
      case 60:
         return jjMoveStringLiteralDfa1_3(0x20000000000000L, 0x0L);
      case 61:
         return jjStopAtPos(0, 43);
      case 62:
         return jjStopAtPos(0, 45);
      case 64:
         return jjMoveStringLiteralDfa1_3(0x9f80000000000000L, 0x0L);
      case 91:
         return jjStopAtPos(0, 35);
      case 93:
         return jjStopAtPos(0, 36);
      case 94:
         return jjMoveStringLiteralDfa1_3(0x4000000000000L, 0x0L);
      case 65:
      case 97:
         return jjMoveStringLiteralDfa1_3(0x0L, 0x8L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa1_3(0x0L, 0x10000000000L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa1_3(0x0L, 0x40L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa1_3(0x0L, 0x4L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa1_3(0x0L, 0x10L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa1_3(0x0L, 0x120L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa1_3(0x0L, 0x80L);
      case 124:
         {
         jjmatchedKind = 44;
         jjmatchedPos = 0;
         }
         return jjMoveStringLiteralDfa1_3(0x2000000000000L, 0x0L);
      case 125:
         return jjStopAtPos(0, 34);
      case 126:
         {
         jjmatchedKind = 46;
         jjmatchedPos = 0;
         }
         return jjMoveStringLiteralDfa1_3(0x1000000000000L, 0x0L);
      default :
         return jjMoveNfa_3(2, 0);
   }
}
private int jjMoveStringLiteralDfa1_3(long active0, long active1){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(0, active0, active1);
      return 1;
   }
   switch(curChar)
   {
      case 33:
         return jjMoveStringLiteralDfa2_3(active0, 0x20000000000000L, active1, 0L);
      case 45:
         return jjMoveStringLiteralDfa2_3(active0, 0x40000000000000L, active1, 0L);
      case 61:
         if ((active0 & 0x1000000000000L) != 0L)
            return jjStopAtPos(1, 48);
         else if ((active0 & 0x2000000000000L) != 0L)
            return jjStopAtPos(1, 49);
         else if ((active0 & 0x4000000000000L) != 0L)
            return jjStopAtPos(1, 50);
         else if ((active0 & 0x8000000000000L) != 0L)
            return jjStopAtPos(1, 51);
         else if ((active0 & 0x10000000000000L) != 0L)
            return jjStopAtPos(1, 52);
         break;
      case 67:
      case 99:
         return jjMoveStringLiteralDfa2_3(active0, 0x80000000000000L, active1, 0L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa2_3(active0, 0x1000000000000000L, active1, 0L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa2_3(active0, 0x100000000000000L, active1, 0L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa2_3(active0, 0x800000000000000L, active1, 0L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa2_3(active0, 0x200000000000000L, active1, 0x400000002cL);
      case 79:
      case 111:
         if ((active1 & 0x80L) != 0L)
            return jjStartNfaWithStates_3(1, 71, 804);
         return jjMoveStringLiteralDfa2_3(active0, 0L, active1, 0x10L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa2_3(active0, 0x400000000000000L, active1, 0L);
      case 82:
      case 114:
         if ((active1 & 0x100L) != 0L)
            return jjStartNfaWithStates_3(1, 72, 804);
         return jjMoveStringLiteralDfa2_3(active0, 0L, active1, 0x40L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa2_3(active0, 0x8000000000000000L, active1, 0L);
      case 88:
      case 120:
         return jjMoveStringLiteralDfa2_3(active0, 0L, active1, 0x10000000000L);
      default :
         break;
   }
   return jjStartNfa_3(0, active0, active1);
}
private int jjMoveStringLiteralDfa2_3(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_3(0, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(1, active0, active1);
      return 2;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa3_3(active0, 0x20000000000000L, active1, 0L);
      case 62:
         if ((active0 & 0x40000000000000L) != 0L)
            return jjStopAtPos(2, 54);
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa3_3(active0, 0x600000000000000L, active1, 0L);
      case 68:
      case 100:
         if ((active1 & 0x8L) != 0L)
            return jjStartNfaWithStates_3(2, 67, 804);
         break;
      case 69:
      case 101:
         return jjMoveStringLiteralDfa3_3(active0, 0x800000000000000L, active1, 0L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa3_3(active0, 0x80000000000000L, active1, 0x4L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa3_3(active0, 0L, active1, 0x20L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa3_3(active0, 0x100000000000000L, active1, 0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa3_3(active0, 0x1000000000000000L, active1, 0x4000000040L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa3_3(active0, 0L, active1, 0x10000000000L);
      case 84:
      case 116:
         if ((active1 & 0x10L) != 0L)
            return jjStartNfaWithStates_3(2, 68, 804);
         break;
      case 85:
      case 117:
         return jjMoveStringLiteralDfa3_3(active0, 0x8000000000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_3(1, active0, active1);
}
private int jjMoveStringLiteralDfa3_3(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_3(1, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(2, active0, active1);
      return 3;
   }
   switch(curChar)
   {
      case 45:
         if ((active0 & 0x20000000000000L) != 0L)
            return jjStopAtPos(3, 53);
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa4_3(active0, 0x80000000000000L, active1, 0L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa4_3(active0, 0x800000000000000L, active1, 0L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa4_3(active0, 0L, active1, 0x4L);
      case 71:
      case 103:
         return jjMoveStringLiteralDfa4_3(active0, 0x400000000000000L, active1, 0L);
      case 77:
      case 109:
         if ((active1 & 0x40L) != 0L)
            return jjStartNfaWithStates_3(3, 70, 804);
         return jjMoveStringLiteralDfa4_3(active0, 0x200000000000000L, active1, 0L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa4_3(active0, 0x1000000000000000L, active1, 0L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa4_3(active0, 0x8100000000000000L, active1, 0L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa4_3(active0, 0L, active1, 0x10000000000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa4_3(active0, 0L, active1, 0x4000000000L);
      case 89:
      case 121:
         if ((active1 & 0x20L) != 0L)
            return jjStartNfaWithStates_3(3, 69, 804);
         break;
      default :
         break;
   }
   return jjStartNfa_3(2, active0, active1);
}
private int jjMoveStringLiteralDfa4_3(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_3(2, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(3, active0, active1);
      return 4;
   }
   switch(curChar)
   {
      case 40:
         if ((active1 & 0x4000000000L) != 0L)
            return jjStopAtPos(4, 102);
         break;
      case 69:
      case 101:
         if ((active0 & 0x400000000000000L) != 0L)
            return jjStartNfaWithStates_3(4, 58, 808);
         return jjMoveStringLiteralDfa5_3(active0, 0x200000000000000L, active1, 0x10000000000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa5_3(active0, 0x800000000000000L, active1, 0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa5_3(active0, 0x100000000000000L, active1, 0L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa5_3(active0, 0x8000000000000000L, active1, 0L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa5_3(active0, 0x80000000000000L, active1, 0x4L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa5_3(active0, 0x1000000000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_3(3, active0, active1);
}
private int jjMoveStringLiteralDfa5_3(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_3(3, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(4, active0, active1);
      return 5;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa6_3(active0, 0x1000000000000000L, active1, 0L);
      case 65:
      case 97:
         if ((active0 & 0x800000000000000L) != 0L)
            return jjStartNfaWithStates_3(5, 59, 808);
         break;
      case 73:
      case 105:
         return jjMoveStringLiteralDfa6_3(active0, 0L, active1, 0x4L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa6_3(active0, 0x8000000000000000L, active1, 0L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa6_3(active0, 0x100000000000000L, active1, 0L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa6_3(active0, 0x280000000000000L, active1, 0x10000000000L);
      default :
         break;
   }
   return jjStartNfa_3(4, active0, active1);
}
private int jjMoveStringLiteralDfa6_3(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_3(4, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(5, active0, active1);
      return 6;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         return jjMoveStringLiteralDfa7_3(active0, 0x80000000000000L, active1, 0L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa7_3(active0, 0x1000000000000000L, active1, 0L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa7_3(active0, 0x200000000000000L, active1, 0L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa7_3(active0, 0x8000000000000000L, active1, 0L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa7_3(active0, 0L, active1, 0x10000000000L);
      case 84:
      case 116:
         if ((active0 & 0x100000000000000L) != 0L)
            return jjStartNfaWithStates_3(6, 56, 808);
         else if ((active1 & 0x4L) != 0L)
            return jjStartNfaWithStates_3(6, 66, 804);
         break;
      default :
         break;
   }
   return jjStartNfa_3(5, active0, active1);
}
private int jjMoveStringLiteralDfa7_3(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_3(5, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(6, active0, active1);
      return 7;
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa8_3(active0, 0x1200000000000000L, active1, 0L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa8_3(active0, 0L, active1, 0x10000000000L);
      case 84:
      case 116:
         if ((active0 & 0x80000000000000L) != 0L)
            return jjStartNfaWithStates_3(7, 55, 808);
         return jjMoveStringLiteralDfa8_3(active0, 0x8000000000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_3(6, active0, active1);
}
private int jjMoveStringLiteralDfa8_3(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_3(6, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(7, active0, active1);
      return 8;
   }
   switch(curChar)
   {
      case 67:
      case 99:
         return jjMoveStringLiteralDfa9_3(active0, 0x1200000000000000L, active1, 0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa9_3(active0, 0L, active1, 0x10000000000L);
      case 83:
      case 115:
         if ((active0 & 0x8000000000000000L) != 0L)
            return jjStartNfaWithStates_3(8, 63, 808);
         break;
      default :
         break;
   }
   return jjStartNfa_3(7, active0, active1);
}
private int jjMoveStringLiteralDfa9_3(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_3(7, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(8, active0, active1);
      return 9;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         if ((active0 & 0x200000000000000L) != 0L)
            return jjStartNfaWithStates_3(9, 57, 808);
         else if ((active0 & 0x1000000000000000L) != 0L)
            return jjStartNfaWithStates_3(9, 60, 808);
         break;
      case 78:
      case 110:
         return jjMoveStringLiteralDfa10_3(active0, 0L, active1, 0x10000000000L);
      default :
         break;
   }
   return jjStartNfa_3(8, active0, active1);
}
private int jjMoveStringLiteralDfa10_3(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_3(8, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(9, 0L, active1);
      return 10;
   }
   switch(curChar)
   {
      case 40:
         if ((active1 & 0x10000000000L) != 0L)
            return jjStopAtPos(10, 104);
         break;
      default :
         break;
   }
   return jjStartNfa_3(9, 0L, active1);
}
private int jjStartNfaWithStates_3(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_3(state, pos + 1);
}
private int jjMoveNfa_3(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 804;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 807:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(684, 686); }
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(687, 689); }
                  break;
               case 804:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(690, 692); }
                  else if (curChar == 40)
                  {
                     if (kind > 105)
                        kind = 105;
                  }
                  if ((0x3ff200000000000L & l) != 0L)
                  {
                     if (kind > 73)
                        kind = 73;
                     { jjCheckNAddTwoStates(248, 249); }
                  }
                  break;
               case 173:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(690, 692); }
                  else if (curChar == 40)
                  {
                     if (kind > 105)
                        kind = 105;
                  }
                  if ((0x3ff200000000000L & l) != 0L)
                  {
                     if (kind > 73)
                        kind = 73;
                     { jjCheckNAddTwoStates(248, 249); }
                  }
                  break;
               case 692:
                  if (curChar == 42)
                     { jjCheckNAddStates(167, 169); }
                  else if (curChar == 36)
                     { jjCheckNAddStates(170, 172); }
                  else if (curChar == 45)
                     { jjCheckNAddTwoStates(23, 42); }
                  if (curChar == 45)
                     { jjCheckNAddStates(693, 697); }
                  if (curChar == 45)
                     { jjCheckNAddStates(698, 702); }
                  break;
               case 806:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(703, 705); }
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(706, 708); }
                  break;
               case 805:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(481, 482); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(477, 480); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(474, 476); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(472, 473); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(469, 471); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(464, 468); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(459, 463); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(455, 458); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(451, 454); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(448, 450); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(445, 447); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(442, 444); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(439, 441); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(436, 438); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(431, 435); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(426, 430); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(422, 425); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(419, 421); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(414, 418); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(411, 413); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(408, 410); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(404, 407); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(401, 403); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(398, 400); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(395, 397); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 32)
                        kind = 32;
                     { jjCheckNAdd(394); }
                  }
                  break;
               case 2:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 32)
                        kind = 32;
                     { jjCheckNAddStates(709, 811); }
                  }
                  else if ((0x100003600L & l) != 0L)
                  {
                     if (kind > 4)
                        kind = 4;
                     { jjCheckNAddStates(812, 817); }
                  }
                  else if (curChar == 42)
                     { jjCheckNAddStates(818, 823); }
                  else if (curChar == 36)
                     { jjCheckNAddStates(824, 829); }
                  else if (curChar == 45)
                     { jjCheckNAddStates(830, 833); }
                  else if (curChar == 46)
                     { jjCheckNAddStates(834, 859); }
                  else if (curChar == 39)
                  {
                     if (kind > 26)
                        kind = 26;
                     { jjCheckNAddStates(860, 864); }
                  }
                  else if (curChar == 34)
                  {
                     if (kind > 25)
                        kind = 25;
                     { jjCheckNAddStates(865, 869); }
                  }
                  else if (curChar == 33)
                     { jjCheckNAddTwoStates(61, 70); }
                  else if (curChar == 35)
                     { jjCheckNAddTwoStates(3, 4); }
                  else if (curChar == 44)
                  {
                     if (kind > 38)
                        kind = 38;
                  }
                  if (curChar == 45)
                     { jjAddStates(870, 872); }
                  break;
               case 808:
               case 24:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddTwoStates(24, 25); }
                  break;
               case 1:
                  if (curChar == 44 && kind > 38)
                     kind = 38;
                  break;
               case 3:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  { jjCheckNAddTwoStates(3, 4); }
                  break;
               case 5:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  { jjCheckNAddTwoStates(3, 4); }
                  break;
               case 6:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  { jjCheckNAddStates(195, 203); }
                  break;
               case 7:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  { jjCheckNAddStates(204, 207); }
                  break;
               case 8:
                  if (curChar != 10)
                     break;
                  if (kind > 47)
                     kind = 47;
                  { jjCheckNAddTwoStates(3, 4); }
                  break;
               case 9:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 10:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  { jjCheckNAddTwoStates(3, 4); }
                  break;
               case 11:
               case 13:
               case 16:
               case 20:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(7); }
                  break;
               case 12:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 14:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 15:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 17:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 18:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 19:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 22:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(23, 42); }
                  break;
               case 26:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddTwoStates(24, 25); }
                  break;
               case 27:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(208, 216); }
                  break;
               case 28:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(217, 220); }
                  break;
               case 29:
                  if (curChar != 10)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddTwoStates(24, 25); }
                  break;
               case 30:
               case 45:
                  if (curChar == 13)
                     { jjCheckNAdd(29); }
                  break;
               case 31:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddTwoStates(24, 25); }
                  break;
               case 32:
               case 34:
               case 37:
               case 41:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(28); }
                  break;
               case 33:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 34;
                  break;
               case 35:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 36;
                  break;
               case 36:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 38:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 39:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 40;
                  break;
               case 40:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 43:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(221, 229); }
                  break;
               case 44:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(230, 233); }
                  break;
               case 46:
               case 48:
               case 51:
               case 55:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(44); }
                  break;
               case 47:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 48;
                  break;
               case 49:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 50;
                  break;
               case 50:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 52:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 53;
                  break;
               case 53:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 54;
                  break;
               case 54:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 55;
                  break;
               case 56:
                  if (curChar == 36)
                     { jjCheckNAddStates(170, 172); }
                  break;
               case 57:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(170, 172); }
                  break;
               case 58:
                  if (curChar == 42)
                     { jjCheckNAddStates(167, 169); }
                  break;
               case 59:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(167, 169); }
                  break;
               case 60:
                  if (curChar == 33)
                     { jjCheckNAddTwoStates(61, 70); }
                  break;
               case 61:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(61, 70); }
                  break;
               case 71:
                  if (curChar == 40 && kind > 101)
                     kind = 101;
                  break;
               case 77:
                  if ((0x100003600L & l) != 0L)
                     { jjAddStates(234, 235); }
                  break;
               case 78:
                  if (curChar == 58)
                     { jjCheckNAddStates(236, 241); }
                  break;
               case 79:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(236, 241); }
                  break;
               case 80:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(81, 141); }
                  break;
               case 82:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(242, 246); }
                  break;
               case 83:
                  if (curChar == 46)
                     { jjCheckNAddStates(247, 251); }
                  break;
               case 84:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(85, 106); }
                  break;
               case 86:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(252, 256); }
                  break;
               case 87:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(87, 88); }
                  break;
               case 88:
                  if (curChar == 40 && kind > 105)
                     kind = 105;
                  break;
               case 90:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(252, 256); }
                  break;
               case 91:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(257, 267); }
                  break;
               case 92:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(268, 273); }
                  break;
               case 93:
                  if (curChar == 10)
                     { jjCheckNAddStates(252, 256); }
                  break;
               case 94:
               case 109:
                  if (curChar == 13)
                     { jjCheckNAdd(93); }
                  break;
               case 95:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(252, 256); }
                  break;
               case 96:
               case 98:
               case 101:
               case 105:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(92); }
                  break;
               case 97:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 98;
                  break;
               case 99:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 100;
                  break;
               case 100:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 101;
                  break;
               case 102:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 103;
                  break;
               case 103:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 104;
                  break;
               case 104:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 105;
                  break;
               case 107:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(274, 284); }
                  break;
               case 108:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(285, 290); }
                  break;
               case 110:
               case 112:
               case 115:
               case 119:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(108); }
                  break;
               case 111:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 112;
                  break;
               case 113:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 114;
                  break;
               case 114:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 115;
                  break;
               case 116:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 117;
                  break;
               case 117:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 118;
                  break;
               case 118:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 119;
                  break;
               case 120:
                  if (curChar == 36)
                     { jjCheckNAddStates(291, 293); }
                  break;
               case 121:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(291, 293); }
                  break;
               case 122:
                  if (curChar == 42)
                     { jjCheckNAddStates(294, 296); }
                  break;
               case 123:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(294, 296); }
                  break;
               case 125:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(242, 246); }
                  break;
               case 126:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(297, 307); }
                  break;
               case 127:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(308, 313); }
                  break;
               case 128:
                  if (curChar == 10)
                     { jjCheckNAddStates(242, 246); }
                  break;
               case 129:
               case 144:
                  if (curChar == 13)
                     { jjCheckNAdd(128); }
                  break;
               case 130:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(242, 246); }
                  break;
               case 131:
               case 133:
               case 136:
               case 140:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(127); }
                  break;
               case 132:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 133;
                  break;
               case 134:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 135;
                  break;
               case 135:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 136;
                  break;
               case 137:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 138;
                  break;
               case 138:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 139;
                  break;
               case 139:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 140;
                  break;
               case 142:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(314, 324); }
                  break;
               case 143:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(325, 330); }
                  break;
               case 145:
               case 147:
               case 150:
               case 154:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(143); }
                  break;
               case 146:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 147;
                  break;
               case 148:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 149;
                  break;
               case 149:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 150;
                  break;
               case 151:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 152;
                  break;
               case 152:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 153;
                  break;
               case 153:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 154;
                  break;
               case 155:
                  if (curChar == 36)
                     { jjCheckNAddStates(331, 333); }
                  break;
               case 156:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(331, 333); }
                  break;
               case 157:
                  if (curChar == 42)
                     { jjCheckNAddStates(334, 336); }
                  break;
               case 158:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(334, 336); }
                  break;
               case 165:
                  if (curChar == 40 && kind > 103)
                     kind = 103;
                  break;
               case 171:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 170;
                  break;
               case 179:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 178;
                  break;
               case 184:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 183;
                  break;
               case 191:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 190;
                  break;
               case 194:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 193;
                  break;
               case 201:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 200;
                  break;
               case 204:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 203;
                  break;
               case 209:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 208;
                  break;
               case 212:
                  if (curChar == 45)
                     { jjAddStates(870, 872); }
                  break;
               case 217:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 216;
                  break;
               case 225:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 224;
                  break;
               case 236:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 235;
                  break;
               case 238:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 4)
                     kind = 4;
                  { jjCheckNAddStates(812, 817); }
                  break;
               case 239:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 4)
                     kind = 4;
                  { jjCheckNAdd(239); }
                  break;
               case 240:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 5)
                     kind = 5;
                  { jjCheckNAdd(240); }
                  break;
               case 241:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(241, 0); }
                  break;
               case 242:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(242, 1); }
                  break;
               case 244:
                  if ((0x3400L & l) != 0L && kind > 22)
                     kind = 22;
                  break;
               case 245:
                  if (curChar == 10 && kind > 22)
                     kind = 22;
                  break;
               case 246:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 245;
                  break;
               case 247:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  { jjCheckNAddTwoStates(248, 249); }
                  break;
               case 248:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  { jjCheckNAddTwoStates(248, 249); }
                  break;
               case 250:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  { jjCheckNAddStates(873, 881); }
                  break;
               case 251:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  { jjCheckNAddStates(882, 885); }
                  break;
               case 252:
                  if (curChar != 10)
                     break;
                  if (kind > 73)
                     kind = 73;
                  { jjCheckNAddTwoStates(248, 249); }
                  break;
               case 253:
               case 298:
                  if (curChar == 13)
                     { jjCheckNAdd(252); }
                  break;
               case 254:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  { jjCheckNAddTwoStates(248, 249); }
                  break;
               case 255:
               case 257:
               case 260:
               case 264:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(251); }
                  break;
               case 256:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 257;
                  break;
               case 258:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 259;
                  break;
               case 259:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 260;
                  break;
               case 261:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 262;
                  break;
               case 262:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 263;
                  break;
               case 263:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 264;
                  break;
               case 265:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(690, 692); }
                  break;
               case 266:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(690, 692); }
                  break;
               case 268:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(886, 895); }
                  break;
               case 269:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(896, 900); }
                  break;
               case 270:
                  if (curChar == 10)
                     { jjCheckNAddStates(690, 692); }
                  break;
               case 271:
               case 285:
                  if (curChar == 13)
                     { jjCheckNAdd(270); }
                  break;
               case 272:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(690, 692); }
                  break;
               case 273:
               case 275:
               case 278:
               case 282:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(269); }
                  break;
               case 274:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 275;
                  break;
               case 276:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 277;
                  break;
               case 277:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 278;
                  break;
               case 279:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 280;
                  break;
               case 280:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 281;
                  break;
               case 281:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 282;
                  break;
               case 283:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(901, 910); }
                  break;
               case 284:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(911, 915); }
                  break;
               case 286:
               case 288:
               case 291:
               case 295:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(284); }
                  break;
               case 287:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 288;
                  break;
               case 289:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 290;
                  break;
               case 290:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 291;
                  break;
               case 292:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 293;
                  break;
               case 293:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 294;
                  break;
               case 294:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 295;
                  break;
               case 296:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  { jjCheckNAddStates(916, 924); }
                  break;
               case 297:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  { jjCheckNAddStates(925, 928); }
                  break;
               case 299:
               case 301:
               case 304:
               case 308:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(297); }
                  break;
               case 300:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 301;
                  break;
               case 302:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 303;
                  break;
               case 303:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 304;
                  break;
               case 305:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 306;
                  break;
               case 306:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 307;
                  break;
               case 307:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 308;
                  break;
               case 309:
                  if (curChar != 34)
                     break;
                  if (kind > 25)
                     kind = 25;
                  { jjCheckNAddStates(865, 869); }
                  break;
               case 310:
                  if ((0xfffffffbffffcbffL & l) != 0L)
                     { jjCheckNAddStates(929, 931); }
                  break;
               case 311:
                  if (curChar == 34 && kind > 23)
                     kind = 23;
                  break;
               case 313:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(929, 931); }
                  break;
               case 314:
                  if (curChar == 10)
                     { jjCheckNAddStates(929, 931); }
                  break;
               case 315:
               case 319:
                  if (curChar == 13)
                     { jjCheckNAdd(314); }
                  break;
               case 316:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(929, 931); }
                  break;
               case 317:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(932, 941); }
                  break;
               case 318:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(942, 946); }
                  break;
               case 320:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(929, 931); }
                  break;
               case 321:
               case 323:
               case 326:
               case 330:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(318); }
                  break;
               case 322:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 323;
                  break;
               case 324:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 325;
                  break;
               case 325:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 326;
                  break;
               case 327:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 328;
                  break;
               case 328:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 329;
                  break;
               case 329:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 330;
                  break;
               case 331:
                  if ((0xfffffffbffffcbffL & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  { jjCheckNAddTwoStates(331, 332); }
                  break;
               case 333:
                  if ((0x3400L & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  { jjCheckNAddTwoStates(331, 332); }
                  break;
               case 334:
                  if (curChar != 10)
                     break;
                  if (kind > 25)
                     kind = 25;
                  { jjCheckNAddTwoStates(331, 332); }
                  break;
               case 335:
               case 339:
                  if (curChar == 13)
                     { jjCheckNAdd(334); }
                  break;
               case 336:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  { jjCheckNAddTwoStates(331, 332); }
                  break;
               case 337:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  { jjCheckNAddStates(947, 955); }
                  break;
               case 338:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  { jjCheckNAddStates(956, 959); }
                  break;
               case 340:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  { jjCheckNAddTwoStates(331, 332); }
                  break;
               case 341:
               case 343:
               case 346:
               case 350:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(338); }
                  break;
               case 342:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 343;
                  break;
               case 344:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 345;
                  break;
               case 345:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 346;
                  break;
               case 347:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 348;
                  break;
               case 348:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 349;
                  break;
               case 349:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 350;
                  break;
               case 351:
                  if (curChar != 39)
                     break;
                  if (kind > 26)
                     kind = 26;
                  { jjCheckNAddStates(860, 864); }
                  break;
               case 352:
                  if ((0xffffff7fffffcbffL & l) != 0L)
                     { jjCheckNAddStates(960, 962); }
                  break;
               case 353:
                  if (curChar == 39 && kind > 24)
                     kind = 24;
                  break;
               case 355:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(960, 962); }
                  break;
               case 356:
                  if (curChar == 10)
                     { jjCheckNAddStates(960, 962); }
                  break;
               case 357:
               case 361:
                  if (curChar == 13)
                     { jjCheckNAdd(356); }
                  break;
               case 358:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(960, 962); }
                  break;
               case 359:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(963, 972); }
                  break;
               case 360:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(973, 977); }
                  break;
               case 362:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(960, 962); }
                  break;
               case 363:
               case 365:
               case 368:
               case 372:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(360); }
                  break;
               case 364:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 365;
                  break;
               case 366:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 367;
                  break;
               case 367:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 368;
                  break;
               case 369:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 370;
                  break;
               case 370:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 371;
                  break;
               case 371:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 372;
                  break;
               case 373:
                  if ((0xffffff7fffffcbffL & l) == 0L)
                     break;
                  if (kind > 26)
                     kind = 26;
                  { jjCheckNAddTwoStates(373, 374); }
                  break;
               case 375:
                  if ((0x3400L & l) == 0L)
                     break;
                  if (kind > 26)
                     kind = 26;
                  { jjCheckNAddTwoStates(373, 374); }
                  break;
               case 376:
                  if (curChar != 10)
                     break;
                  if (kind > 26)
                     kind = 26;
                  { jjCheckNAddTwoStates(373, 374); }
                  break;
               case 377:
               case 381:
                  if (curChar == 13)
                     { jjCheckNAdd(376); }
                  break;
               case 378:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 26)
                     kind = 26;
                  { jjCheckNAddTwoStates(373, 374); }
                  break;
               case 379:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 26)
                     kind = 26;
                  { jjCheckNAddStates(978, 986); }
                  break;
               case 380:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 26)
                     kind = 26;
                  { jjCheckNAddStates(987, 990); }
                  break;
               case 382:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 26)
                     kind = 26;
                  { jjCheckNAddTwoStates(373, 374); }
                  break;
               case 383:
               case 385:
               case 388:
               case 392:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(380); }
                  break;
               case 384:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 385;
                  break;
               case 386:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 387;
                  break;
               case 387:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 388;
                  break;
               case 389:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 390;
                  break;
               case 390:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 391;
                  break;
               case 391:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 392;
                  break;
               case 393:
                  if (curChar == 46)
                     { jjCheckNAddStates(834, 859); }
                  break;
               case 394:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 32)
                     kind = 32;
                  { jjCheckNAdd(394); }
                  break;
               case 395:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(395, 397); }
                  break;
               case 398:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(398, 400); }
                  break;
               case 401:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(401, 403); }
                  break;
               case 404:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(404, 407); }
                  break;
               case 408:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(408, 410); }
                  break;
               case 411:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(411, 413); }
                  break;
               case 414:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(414, 418); }
                  break;
               case 419:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(419, 421); }
                  break;
               case 422:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(422, 425); }
                  break;
               case 426:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(426, 430); }
                  break;
               case 431:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(431, 435); }
                  break;
               case 436:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(436, 438); }
                  break;
               case 439:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(439, 441); }
                  break;
               case 442:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(442, 444); }
                  break;
               case 445:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(445, 447); }
                  break;
               case 448:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(448, 450); }
                  break;
               case 451:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(451, 454); }
                  break;
               case 455:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(455, 458); }
                  break;
               case 459:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(459, 463); }
                  break;
               case 464:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(464, 468); }
                  break;
               case 469:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(469, 471); }
                  break;
               case 472:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(472, 473); }
                  break;
               case 474:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(474, 476); }
                  break;
               case 477:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(477, 480); }
                  break;
               case 481:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(481, 482); }
                  break;
               case 482:
                  if (curChar == 37 && kind > 98)
                     kind = 98;
                  break;
               case 483:
                  if (curChar == 45)
                     { jjCheckNAddStates(830, 833); }
                  break;
               case 488:
                  if (curChar == 36)
                     { jjCheckNAddStates(824, 829); }
                  break;
               case 489:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(706, 708); }
                  break;
               case 490:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(703, 705); }
                  break;
               case 491:
                  if (curChar == 42)
                     { jjCheckNAddStates(818, 823); }
                  break;
               case 492:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(687, 689); }
                  break;
               case 493:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(684, 686); }
                  break;
               case 496:
                  if (curChar == 40)
                     { jjCheckNAddStates(991, 996); }
                  break;
               case 497:
                  if (curChar == 34)
                     { jjCheckNAddStates(997, 999); }
                  break;
               case 498:
                  if ((0xfffffffbffffcbffL & l) != 0L)
                     { jjCheckNAddStates(997, 999); }
                  break;
               case 499:
                  if (curChar == 34)
                     { jjCheckNAddTwoStates(500, 501); }
                  break;
               case 500:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(500, 501); }
                  break;
               case 501:
                  if (curChar == 41 && kind > 100)
                     kind = 100;
                  break;
               case 503:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(997, 999); }
                  break;
               case 504:
                  if (curChar == 10)
                     { jjCheckNAddStates(997, 999); }
                  break;
               case 505:
               case 509:
                  if (curChar == 13)
                     { jjCheckNAdd(504); }
                  break;
               case 506:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(997, 999); }
                  break;
               case 507:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1000, 1009); }
                  break;
               case 508:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1010, 1014); }
                  break;
               case 510:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(997, 999); }
                  break;
               case 511:
               case 513:
               case 516:
               case 520:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(508); }
                  break;
               case 512:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 513;
                  break;
               case 514:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 515;
                  break;
               case 515:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 516;
                  break;
               case 517:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 518;
                  break;
               case 518:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 519;
                  break;
               case 519:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 520;
                  break;
               case 521:
                  if (curChar == 39)
                     { jjCheckNAddStates(1015, 1017); }
                  break;
               case 522:
                  if ((0xffffff7fffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1015, 1017); }
                  break;
               case 523:
                  if (curChar == 39)
                     { jjCheckNAddTwoStates(500, 501); }
                  break;
               case 525:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(1015, 1017); }
                  break;
               case 526:
                  if (curChar == 10)
                     { jjCheckNAddStates(1015, 1017); }
                  break;
               case 527:
               case 531:
                  if (curChar == 13)
                     { jjCheckNAdd(526); }
                  break;
               case 528:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1015, 1017); }
                  break;
               case 529:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1018, 1027); }
                  break;
               case 530:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1028, 1032); }
                  break;
               case 532:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1015, 1017); }
                  break;
               case 533:
               case 535:
               case 538:
               case 542:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(530); }
                  break;
               case 534:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 535;
                  break;
               case 536:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 537;
                  break;
               case 537:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 538;
                  break;
               case 539:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 540;
                  break;
               case 540:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 541;
                  break;
               case 541:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 542;
                  break;
               case 543:
                  if ((0xfffffc7a00000000L & l) != 0L)
                     { jjCheckNAddStates(1033, 1036); }
                  break;
               case 545:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1033, 1036); }
                  break;
               case 546:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1037, 1046); }
                  break;
               case 547:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1047, 1051); }
                  break;
               case 548:
                  if (curChar == 10)
                     { jjCheckNAddStates(1033, 1036); }
                  break;
               case 549:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 548;
                  break;
               case 550:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1033, 1036); }
                  break;
               case 551:
               case 553:
               case 556:
               case 560:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(547); }
                  break;
               case 552:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 553;
                  break;
               case 554:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 555;
                  break;
               case 555:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 556;
                  break;
               case 557:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 558;
                  break;
               case 558:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 559;
                  break;
               case 559:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 560;
                  break;
               case 561:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1052, 1058); }
                  break;
               case 564:
                  if (curChar == 43)
                     { jjAddStates(1059, 1060); }
                  break;
               case 565:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1061, 1071); }
                  break;
               case 566:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(567); }
                  break;
               case 567:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 568;
                  break;
               case 568:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddStates(1072, 1076); }
                  break;
               case 569:
                  if ((0x3ff000000000000L & l) != 0L && kind > 106)
                     kind = 106;
                  break;
               case 570:
               case 572:
               case 575:
               case 579:
               case 593:
               case 596:
               case 598:
               case 599:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(569); }
                  break;
               case 571:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 572;
                  break;
               case 573:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 574;
                  break;
               case 574:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 575;
                  break;
               case 576:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 577;
                  break;
               case 577:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 578;
                  break;
               case 578:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 579;
                  break;
               case 580:
               case 582:
               case 585:
               case 589:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(566); }
                  break;
               case 581:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 582;
                  break;
               case 583:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 584;
                  break;
               case 584:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 585;
                  break;
               case 586:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 587;
                  break;
               case 587:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 588;
                  break;
               case 588:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 589;
                  break;
               case 590:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 591;
                  break;
               case 591:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 592;
                  break;
               case 592:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 593;
                  break;
               case 594:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 595;
                  break;
               case 595:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 596;
                  break;
               case 597:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 598;
                  break;
               case 600:
                  if ((0x83ff000000000000L & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddStates(1077, 1081); }
                  break;
               case 601:
                  if ((0x83ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 602;
                  break;
               case 602:
                  if ((0x83ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 603;
                  break;
               case 603:
                  if ((0x83ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 604;
                  break;
               case 604:
               case 608:
               case 610:
               case 611:
                  if ((0x83ff000000000000L & l) != 0L)
                     { jjCheckNAdd(605); }
                  break;
               case 605:
                  if ((0x83ff000000000000L & l) != 0L && kind > 106)
                     kind = 106;
                  break;
               case 606:
                  if ((0x83ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 607;
                  break;
               case 607:
                  if ((0x83ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 608;
                  break;
               case 609:
                  if ((0x83ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 610;
                  break;
               case 612:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 32)
                     kind = 32;
                  { jjCheckNAddStates(709, 811); }
                  break;
               case 613:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 32)
                     kind = 32;
                  { jjCheckNAdd(613); }
                  break;
               case 614:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(614, 615); }
                  break;
               case 615:
                  if (curChar == 46)
                     { jjCheckNAdd(394); }
                  break;
               case 616:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(616, 397); }
                  break;
               case 617:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(617, 618); }
                  break;
               case 618:
                  if (curChar == 46)
                     { jjCheckNAdd(395); }
                  break;
               case 619:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(619, 400); }
                  break;
               case 620:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(620, 621); }
                  break;
               case 621:
                  if (curChar == 46)
                     { jjCheckNAdd(398); }
                  break;
               case 622:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(622, 403); }
                  break;
               case 623:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(623, 624); }
                  break;
               case 624:
                  if (curChar == 46)
                     { jjCheckNAdd(401); }
                  break;
               case 625:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(625, 407); }
                  break;
               case 626:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(626, 627); }
                  break;
               case 627:
                  if (curChar == 46)
                     { jjCheckNAdd(404); }
                  break;
               case 628:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(628, 410); }
                  break;
               case 629:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(629, 630); }
                  break;
               case 630:
                  if (curChar == 46)
                     { jjCheckNAdd(408); }
                  break;
               case 631:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(631, 413); }
                  break;
               case 632:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(632, 633); }
                  break;
               case 633:
                  if (curChar == 46)
                     { jjCheckNAdd(411); }
                  break;
               case 634:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(634, 418); }
                  break;
               case 635:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(635, 636); }
                  break;
               case 636:
                  if (curChar == 46)
                     { jjCheckNAdd(414); }
                  break;
               case 637:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(637, 421); }
                  break;
               case 638:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(638, 639); }
                  break;
               case 639:
                  if (curChar == 46)
                     { jjCheckNAdd(419); }
                  break;
               case 640:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(640, 425); }
                  break;
               case 641:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(641, 642); }
                  break;
               case 642:
                  if (curChar == 46)
                     { jjCheckNAdd(422); }
                  break;
               case 643:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(643, 430); }
                  break;
               case 644:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(644, 645); }
                  break;
               case 645:
                  if (curChar == 46)
                     { jjCheckNAdd(426); }
                  break;
               case 646:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(646, 435); }
                  break;
               case 647:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(647, 648); }
                  break;
               case 648:
                  if (curChar == 46)
                     { jjCheckNAdd(431); }
                  break;
               case 649:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(649, 438); }
                  break;
               case 650:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(650, 651); }
                  break;
               case 651:
                  if (curChar == 46)
                     { jjCheckNAdd(436); }
                  break;
               case 652:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(652, 441); }
                  break;
               case 653:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(653, 654); }
                  break;
               case 654:
                  if (curChar == 46)
                     { jjCheckNAdd(439); }
                  break;
               case 655:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(655, 444); }
                  break;
               case 656:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(656, 657); }
                  break;
               case 657:
                  if (curChar == 46)
                     { jjCheckNAdd(442); }
                  break;
               case 658:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(658, 447); }
                  break;
               case 659:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(659, 660); }
                  break;
               case 660:
                  if (curChar == 46)
                     { jjCheckNAdd(445); }
                  break;
               case 661:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(661, 450); }
                  break;
               case 662:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(662, 663); }
                  break;
               case 663:
                  if (curChar == 46)
                     { jjCheckNAdd(448); }
                  break;
               case 664:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(664, 454); }
                  break;
               case 665:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(665, 666); }
                  break;
               case 666:
                  if (curChar == 46)
                     { jjCheckNAdd(451); }
                  break;
               case 667:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(667, 458); }
                  break;
               case 668:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(668, 669); }
                  break;
               case 669:
                  if (curChar == 46)
                     { jjCheckNAdd(455); }
                  break;
               case 670:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(670, 463); }
                  break;
               case 671:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(671, 672); }
                  break;
               case 672:
                  if (curChar == 46)
                     { jjCheckNAdd(459); }
                  break;
               case 673:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(673, 468); }
                  break;
               case 674:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(674, 675); }
                  break;
               case 675:
                  if (curChar == 46)
                     { jjCheckNAdd(464); }
                  break;
               case 676:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(676, 471); }
                  break;
               case 677:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(677, 678); }
                  break;
               case 678:
                  if (curChar == 46)
                     { jjCheckNAdd(469); }
                  break;
               case 679:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(679, 473); }
                  break;
               case 680:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(680, 681); }
                  break;
               case 681:
                  if (curChar == 46)
                     { jjCheckNAdd(472); }
                  break;
               case 682:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(682, 476); }
                  break;
               case 683:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(683, 684); }
                  break;
               case 684:
                  if (curChar == 46)
                     { jjCheckNAdd(474); }
                  break;
               case 685:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(685, 480); }
                  break;
               case 686:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(686, 687); }
                  break;
               case 687:
                  if (curChar == 46)
                     { jjCheckNAdd(477); }
                  break;
               case 688:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(688, 482); }
                  break;
               case 689:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(689, 690); }
                  break;
               case 690:
                  if (curChar == 46)
                     { jjCheckNAdd(481); }
                  break;
               case 693:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(694, 723); }
                  break;
               case 695:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(1082, 1084); }
                  break;
               case 705:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 704;
                  break;
               case 707:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1082, 1084); }
                  break;
               case 708:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1085, 1094); }
                  break;
               case 709:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1095, 1099); }
                  break;
               case 710:
                  if (curChar == 10)
                     { jjCheckNAddStates(1082, 1084); }
                  break;
               case 711:
               case 726:
                  if (curChar == 13)
                     { jjCheckNAdd(710); }
                  break;
               case 712:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1082, 1084); }
                  break;
               case 713:
               case 715:
               case 718:
               case 722:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(709); }
                  break;
               case 714:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 715;
                  break;
               case 716:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 717;
                  break;
               case 717:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 718;
                  break;
               case 719:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 720;
                  break;
               case 720:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 721;
                  break;
               case 721:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 722;
                  break;
               case 724:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1100, 1109); }
                  break;
               case 725:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1110, 1114); }
                  break;
               case 727:
               case 729:
               case 732:
               case 736:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(725); }
                  break;
               case 728:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 729;
                  break;
               case 730:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 731;
                  break;
               case 731:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 732;
                  break;
               case 733:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 734;
                  break;
               case 734:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 735;
                  break;
               case 735:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 736;
                  break;
               case 737:
                  if (curChar == 36)
                     { jjCheckNAddStates(1115, 1117); }
                  break;
               case 738:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1115, 1117); }
                  break;
               case 739:
                  if (curChar == 42)
                     { jjCheckNAddStates(1118, 1120); }
                  break;
               case 740:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1118, 1120); }
                  break;
               case 749:
                  if (curChar == 45)
                     { jjCheckNAddStates(693, 697); }
                  break;
               case 750:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(751, 779); }
                  break;
               case 752:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(1121, 1123); }
                  break;
               case 761:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 760;
                  break;
               case 763:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1121, 1123); }
                  break;
               case 764:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1124, 1133); }
                  break;
               case 765:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1134, 1138); }
                  break;
               case 766:
                  if (curChar == 10)
                     { jjCheckNAddStates(1121, 1123); }
                  break;
               case 767:
               case 782:
                  if (curChar == 13)
                     { jjCheckNAdd(766); }
                  break;
               case 768:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1121, 1123); }
                  break;
               case 769:
               case 771:
               case 774:
               case 778:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(765); }
                  break;
               case 770:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 771;
                  break;
               case 772:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 773;
                  break;
               case 773:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 774;
                  break;
               case 775:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 776;
                  break;
               case 776:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 777;
                  break;
               case 777:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 778;
                  break;
               case 780:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1139, 1148); }
                  break;
               case 781:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1149, 1153); }
                  break;
               case 783:
               case 785:
               case 788:
               case 792:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(781); }
                  break;
               case 784:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 785;
                  break;
               case 786:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 787;
                  break;
               case 787:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 788;
                  break;
               case 789:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 790;
                  break;
               case 790:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 791;
                  break;
               case 791:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 792;
                  break;
               case 793:
                  if (curChar == 36)
                     { jjCheckNAddStates(1154, 1156); }
                  break;
               case 794:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1154, 1156); }
                  break;
               case 795:
                  if (curChar == 42)
                     { jjCheckNAddStates(1157, 1159); }
                  break;
               case 796:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1157, 1159); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 807:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(690, 692); }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(247, 296); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 73)
                        kind = 73;
                     { jjCheckNAddTwoStates(248, 249); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(265, 283); }
                  break;
               case 220:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(690, 692); }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(247, 296); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 73)
                        kind = 73;
                     { jjCheckNAddTwoStates(248, 249); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(265, 283); }
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 236;
                  else if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 230;
                  else if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 219;
                  break;
               case 804:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(690, 692); }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(247, 250); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 73)
                        kind = 73;
                     { jjCheckNAddTwoStates(248, 249); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(265, 268); }
                  break;
               case 173:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(690, 692); }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(247, 250); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 73)
                        kind = 73;
                     { jjCheckNAddTwoStates(248, 249); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(265, 268); }
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 210;
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 195;
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 185;
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 172;
                  break;
               case 692:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 64)
                        kind = 64;
                     { jjCheckNAddTwoStates(24, 25); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(26, 43); }
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 802;
                  else if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 747;
                  break;
               case 806:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(690, 692); }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(247, 296); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 73)
                        kind = 73;
                     { jjCheckNAddTwoStates(248, 249); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(265, 283); }
                  break;
               case 2:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 73)
                        kind = 73;
                     { jjCheckNAddStates(1160, 1164); }
                  }
                  else if (curChar == 64)
                     { jjAddStates(1165, 1168); }
                  else if (curChar == 92)
                     { jjCheckNAddStates(1169, 1174); }
                  else if (curChar == 123)
                  {
                     if (kind > 33)
                        kind = 33;
                  }
                  if ((0x20000000200000L & l) != 0L)
                     { jjAddStates(1175, 1176); }
                  else if ((0x400000004000L & l) != 0L)
                     { jjAddStates(1177, 1180); }
                  else if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 162;
                  else if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 74;
                  else if (curChar == 64)
                     { jjAddStates(648, 652); }
                  break;
               case 808:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 64)
                        kind = 64;
                     { jjCheckNAddTwoStates(24, 25); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(26, 27); }
                  break;
               case 0:
                  if (curChar == 123 && kind > 33)
                     kind = 33;
                  break;
               case 3:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  { jjCheckNAddTwoStates(3, 4); }
                  break;
               case 4:
                  if (curChar == 92)
                     { jjAddStates(653, 654); }
                  break;
               case 5:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  { jjCheckNAddTwoStates(3, 4); }
                  break;
               case 6:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  { jjCheckNAddStates(195, 203); }
                  break;
               case 7:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  { jjCheckNAddStates(204, 207); }
                  break;
               case 11:
               case 13:
               case 16:
               case 20:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(7); }
                  break;
               case 12:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 14:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 15:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 17:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 18:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 19:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 21:
                  if (curChar == 64)
                     { jjAddStates(648, 652); }
                  break;
               case 23:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddTwoStates(24, 25); }
                  break;
               case 24:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddTwoStates(24, 25); }
                  break;
               case 25:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(26, 27); }
                  break;
               case 26:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddTwoStates(24, 25); }
                  break;
               case 27:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(208, 216); }
                  break;
               case 28:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(217, 220); }
                  break;
               case 32:
               case 34:
               case 37:
               case 41:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(28); }
                  break;
               case 33:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 34;
                  break;
               case 35:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 36;
                  break;
               case 36:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 38:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 39:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 40;
                  break;
               case 40:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 42:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(26, 43); }
                  break;
               case 43:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(221, 229); }
                  break;
               case 44:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(230, 233); }
                  break;
               case 46:
               case 48:
               case 51:
               case 55:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(44); }
                  break;
               case 47:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 48;
                  break;
               case 49:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 50;
                  break;
               case 50:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 52:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 53;
                  break;
               case 53:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 54;
                  break;
               case 54:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 55;
                  break;
               case 62:
                  if ((0x10000000100000L & l) != 0L && kind > 65)
                     kind = 65;
                  break;
               case 63:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 62;
                  break;
               case 64:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 63;
                  break;
               case 65:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 64;
                  break;
               case 66:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 65;
                  break;
               case 67:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 66;
                  break;
               case 68:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 67;
                  break;
               case 69:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 68;
                  break;
               case 70:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 69;
                  break;
               case 72:
               case 213:
               case 221:
               case 232:
                  if ((0x800000008L & l) != 0L)
                     { jjCheckNAdd(71); }
                  break;
               case 73:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 72;
                  break;
               case 74:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 73;
                  break;
               case 75:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 74;
                  break;
               case 76:
                  if ((0x1000000010L & l) != 0L)
                     { jjAddStates(234, 235); }
                  break;
               case 81:
               case 82:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(242, 246); }
                  break;
               case 85:
               case 86:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(252, 256); }
                  break;
               case 89:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(90, 91); }
                  break;
               case 90:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(252, 256); }
                  break;
               case 91:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(257, 267); }
                  break;
               case 92:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(268, 273); }
                  break;
               case 96:
               case 98:
               case 101:
               case 105:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(92); }
                  break;
               case 97:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 98;
                  break;
               case 99:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 100;
                  break;
               case 100:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 101;
                  break;
               case 102:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 103;
                  break;
               case 103:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 104;
                  break;
               case 104:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 105;
                  break;
               case 106:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(90, 107); }
                  break;
               case 107:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(274, 284); }
                  break;
               case 108:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(285, 290); }
                  break;
               case 110:
               case 112:
               case 115:
               case 119:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(108); }
                  break;
               case 111:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 112;
                  break;
               case 113:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 114;
                  break;
               case 114:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 115;
                  break;
               case 116:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 117;
                  break;
               case 117:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 118;
                  break;
               case 118:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 119;
                  break;
               case 124:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(125, 126); }
                  break;
               case 125:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(242, 246); }
                  break;
               case 126:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(297, 307); }
                  break;
               case 127:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(308, 313); }
                  break;
               case 131:
               case 133:
               case 136:
               case 140:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(127); }
                  break;
               case 132:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 133;
                  break;
               case 134:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 135;
                  break;
               case 135:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 136;
                  break;
               case 137:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 138;
                  break;
               case 138:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 139;
                  break;
               case 139:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 140;
                  break;
               case 141:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(125, 142); }
                  break;
               case 142:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(314, 324); }
                  break;
               case 143:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(325, 330); }
                  break;
               case 145:
               case 147:
               case 150:
               case 154:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(143); }
                  break;
               case 146:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 147;
                  break;
               case 148:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 149;
                  break;
               case 149:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 150;
                  break;
               case 151:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 152;
                  break;
               case 152:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 153;
                  break;
               case 153:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 154;
                  break;
               case 159:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 76;
                  break;
               case 160:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 159;
                  break;
               case 161:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 160;
                  break;
               case 162:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 161;
                  break;
               case 163:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 162;
                  break;
               case 164:
                  if ((0x400000004000L & l) != 0L)
                     { jjAddStates(1177, 1180); }
                  break;
               case 166:
               case 174:
                  if ((0x1000000010L & l) != 0L)
                     { jjCheckNAdd(165); }
                  break;
               case 167:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 166;
                  break;
               case 168:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 167;
                  break;
               case 169:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 168;
                  break;
               case 170:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 169;
                  break;
               case 172:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 171;
                  break;
               case 175:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 174;
                  break;
               case 176:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 175;
                  break;
               case 177:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 176;
                  break;
               case 178:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 177;
                  break;
               case 180:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 179;
                  break;
               case 181:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 180;
                  break;
               case 182:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 181;
                  break;
               case 183:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 182;
                  break;
               case 185:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 184;
                  break;
               case 186:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 185;
                  break;
               case 187:
               case 197:
                  if ((0x2000000020L & l) != 0L)
                     { jjCheckNAdd(165); }
                  break;
               case 188:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 187;
                  break;
               case 189:
                  if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 188;
                  break;
               case 190:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 189;
                  break;
               case 192:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 191;
                  break;
               case 193:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 192;
                  break;
               case 195:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 194;
                  break;
               case 196:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 195;
                  break;
               case 198:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 197;
                  break;
               case 199:
                  if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 198;
                  break;
               case 200:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 199;
                  break;
               case 202:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 201;
                  break;
               case 203:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 202;
                  break;
               case 205:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 204;
                  break;
               case 206:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 205;
                  break;
               case 207:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 206;
                  break;
               case 208:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 207;
                  break;
               case 210:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 209;
                  break;
               case 211:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 210;
                  break;
               case 214:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 213;
                  break;
               case 215:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 214;
                  break;
               case 216:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 215;
                  break;
               case 218:
                  if ((0x400000004000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 217;
                  break;
               case 219:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 218;
                  break;
               case 222:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 221;
                  break;
               case 223:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 222;
                  break;
               case 224:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 223;
                  break;
               case 226:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 225;
                  break;
               case 227:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 226;
                  break;
               case 228:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 227;
                  break;
               case 229:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 228;
                  break;
               case 230:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 229;
                  break;
               case 231:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 230;
                  break;
               case 233:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 232;
                  break;
               case 234:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 233;
                  break;
               case 235:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 234;
                  break;
               case 237:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 236;
                  break;
               case 243:
                  if (curChar == 92)
                     { jjCheckNAddStates(1169, 1174); }
                  break;
               case 247:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  { jjCheckNAddTwoStates(248, 249); }
                  break;
               case 248:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  { jjCheckNAddTwoStates(248, 249); }
                  break;
               case 249:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(247, 250); }
                  break;
               case 250:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  { jjCheckNAddStates(873, 881); }
                  break;
               case 251:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  { jjCheckNAddStates(882, 885); }
                  break;
               case 255:
               case 257:
               case 260:
               case 264:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(251); }
                  break;
               case 256:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 257;
                  break;
               case 258:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 259;
                  break;
               case 259:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 260;
                  break;
               case 261:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 262;
                  break;
               case 262:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 263;
                  break;
               case 263:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 264;
                  break;
               case 265:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(690, 692); }
                  break;
               case 266:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(690, 692); }
                  break;
               case 267:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(265, 268); }
                  break;
               case 268:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(886, 895); }
                  break;
               case 269:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(896, 900); }
                  break;
               case 273:
               case 275:
               case 278:
               case 282:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(269); }
                  break;
               case 274:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 275;
                  break;
               case 276:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 277;
                  break;
               case 277:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 278;
                  break;
               case 279:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 280;
                  break;
               case 280:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 281;
                  break;
               case 281:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 282;
                  break;
               case 283:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(901, 910); }
                  break;
               case 284:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(911, 915); }
                  break;
               case 286:
               case 288:
               case 291:
               case 295:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(284); }
                  break;
               case 287:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 288;
                  break;
               case 289:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 290;
                  break;
               case 290:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 291;
                  break;
               case 292:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 293;
                  break;
               case 293:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 294;
                  break;
               case 294:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 295;
                  break;
               case 296:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  { jjCheckNAddStates(916, 924); }
                  break;
               case 297:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  { jjCheckNAddStates(925, 928); }
                  break;
               case 299:
               case 301:
               case 304:
               case 308:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(297); }
                  break;
               case 300:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 301;
                  break;
               case 302:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 303;
                  break;
               case 303:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 304;
                  break;
               case 305:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 306;
                  break;
               case 306:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 307;
                  break;
               case 307:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 308;
                  break;
               case 310:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(929, 931); }
                  break;
               case 312:
                  if (curChar == 92)
                     { jjAddStates(1181, 1184); }
                  break;
               case 316:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(929, 931); }
                  break;
               case 317:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(932, 941); }
                  break;
               case 318:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(942, 946); }
                  break;
               case 321:
               case 323:
               case 326:
               case 330:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(318); }
                  break;
               case 322:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 323;
                  break;
               case 324:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 325;
                  break;
               case 325:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 326;
                  break;
               case 327:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 328;
                  break;
               case 328:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 329;
                  break;
               case 329:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 330;
                  break;
               case 331:
                  if ((0xffffffffefffffffL & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  { jjCheckNAddTwoStates(331, 332); }
                  break;
               case 332:
                  if (curChar == 92)
                     { jjAddStates(1185, 1188); }
                  break;
               case 336:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  { jjCheckNAddTwoStates(331, 332); }
                  break;
               case 337:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  { jjCheckNAddStates(947, 955); }
                  break;
               case 338:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  { jjCheckNAddStates(956, 959); }
                  break;
               case 341:
               case 343:
               case 346:
               case 350:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(338); }
                  break;
               case 342:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 343;
                  break;
               case 344:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 345;
                  break;
               case 345:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 346;
                  break;
               case 347:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 348;
                  break;
               case 348:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 349;
                  break;
               case 349:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 350;
                  break;
               case 352:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(960, 962); }
                  break;
               case 354:
                  if (curChar == 92)
                     { jjAddStates(1189, 1192); }
                  break;
               case 358:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(960, 962); }
                  break;
               case 359:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(963, 972); }
                  break;
               case 360:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(973, 977); }
                  break;
               case 363:
               case 365:
               case 368:
               case 372:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(360); }
                  break;
               case 364:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 365;
                  break;
               case 366:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 367;
                  break;
               case 367:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 368;
                  break;
               case 369:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 370;
                  break;
               case 370:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 371;
                  break;
               case 371:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 372;
                  break;
               case 373:
                  if ((0xffffffffefffffffL & l) == 0L)
                     break;
                  if (kind > 26)
                     kind = 26;
                  { jjCheckNAddTwoStates(373, 374); }
                  break;
               case 374:
                  if (curChar == 92)
                     { jjAddStates(1193, 1196); }
                  break;
               case 378:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 26)
                     kind = 26;
                  { jjCheckNAddTwoStates(373, 374); }
                  break;
               case 379:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 26)
                     kind = 26;
                  { jjCheckNAddStates(978, 986); }
                  break;
               case 380:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 26)
                     kind = 26;
                  { jjCheckNAddStates(987, 990); }
                  break;
               case 383:
               case 385:
               case 388:
               case 392:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(380); }
                  break;
               case 384:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 385;
                  break;
               case 386:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 387;
                  break;
               case 387:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 388;
                  break;
               case 389:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 390;
                  break;
               case 390:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 391;
                  break;
               case 391:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 392;
                  break;
               case 396:
                  if ((0x200000002000L & l) != 0L && kind > 74)
                     kind = 74;
                  break;
               case 397:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 396;
                  break;
               case 399:
                  if ((0x100000001000000L & l) != 0L && kind > 75)
                     kind = 75;
                  break;
               case 400:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 399;
                  break;
               case 402:
                  if ((0x100000001000000L & l) != 0L && kind > 76)
                     kind = 76;
                  break;
               case 403:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 402;
                  break;
               case 405:
                  if ((0x200000002000L & l) != 0L && kind > 77)
                     kind = 77;
                  break;
               case 406:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 405;
                  break;
               case 407:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 406;
                  break;
               case 409:
                  if ((0x80000000800000L & l) != 0L && kind > 78)
                     kind = 78;
                  break;
               case 410:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 409;
                  break;
               case 412:
                  if ((0x10000000100L & l) != 0L && kind > 79)
                     kind = 79;
                  break;
               case 413:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 412;
                  break;
               case 415:
                  if ((0x400000004000L & l) != 0L && kind > 80)
                     kind = 80;
                  break;
               case 416:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 415;
                  break;
               case 417:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 416;
                  break;
               case 418:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 417;
                  break;
               case 420:
                  if ((0x10000000100L & l) != 0L && kind > 81)
                     kind = 81;
                  break;
               case 421:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 420;
                  break;
               case 423:
                  if ((0x20000000200L & l) != 0L && kind > 82)
                     kind = 82;
                  break;
               case 424:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 423;
                  break;
               case 425:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 424;
                  break;
               case 427:
                  if ((0x200000002000L & l) != 0L && kind > 83)
                     kind = 83;
                  break;
               case 428:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 427;
                  break;
               case 429:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 428;
                  break;
               case 430:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 429;
                  break;
               case 432:
                  if ((0x100000001000000L & l) != 0L && kind > 84)
                     kind = 84;
                  break;
               case 433:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 432;
                  break;
               case 434:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 433;
                  break;
               case 435:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 434;
                  break;
               case 437:
                  if ((0x200000002000L & l) != 0L && kind > 85)
                     kind = 85;
                  break;
               case 438:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 437;
                  break;
               case 440:
                  if ((0x200000002000L & l) != 0L && kind > 86)
                     kind = 86;
                  break;
               case 441:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 440;
                  break;
               case 443:
                  if ((0x400000004000L & l) != 0L && kind > 87)
                     kind = 87;
                  break;
               case 444:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 443;
                  break;
               case 446:
                  if ((0x10000000100000L & l) != 0L && kind > 88)
                     kind = 88;
                  break;
               case 447:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 446;
                  break;
               case 449:
                  if ((0x800000008L & l) != 0L && kind > 89)
                     kind = 89;
                  break;
               case 450:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 449;
                  break;
               case 452:
                  if ((0x8000000080L & l) != 0L && kind > 90)
                     kind = 90;
                  break;
               case 453:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 452;
                  break;
               case 454:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 453;
                  break;
               case 456:
                  if ((0x1000000010L & l) != 0L && kind > 91)
                     kind = 91;
                  break;
               case 457:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 456;
                  break;
               case 458:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 457;
                  break;
               case 460:
                  if ((0x1000000010L & l) != 0L && kind > 92)
                     kind = 92;
                  break;
               case 461:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 460;
                  break;
               case 462:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 461;
                  break;
               case 463:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 462;
                  break;
               case 465:
                  if ((0x400000004000L & l) != 0L && kind > 93)
                     kind = 93;
                  break;
               case 466:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 465;
                  break;
               case 467:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 466;
                  break;
               case 468:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 467;
                  break;
               case 470:
                  if ((0x8000000080000L & l) != 0L && kind > 94)
                     kind = 94;
                  break;
               case 471:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 470;
                  break;
               case 473:
                  if ((0x8000000080000L & l) != 0L && kind > 95)
                     kind = 95;
                  break;
               case 475:
                  if ((0x400000004000000L & l) != 0L && kind > 96)
                     kind = 96;
                  break;
               case 476:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 475;
                  break;
               case 478:
                  if ((0x400000004000000L & l) != 0L && kind > 97)
                     kind = 97;
                  break;
               case 479:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 478;
                  break;
               case 480:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 479;
                  break;
               case 484:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  { jjCheckNAddTwoStates(248, 249); }
                  break;
               case 485:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(690, 692); }
                  break;
               case 486:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(265, 283); }
                  break;
               case 487:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(247, 296); }
                  break;
               case 494:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  { jjCheckNAddStates(1160, 1164); }
                  break;
               case 495:
                  if ((0x20000000200000L & l) != 0L)
                     { jjAddStates(1175, 1176); }
                  break;
               case 498:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(997, 999); }
                  break;
               case 502:
                  if (curChar == 92)
                     { jjAddStates(1197, 1200); }
                  break;
               case 506:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(997, 999); }
                  break;
               case 507:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1000, 1009); }
                  break;
               case 508:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1010, 1014); }
                  break;
               case 511:
               case 513:
               case 516:
               case 520:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(508); }
                  break;
               case 512:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 513;
                  break;
               case 514:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 515;
                  break;
               case 515:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 516;
                  break;
               case 517:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 518;
                  break;
               case 518:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 519;
                  break;
               case 519:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 520;
                  break;
               case 522:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(1015, 1017); }
                  break;
               case 524:
                  if (curChar == 92)
                     { jjAddStates(1201, 1204); }
                  break;
               case 528:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(1015, 1017); }
                  break;
               case 529:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1018, 1027); }
                  break;
               case 530:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1028, 1032); }
                  break;
               case 533:
               case 535:
               case 538:
               case 542:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(530); }
                  break;
               case 534:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 535;
                  break;
               case 536:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 537;
                  break;
               case 537:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 538;
                  break;
               case 539:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 540;
                  break;
               case 540:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 541;
                  break;
               case 541:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 542;
                  break;
               case 543:
                  if ((0x7fffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(1033, 1036); }
                  break;
               case 544:
                  if (curChar == 92)
                     { jjAddStates(1205, 1206); }
                  break;
               case 545:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(1033, 1036); }
                  break;
               case 546:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1037, 1046); }
                  break;
               case 547:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1047, 1051); }
                  break;
               case 551:
               case 553:
               case 556:
               case 560:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(547); }
                  break;
               case 552:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 553;
                  break;
               case 554:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 555;
                  break;
               case 555:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 556;
                  break;
               case 557:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 558;
                  break;
               case 558:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 559;
                  break;
               case 559:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 560;
                  break;
               case 562:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 496;
                  break;
               case 563:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 562;
                  break;
               case 565:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1061, 1071); }
                  break;
               case 566:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(567); }
                  break;
               case 568:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddStates(1072, 1076); }
                  break;
               case 569:
               case 605:
                  if ((0x7e0000007eL & l) != 0L && kind > 106)
                     kind = 106;
                  break;
               case 570:
               case 572:
               case 575:
               case 579:
               case 593:
               case 596:
               case 598:
               case 599:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(569); }
                  break;
               case 571:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 572;
                  break;
               case 573:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 574;
                  break;
               case 574:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 575;
                  break;
               case 576:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 577;
                  break;
               case 577:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 578;
                  break;
               case 578:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 579;
                  break;
               case 580:
               case 582:
               case 585:
               case 589:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(566); }
                  break;
               case 581:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 582;
                  break;
               case 583:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 584;
                  break;
               case 584:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 585;
                  break;
               case 586:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 587;
                  break;
               case 587:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 588;
                  break;
               case 588:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 589;
                  break;
               case 590:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 591;
                  break;
               case 591:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 592;
                  break;
               case 592:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 593;
                  break;
               case 594:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 595;
                  break;
               case 595:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 596;
                  break;
               case 597:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 598;
                  break;
               case 600:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddStates(1077, 1081); }
                  break;
               case 601:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 602;
                  break;
               case 602:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 603;
                  break;
               case 603:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 604;
                  break;
               case 604:
               case 608:
               case 610:
               case 611:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(605); }
                  break;
               case 606:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 607;
                  break;
               case 607:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 608;
                  break;
               case 609:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 610;
                  break;
               case 691:
                  if (curChar == 64)
                     { jjAddStates(1165, 1168); }
                  break;
               case 694:
               case 695:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(1082, 1084); }
                  break;
               case 696:
                  if ((0x8000000080000L & l) != 0L && kind > 61)
                     kind = 61;
                  break;
               case 697:
               case 741:
                  if ((0x2000000020L & l) != 0L)
                     { jjCheckNAdd(696); }
                  break;
               case 698:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 697;
                  break;
               case 699:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 698;
                  break;
               case 700:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 699;
                  break;
               case 701:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 700;
                  break;
               case 702:
                  if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 701;
                  break;
               case 703:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 702;
                  break;
               case 704:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 703;
                  break;
               case 706:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(707, 708); }
                  break;
               case 707:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(1082, 1084); }
                  break;
               case 708:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1085, 1094); }
                  break;
               case 709:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1095, 1099); }
                  break;
               case 713:
               case 715:
               case 718:
               case 722:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(709); }
                  break;
               case 714:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 715;
                  break;
               case 716:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 717;
                  break;
               case 717:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 718;
                  break;
               case 719:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 720;
                  break;
               case 720:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 721;
                  break;
               case 721:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 722;
                  break;
               case 723:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(707, 724); }
                  break;
               case 724:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1100, 1109); }
                  break;
               case 725:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1110, 1114); }
                  break;
               case 727:
               case 729:
               case 732:
               case 736:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(725); }
                  break;
               case 728:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 729;
                  break;
               case 730:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 731;
                  break;
               case 731:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 732;
                  break;
               case 733:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 734;
                  break;
               case 734:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 735;
                  break;
               case 735:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 736;
                  break;
               case 742:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 741;
                  break;
               case 743:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 742;
                  break;
               case 744:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 743;
                  break;
               case 745:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 744;
                  break;
               case 746:
                  if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 745;
                  break;
               case 747:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 746;
                  break;
               case 748:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 747;
                  break;
               case 751:
               case 752:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(1121, 1123); }
                  break;
               case 753:
                  if ((0x10000000100000L & l) != 0L && kind > 62)
                     kind = 62;
                  break;
               case 754:
               case 797:
                  if ((0x4000000040000L & l) != 0L)
                     { jjCheckNAdd(753); }
                  break;
               case 755:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 754;
                  break;
               case 756:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 755;
                  break;
               case 757:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 756;
                  break;
               case 758:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 757;
                  break;
               case 759:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 758;
                  break;
               case 760:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 759;
                  break;
               case 762:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(763, 764); }
                  break;
               case 763:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(1121, 1123); }
                  break;
               case 764:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1124, 1133); }
                  break;
               case 765:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1134, 1138); }
                  break;
               case 769:
               case 771:
               case 774:
               case 778:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(765); }
                  break;
               case 770:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 771;
                  break;
               case 772:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 773;
                  break;
               case 773:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 774;
                  break;
               case 775:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 776;
                  break;
               case 776:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 777;
                  break;
               case 777:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 778;
                  break;
               case 779:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(763, 780); }
                  break;
               case 780:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1139, 1148); }
                  break;
               case 781:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1149, 1153); }
                  break;
               case 783:
               case 785:
               case 788:
               case 792:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(781); }
                  break;
               case 784:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 785;
                  break;
               case 786:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 787;
                  break;
               case 787:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 788;
                  break;
               case 789:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 790;
                  break;
               case 790:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 791;
                  break;
               case 791:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 792;
                  break;
               case 798:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 797;
                  break;
               case 799:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 798;
                  break;
               case 800:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 799;
                  break;
               case 801:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 800;
                  break;
               case 802:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 801;
                  break;
               case 803:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 802;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 807:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 73)
                        kind = 73;
                     { jjCheckNAddTwoStates(248, 249); }
                  }
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(690, 692); }
                  break;
               case 220:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 73)
                        kind = 73;
                     { jjCheckNAddTwoStates(248, 249); }
                  }
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(690, 692); }
                  break;
               case 804:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 73)
                        kind = 73;
                     { jjCheckNAddTwoStates(248, 249); }
                  }
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(690, 692); }
                  break;
               case 173:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 73)
                        kind = 73;
                     { jjCheckNAddTwoStates(248, 249); }
                  }
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(690, 692); }
                  break;
               case 692:
               case 23:
               case 26:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddTwoStates(24, 25); }
                  break;
               case 806:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 73)
                        kind = 73;
                     { jjCheckNAddTwoStates(248, 249); }
                  }
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(690, 692); }
                  break;
               case 2:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 73)
                     kind = 73;
                  { jjCheckNAddStates(1160, 1164); }
                  break;
               case 808:
               case 24:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddTwoStates(24, 25); }
                  break;
               case 3:
               case 5:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 47)
                     kind = 47;
                  { jjCheckNAddTwoStates(3, 4); }
                  break;
               case 81:
               case 82:
               case 125:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(242, 246); }
                  break;
               case 85:
               case 86:
               case 90:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(252, 256); }
                  break;
               case 247:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 73)
                     kind = 73;
                  { jjCheckNAddTwoStates(248, 249); }
                  break;
               case 248:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 73)
                     kind = 73;
                  { jjCheckNAddTwoStates(248, 249); }
                  break;
               case 265:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(690, 692); }
                  break;
               case 266:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(690, 692); }
                  break;
               case 310:
               case 316:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(929, 931); }
                  break;
               case 331:
               case 336:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 25)
                     kind = 25;
                  { jjCheckNAddTwoStates(331, 332); }
                  break;
               case 352:
               case 358:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(960, 962); }
                  break;
               case 373:
               case 378:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 26)
                     kind = 26;
                  { jjCheckNAddTwoStates(373, 374); }
                  break;
               case 484:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 73)
                     kind = 73;
                  { jjCheckNAddTwoStates(248, 249); }
                  break;
               case 485:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(690, 692); }
                  break;
               case 498:
               case 506:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(997, 999); }
                  break;
               case 522:
               case 528:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1015, 1017); }
                  break;
               case 543:
               case 545:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1033, 1036); }
                  break;
               case 694:
               case 695:
               case 707:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1082, 1084); }
                  break;
               case 751:
               case 752:
               case 763:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1121, 1123); }
                  break;
               default : if (i1 == 0 || l1 == 0 || i2 == 0 ||  l2 == 0) break; else break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 804 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_1(){
   switch(curChar)
   {
      case 42:
         return jjMoveStringLiteralDfa1_1(0x8L);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa1_1(long active0){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 1;
   }
   switch(curChar)
   {
      case 47:
         if ((active0 & 0x8L) != 0L)
            return jjStopAtPos(1, 3);
         break;
      default :
         return 2;
   }
   return 2;
}
static final int[] jjnextStates = {
   619, 620, 621, 622, 623, 624, 403, 625, 626, 627, 406, 628, 629, 630, 409, 631, 
   632, 633, 413, 634, 635, 636, 416, 637, 638, 639, 419, 640, 641, 642, 424, 643, 
   644, 645, 427, 646, 647, 648, 431, 649, 650, 651, 436, 652, 653, 654, 441, 655, 
   656, 657, 444, 658, 659, 660, 447, 661, 662, 663, 450, 664, 665, 666, 453, 667, 
   668, 669, 456, 670, 671, 672, 460, 673, 674, 675, 464, 676, 677, 678, 469, 679, 
   680, 681, 474, 682, 683, 684, 477, 685, 686, 687, 479, 688, 689, 690, 482, 691, 
   692, 693, 486, 694, 695, 696, 488, 245, 246, 247, 0, 248, 1, 498, 490, 499, 
   491, 492, 493, 495, 490, 496, 491, 492, 493, 490, 491, 492, 493, 400, 401, 404, 
   407, 410, 414, 417, 420, 425, 428, 432, 437, 442, 445, 448, 451, 454, 457, 461, 
   465, 470, 475, 478, 480, 483, 487, 358, 359, 379, 380, 360, 316, 317, 337, 338, 
   318, 226, 237, 243, 272, 88, 273, 59, 23, 42, 57, 23, 42, 756, 799, 801, 
   757, 785, 699, 743, 745, 700, 729, 496, 491, 492, 495, 490, 493, 499, 491, 492, 
   498, 490, 493, 3, 7, 11, 12, 14, 17, 9, 10, 4, 3, 9, 10, 4, 
   24, 28, 32, 33, 35, 38, 30, 31, 25, 24, 30, 31, 25, 44, 46, 47, 
   49, 52, 45, 31, 24, 25, 45, 31, 24, 25, 77, 78, 79, 80, 155, 157, 
   81, 141, 82, 83, 87, 88, 124, 84, 120, 122, 85, 106, 83, 86, 87, 88, 
   89, 83, 86, 92, 96, 97, 99, 102, 94, 88, 89, 95, 83, 86, 94, 88, 
   89, 95, 83, 108, 110, 111, 113, 116, 109, 86, 88, 89, 95, 83, 109, 86, 
   88, 89, 95, 121, 85, 106, 123, 85, 106, 82, 127, 131, 132, 134, 137, 129, 
   83, 88, 124, 130, 82, 129, 83, 88, 124, 130, 143, 145, 146, 148, 151, 144, 
   82, 83, 88, 124, 130, 144, 82, 83, 88, 124, 130, 156, 81, 141, 158, 81, 
   141, 165, 166, 168, 254, 257, 261, 262, 264, 267, 259, 260, 255, 254, 259, 260, 
   255, 272, 275, 279, 280, 282, 285, 277, 278, 88, 273, 272, 277, 278, 88, 273, 
   290, 292, 293, 295, 298, 291, 278, 272, 88, 273, 291, 278, 272, 88, 273, 303, 
   305, 306, 308, 311, 304, 260, 254, 255, 304, 260, 254, 255, 316, 317, 318, 316, 
   324, 327, 328, 330, 333, 325, 326, 317, 318, 316, 325, 326, 317, 318, 337, 344, 
   347, 348, 350, 353, 345, 346, 338, 337, 345, 346, 338, 358, 359, 360, 358, 366, 
   369, 370, 372, 375, 367, 368, 359, 360, 358, 367, 368, 359, 360, 379, 386, 389, 
   390, 392, 395, 387, 388, 380, 379, 387, 388, 380, 503, 527, 549, 507, 550, 567, 
   504, 505, 508, 504, 514, 517, 518, 520, 523, 515, 516, 505, 508, 504, 515, 516, 
   505, 508, 528, 529, 530, 528, 536, 539, 540, 542, 545, 537, 538, 529, 530, 528, 
   537, 538, 529, 530, 549, 506, 507, 550, 549, 553, 557, 558, 560, 563, 555, 507, 
   550, 556, 549, 555, 507, 550, 556, 503, 527, 549, 506, 507, 550, 567, 571, 606, 
   572, 586, 587, 589, 592, 573, 596, 600, 603, 605, 575, 575, 576, 577, 579, 582, 
   607, 612, 615, 617, 611, 701, 711, 712, 701, 715, 719, 720, 722, 725, 717, 718, 
   711, 712, 701, 717, 718, 711, 712, 731, 733, 734, 736, 739, 732, 718, 701, 711, 
   712, 732, 718, 701, 711, 712, 744, 700, 729, 746, 700, 729, 758, 767, 768, 758, 
   771, 775, 776, 778, 781, 773, 774, 767, 768, 758, 773, 774, 767, 768, 787, 789, 
   790, 792, 795, 788, 774, 758, 767, 768, 788, 774, 758, 767, 768, 800, 757, 785, 
   802, 757, 785, 254, 272, 88, 273, 255, 698, 754, 755, 809, 250, 252, 253, 271, 
   289, 302, 569, 570, 179, 192, 202, 217, 22, 56, 58, 23, 42, 5, 6, 319, 
   321, 322, 323, 339, 341, 342, 343, 361, 363, 364, 365, 381, 383, 384, 385, 509, 
   511, 512, 513, 531, 533, 534, 535, 551, 552, 2, 3, 5, 493, 485, 486, 492, 
   484, 487, 266, 88, 267, 750, 793, 795, 751, 779, 693, 737, 739, 694, 723, 490, 
   485, 486, 489, 484, 487, 613, 614, 615, 616, 617, 618, 397, 619, 620, 621, 400, 
   622, 623, 624, 403, 625, 626, 627, 407, 628, 629, 630, 410, 631, 632, 633, 413, 
   634, 635, 636, 418, 637, 638, 639, 421, 640, 641, 642, 425, 643, 644, 645, 430, 
   646, 647, 648, 435, 649, 650, 651, 438, 652, 653, 654, 441, 655, 656, 657, 444, 
   658, 659, 660, 447, 661, 662, 663, 450, 664, 665, 666, 454, 667, 668, 669, 458, 
   670, 671, 672, 463, 673, 674, 675, 468, 676, 677, 678, 471, 679, 680, 681, 473, 
   682, 683, 684, 476, 685, 686, 687, 480, 688, 689, 690, 482, 239, 240, 241, 0, 
   242, 1, 492, 484, 493, 485, 486, 487, 489, 484, 490, 485, 486, 487, 484, 485, 
   486, 487, 394, 395, 398, 401, 404, 408, 411, 414, 419, 422, 426, 431, 436, 439, 
   442, 445, 448, 451, 455, 459, 464, 469, 472, 474, 477, 481, 352, 353, 373, 374, 
   354, 310, 311, 331, 332, 312, 220, 231, 237, 248, 251, 255, 256, 258, 261, 253, 
   254, 249, 248, 253, 254, 249, 266, 269, 273, 274, 276, 279, 271, 272, 88, 267, 
   266, 271, 272, 88, 267, 284, 286, 287, 289, 292, 285, 272, 266, 88, 267, 285, 
   272, 266, 88, 267, 297, 299, 300, 302, 305, 298, 254, 248, 249, 298, 254, 248, 
   249, 310, 311, 312, 310, 318, 321, 322, 324, 327, 319, 320, 311, 312, 310, 319, 
   320, 311, 312, 331, 338, 341, 342, 344, 347, 339, 340, 332, 331, 339, 340, 332, 
   352, 353, 354, 352, 360, 363, 364, 366, 369, 361, 362, 353, 354, 352, 361, 362, 
   353, 354, 373, 380, 383, 384, 386, 389, 381, 382, 374, 373, 381, 382, 374, 497, 
   521, 543, 501, 544, 561, 498, 499, 502, 498, 508, 511, 512, 514, 517, 509, 510, 
   499, 502, 498, 509, 510, 499, 502, 522, 523, 524, 522, 530, 533, 534, 536, 539, 
   531, 532, 523, 524, 522, 531, 532, 523, 524, 543, 500, 501, 544, 543, 547, 551, 
   552, 554, 557, 549, 501, 544, 550, 543, 549, 501, 544, 550, 497, 521, 543, 500, 
   501, 544, 561, 565, 600, 566, 580, 581, 583, 586, 567, 590, 594, 597, 599, 569, 
   569, 570, 571, 573, 576, 601, 606, 609, 611, 605, 695, 705, 706, 695, 709, 713, 
   714, 716, 719, 711, 712, 705, 706, 695, 711, 712, 705, 706, 725, 727, 728, 730, 
   733, 726, 712, 695, 705, 706, 726, 712, 695, 705, 706, 738, 694, 723, 740, 694, 
   723, 752, 761, 762, 752, 765, 769, 770, 772, 775, 767, 768, 761, 762, 752, 767, 
   768, 761, 762, 781, 783, 784, 786, 789, 782, 768, 752, 761, 762, 782, 768, 752, 
   761, 762, 794, 751, 779, 796, 751, 779, 248, 266, 88, 267, 249, 692, 748, 749, 
   803, 244, 246, 247, 265, 283, 296, 563, 564, 173, 186, 196, 211, 313, 315, 316, 
   317, 333, 335, 336, 337, 355, 357, 358, 359, 375, 377, 378, 379, 503, 505, 506, 
   507, 525, 527, 528, 529, 545, 546, 
};
private static final boolean jjCanMove_0(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec2[i2] & l2) != 0L);
      default :
         if ((jjbitVec0[i1] & l1) != 0L)
            return true;
         return false;
   }
}

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, null, "\53", "\55", "\50", 
"\51", null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, "\175", "\133", "\135", "\56", null, 
"\73", "\72", "\52", "\57", "\75", "\174", "\76", "\176", null, "\176\75", "\174\75", 
"\136\75", "\44\75", "\52\75", "\74\41\55\55", "\55\55\76", null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, };
protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   if (jjmatchedPos < 0)
   {
      if (image == null)
         curTokenImage = "";
      else
         curTokenImage = image.toString();
      beginLine = endLine = input_stream.getEndLine();
      beginColumn = endColumn = input_stream.getEndColumn();
   }
   else
   {
      String im = jjstrLiteralImages[jjmatchedKind];
      curTokenImage = (im == null) ? input_stream.GetImage() : im;
      beginLine = input_stream.getBeginLine();
      beginColumn = input_stream.getBeginColumn();
      endLine = input_stream.getEndLine();
      endColumn = input_stream.getEndColumn();
   }
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token specialToken = null;
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(Exception e)
   {
      jjmatchedKind = 0;
      jjmatchedPos = -1;
      matchedToken = jjFillToken();
      matchedToken.specialToken = specialToken;
      return matchedToken;
   }
   image = jjimage;
   image.setLength(0);
   jjimageLen = 0;

   for (;;)
   {
     switch(curLexState)
     {
       case 0:
         jjmatchedKind = 5;
         jjmatchedPos = -1;
         curPos = 0;
         curPos = jjMoveStringLiteralDfa0_0();
         if (jjmatchedPos < 0 || (jjmatchedPos == 0 && jjmatchedKind > 108))
         {
            jjmatchedKind = 108;
            jjmatchedPos = 0;
         }
         break;
       case 1:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_1();
         if (jjmatchedPos == 0 && jjmatchedKind > 2)
         {
            jjmatchedKind = 2;
         }
         break;
       case 2:
         jjmatchedKind = 5;
         jjmatchedPos = -1;
         curPos = 0;
         curPos = jjMoveStringLiteralDfa0_2();
         if (jjmatchedPos < 0 || (jjmatchedPos == 0 && jjmatchedKind > 108))
         {
            jjmatchedKind = 108;
            jjmatchedPos = 0;
         }
         break;
       case 3:
         jjmatchedKind = 5;
         jjmatchedPos = -1;
         curPos = 0;
         curPos = jjMoveStringLiteralDfa0_3();
         if (jjmatchedPos < 0 || (jjmatchedPos == 0 && jjmatchedKind > 108))
         {
            jjmatchedKind = 108;
            jjmatchedPos = 0;
         }
         break;
     }
     if (jjmatchedKind != 0x7fffffff)
     {
        if (jjmatchedPos + 1 < curPos)
           input_stream.backup(curPos - jjmatchedPos - 1);
        if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           matchedToken = jjFillToken();
           matchedToken.specialToken = specialToken;
           TokenLexicalActions(matchedToken);
       if (jjnewLexState[jjmatchedKind] != -1)
         curLexState = jjnewLexState[jjmatchedKind];
           return matchedToken;
        }
        else if ((jjtoSkip[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           if ((jjtoSpecial[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
           {
              matchedToken = jjFillToken();
              if (specialToken == null)
                 specialToken = matchedToken;
              else
              {
                 matchedToken.specialToken = specialToken;
                 specialToken = (specialToken.next = matchedToken);
              }
              SkipLexicalActions(matchedToken);
           }
           else
              SkipLexicalActions(null);
         if (jjnewLexState[jjmatchedKind] != -1)
           curLexState = jjnewLexState[jjmatchedKind];
           continue EOFLoop;
        }
        jjimageLen += jjmatchedPos + 1;
      if (jjnewLexState[jjmatchedKind] != -1)
        curLexState = jjnewLexState[jjmatchedKind];
        curPos = 0;
        jjmatchedKind = 0x7fffffff;
        try {
           curChar = input_stream.readChar();
           continue;
        }
        catch (java.io.IOException e1) { }
     }
     int error_line = input_stream.getEndLine();
     int error_column = input_stream.getEndColumn();
     String error_after = null;
     boolean EOFSeen = false;
     try { input_stream.readChar(); input_stream.backup(1); }
     catch (java.io.IOException e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
        if (curChar == '\n' || curChar == '\r') {
           error_line++;
           error_column = 0;
        }
        else
           error_column++;
     }
     if (!EOFSeen) {
        input_stream.backup(1);
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
     }
     throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
   }
  }
}

void SkipLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      default :
         break;
   }
}
void TokenLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      case 22 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                   matchedToken.image = "";
         break;
      case 73 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                             matchedToken.image = CSSParseHelper.validateIdentifier(image);
         break;
      case 74 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "em";
         break;
      case 75 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "ex";
         break;
      case 76 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "px";
         break;
      case 77 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "rem";
         break;
      case 78 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "vw";
         break;
      case 79 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "vh";
         break;
      case 80 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "vmin";
         break;
      case 81 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "ch";
         break;
      case 82 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "dpi";
         break;
      case 83 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "dpcm";
         break;
      case 84 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "dppx";
         break;
      case 85 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "cm";
         break;
      case 86 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "mm";
         break;
      case 87 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "in";
         break;
      case 88 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "pt";
         break;
      case 89 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "pc";
         break;
      case 90 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "deg";
         break;
      case 91 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "rad";
         break;
      case 92 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "grad";
         break;
      case 93 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "turn";
         break;
      case 94 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "ms";
         break;
      case 95 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "s";
         break;
      case 96 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "hz";
         break;
      case 97 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "khz";
         break;
      case 98 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "%";
         break;
      case 100 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                       matchedToken.image = CSSParseHelper.trimUrl(image);
         break;
      case 105 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                matchedToken.image = image.toString ();
         break;
      case 108 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
    s_aLogger.error("Illegal character: " + image.toString());
         break;
      default :
         break;
   }
}
private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

    /** Constructor. */
    public ParserCSS30TokenManager(CharStream stream){


    input_stream = stream;
  }

  /** Constructor. */
  public ParserCSS30TokenManager (CharStream stream, int lexState){
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Reinitialise parser. */
  public void ReInit(CharStream stream)
  {
	
    jjmatchedPos = jjnewStateCnt = 0;
    curLexState = defaultLexState;
    input_stream = stream;
    ReInitRounds();
  }

  private void ReInitRounds()
  {
    int i;
    jjround = 0x80000001;
    for (i = 810; i-- > 0;)
      jjrounds[i] = 0x80000000;
  }

  /** Reinitialise parser. */
  public void ReInit( CharStream stream, int lexState)
  {
  
    ReInit( stream);
    SwitchTo(lexState);
  }

  /** Switch to specified lex state. */
  public void SwitchTo(int lexState)
  {
    if (lexState >= 4 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
    else
      curLexState = lexState;
  }

/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
   "IN_COMMENT",
   "IN_NTH",
   "IN_UNKNOWN_RULE",
};

/** Lex State array. */
public static final int[] jjnewLexState = {
   -1, 1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, 2, -1, -1, -1, -1, -1, 
};
static final long[] jjtoToken = {
   0xffffffff07c03ff1L, 0x17f7ffffffffL, 
};
static final long[] jjtoSkip = {
   0x8L, 0x80000000000L, 
};
static final long[] jjtoSpecial = {
   0x8L, 0x80000000000L, 
};
static final long[] jjtoMore = {
   0x6L, 0x0L, 
};
    protected CharStream  input_stream;

    private final int[] jjrounds = new int[810];
    private final int[] jjstateSet = new int[2 * 810];

    private final StringBuilder jjimage = new StringBuilder();
    private StringBuilder image = jjimage;
    private int jjimageLen;
    private int lengthOfMatch;
    
    protected int curChar;
}
